#
# Incoming target
#

# The directory where the data producer writes data items to.
# Syntax: incoming-target = [[<user-name>@]<host-name>:[<rsync-module>:]]<dir-path>
# * If you set a <host-name> and a <dir-path> it will be assumed that the target is a directory on a 
#   remote host that has an accessible ssh server and that this host is allowed to connect to.
# * If you set a <host-name>, an <rsync-module> and a <dir-path>, it will be assumed that that the 
#   target is a directory on a remote host that has an accessible ssh server and an accessible rsync 
#   server that this host is allowed to connect to.     
# Note that setting the <rsync-module> still required an ssh connections for some operations, so
# setting this parameter just means that the bulk transfer is using the rsync server.   
incoming-target = data/incoming

# The string prepended to incoming data sets. '%t' will be replaced with the current time. 
prefix-for-incoming = %t_

# If set to true, the initial test for accessibility of the incoming store will be skipped.
skip-accessibility-test-on-incoming = false

# When set to <true>, then the incoming directory will be treated as a mounted remote directory.
# This is only relevant when the incoming-target does not contain a <host-name> (which makes it 
# explicit that the incoming target is remote).
#treat-incoming-as-remote = <true or false> 

#
# Buffer
#

# The local directory to store the paths to be transfered temporarily
buffer-dir = data/buffer

# If free disk space goes below value defined here, a notification email will be sent.
# Value must be specified in kilobytes (1048576 = 1024 * 1024 = 1GB).
# Comment this out or set it to a negative value in order to disable the high-water mark feature 
# for the buffer.
buffer-dir-highwater-mark = 1048576

#
# Outgoing target
#

# The remote target to move the data to.
# Syntax: outgoing-target = [[<user-name>@]<host-name>:[<rsync-module>:]]<dir-path>
# * If you set a <host-name> and a <dir-path> it will be assumed that the target is a directory on a 
#   remote host that has an accessible ssh server and that this host is allowed to connect to.
# * If you set a <host-name>, an <rsync-module> and a <dir-path>, it will be assumed that that the 
#   target is a directory on a remote host that has an accessible ssh server and an accessible rsync 
#   server that this host is allowed to connect to.     
# Note that setting the <rsync-module> still required an ssh connections for some operations, so
# setting this parameter just means that the bulk transfer is using the rsync server.   
outgoing-target = data/outgoing

# If free disk space goes below value defined here, a notification email will be sent.
# Value must be specified in kilobytes (1048576 = 1024 * 1024 = 1GB). 
# Comment this out or set it to a negative value in order to disable the high-water mark feature
# for the outgoing directory.
outgoing-target-highwater-mark = 1048576

# If set to true, the initial test for accessibility of the outgoing store will be skipped.
skip-accessibility-test-on-outgoing = false

#
# Optional feature: handshake on incoming data 
#

# Path to the script file that will be executed to check whether an incoming data item is already 
# complete or not.
#data-completed-script = <path to script> 

# Timeout (in seconds) for the data-completed-script. If the script exceeds this timeout, it will 
# be killed and an error is reported. 
#data-completed-script-timeout = <timeout in seconds> 

#
# Optional feature: manual intervention handling
#

# The local directory to store paths that need manual intervention (mandatory, but only used when 
# manual-intervention-regex is set 
manual-intervention-dir = data/manual_intervention

# Regular expression of paths that need manual intervention, default prefix-for-incoming 
# corresponds to regex '[0-9]{14}_'
# Set this to enable manual intervention checking.
#manual-intervention-regex = <regex of paths that need manual intervention, default prefix-for-incoming corresponds to '[0-9]{14}_'>

#
# Optional feature: The script which should be called when a file/directory has been 
#                   successfully transfered to the outgoing directory. 
#                   The script will be called with one parameter - the transfered item name.
#
#transfer-finished-executable = <path to the script which will be invoked on successful transfer completion>

#
# Optional feature: data cleansing
#

# The regular expression of paths that should be removed before moving an item to outgoing
#cleansing-regex = <regex>

#
# Optional feature: creation of an extra (immutable) copy on the Datamover server for processing
#

# The (local) directory in which an extra copy of each incoming data item will be created.
# The copy needs to be treated immutable, i.e. it may be read and deleted, but not changed!
#extra-copy-dir = <path>

#
# Optional feature: data transformation 
#

# The name of the class (together with the list of packages this class belongs to) 
# with implementation of data transformation that will be performed in the buffer.
#transformator.class = <class name>

# Additional transformator properties:
#transformator.<property 1> = <property value>
#transformator.<property 2> = <property value>
#...

#
# Timing parameters
#

# The time period (in seconds) that an incoming data item needs to be 'quiet' (i.e. no write 
# access is sensed on it) before moving it to the buffer will start.
#quiet-period = <time period in seconds>

# Time interval (in seconds) between two checks for incoming data.
#check-interval = <time interval in seconds>

# Time interval (in seconds) between two checks on the buffer directory.
# (You will probably not want to change this.)
#check-interval-internal = <time interval in seconds>

# Time period (in seconds) without any write activity on the target before a copy process is 
# considered stalled.
#inactivity-period = <time period before a copy process is considered stalled in seconds>

# Time period (in seconds) to wait after a failure has occurred before the operation is re-tried.
#failure-interval = <time period in seconds>

# Maximal number of re-tries of a failed operation before giving up on it.
#max-retries = <maximal number of retries>

# Timeout (in seconds) for a remote connection to be established. Default: 100 sec
#remote-connection-timeout = <timeout in seconds>

# Timeout (in seconds) for a remote operations to complete. Default: 100 sec
#remote-operation-timeout = <timeout in seconds>

#
# Explicitly set executables (leave blank to let Datamover find them itself)
#

# The path to the rsync executable. Only required if the first occurrence of rsync in the PATH is 
# not what you want to use for the Datamover.
#rsync-executable = <path to rsync>

# If set to true, rsync is called in such a way that target files that already exist are
# overwritten rather than appended to.
#rsync-overwrite = <true or false, default is false>

# The basic parameters passed to rsync. If not set here, these default to "--archive, --delete-before, --inplace"
#
# Note: If you configure this property, the rsync command line will be composed of the parameters here
# and those set in extra-rsync-params. Configuration parameter rsync-overwrite will be ignored.
# It isn't recommended to use this parameter. Use it only if special rsync command line options are needed.
#basic-rsync-params = <coma-separated list of additional params, e.g.--archive, --delete-before, --inplace>

# May be used to explicitely add parameters to the rsync command line.
extra-rsync-params = --progress

# The path to the rsync executable on the incoming host. 
# Only used when ssh tunneling mode is used for the incoming target. 
# Only required if the first occurrence of rsync in the PATH on the incoming host is not what you 
# want to use for the Datamover.
#incoming-host-rsync-executable = <path to rsync>

# The path to the rsync executable on the outgoing host. 
# Only used when ssh tunneling mode is used for the outgoing target. 
# Only required if the first occurrence of rsync in the PATH on the outgoing host is not what you 
# want to use for the Datamover.
#outgoing-host-rsync-executable = <path to rsync>

# Path to the 'lastchanged' executable of Datamover on the remote incoming host
# Specify only when using an ssh tunnel or an rsync server for copying the incoming data. 
#incoming-host-lastchanged-executable = <path of 'lastchanged' executable>

# Path to the GNU find executable on the remote incoming host.
# Specify only when using an ssh tunnel or an rsync server for copying the incoming data. 
#incoming-host-find-executable = <path of 'find' executable>
#
# Path to the 'lastchanged' executable of Datamover on the remote outgoing host
# Specify only when using an ssh tunnel or an rsync server for copying the outgoing data. 
#outgoing-host-lastchanged-executable = <path of 'lastchanged' executable>

# Path to the GNU find executable on the remote outgoing host.
# Specify only when using an ssh tunnel or an rsync server for copying the outgoing data. 
#outgoing-host-find-executable = <path of 'find' executable>

# The path to the ln executable (for hard link creation). Only required if the first occurrence of 
# ln in the PATH is not what you want to Datamover to use.
#ln-executable = <path to ln>

# The path to the ssh executable (for SSH tunnels). Only required if the first occurrence of 
# ssh in the PATH is not what you want to Datamover to use.
#ssh-executable = <path to ssh>

