/*
 * Copyright 2012 ETH Zuerich, CISD
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ch.systemsx.cisd.openbis.uitest.page;

import ch.systemsx.cisd.openbis.uitest.type.SampleType;
import ch.systemsx.cisd.openbis.uitest.webdriver.Locate;
import ch.systemsx.cisd.openbis.uitest.widget.Button;
import ch.systemsx.cisd.openbis.uitest.widget.Checkbox;
import ch.systemsx.cisd.openbis.uitest.widget.Text;
import ch.systemsx.cisd.openbis.uitest.widget.TextArea;

@SuppressWarnings("unused")
public class AddSampleTypeDialog
{

    @Locate("openbis_dialog-code-field")
    private Text code;

    @Locate("openbis_add-type-dialog-description-field")
    private TextArea description;

    @Locate("openbis_add-type-dialog-listable")
    private Checkbox listable;

    @Locate("openbis_add-type-dialog-show-container")
    private Checkbox showContainer;

    @Locate("openbis_add-type-dialog-show-parents")
    private Checkbox showParents;

    @Locate("openbis_add-type-dialog-subcode-unique")
    private Checkbox uniqueSubcodes;

    @Locate("openbis_add-type-dialog-autogenerated-code")
    private Checkbox generateCodesAutomatically;

    @Locate("openbis_add-type-dialog-show-parent-metadata")
    private Checkbox showParentMetadata;

    @Locate("openbis_add-type-dialog-generated-code-prefix")
    private Text generatedCodePrefix;

    @Locate("openbis_add-SAMPLE-type-dialog-script-chooser")
    private Text scriptName;

    @Locate("openbis_dialog-save-button")
    private Button save;

    @Locate("openbis_dialog-cancel-button")
    private Button cancel;

    public void save()
    {
        save.click();
    }

    public void cancel()
    {
        cancel.click();
    }

    public void setCode(String code)
    {
        this.code.write(code);
    }

    public void setListable(boolean checked)
    {
        listable.set(checked);
    }

    public void setShowContainer(boolean checked)
    {
        showContainer.set(checked);
    }

    public void setShowParents(boolean checked)
    {
        showParents.set(checked);
    }

    public void setScriptName(String name)
    {
        scriptName.write(name);
    }

    public void fillWith(SampleType sampleType)
    {
        setCode(sampleType.getCode());
        setListable(sampleType.isListable());
        setShowContainer(sampleType.isShowContainer());
        setShowParents(sampleType.isShowParents());
        if (sampleType.getValidationScript() != null)
        {
            setScriptName(sampleType.getValidationScript().getName());
        }
    }

}
