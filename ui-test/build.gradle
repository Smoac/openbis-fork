evaluationDependsOn(':commonbase')
evaluationDependsOn(':common')
evaluationDependsOn(':openbis_api')
evaluationDependsOn(':openbis-common')
evaluationDependsOn(':authentication')
evaluationDependsOn(':dbmigration')
evaluationDependsOn(':openbis')
evaluationDependsOn(':datastore_server')
evaluationDependsOn(':openbis_standard_technologies')

apply from: '../gradle/javaproject.gradle'

sourceSets { 
    main {
        java {
            srcDirs = ['sourceTest/java']
        }
    }
    test {
        java {
            srcDirs = ['source/java']
        }
        resources {
            srcDirs = ['resource']
        }
    }
}

configurations.create('testRuntimeFirst')
configurations.create('testRuntimeSecond')
configurations.create('externalDss')

dependencies {
    api project(path: ':datastore_server'),
        project(path: ':screening'),
        project(path: ':openbis_standard_technologies'),
        'testng:testng:6.8-CISD',
        'selenium:selenium-java:3.141.59'
			
	testRuntimeFirst 'javax:servlet-api:3.1.0', 'reflections:reflections:0.9.10', 'apache:commons-lang3:3.11'

	testRuntimeSecond 'google:gwt-user:2.4'
	
	externalDss project(':datastore_server')
}

sourceSets.test.runtimeClasspath = configurations.testRuntimeFirst + configurations.testRuntimeSecond + sourceSets.test.runtimeClasspath

task copyWar(type: Copy, dependsOn: project(':openbis_standard_technologies').war) {
	from project(':openbis_standard_technologies').war
	into 'targets/gradle/openbis-war'
	rename {filename -> 'openbis.war'}
}

import org.gradle.internal.os.OperatingSystem

task makeGeckodriverExecutable(type:Exec) {

    commandLine 'chmod', '+x', 'etc/gecko-driver/linux/geckodriver'
    commandLine 'chmod', '+x', 'etc/gecko-driver/mac/geckodriver'
}

test {
    useTestNG()
    options.suites('source/java/tests.xml')    

    jvmArgs '-Xmx2048m', '-XX:MaxPermSize=256m', '-Duser.timezone=Europe/Zurich'
    
    testLogging.showStandardStreams = true
    ignoreFailures = true
    systemProperty 'selenium.dss-runtime-classpath', configurations.externalDss.asPath

    if (OperatingSystem.current().isLinux()) {
        systemProperty 'webdriver.gecko.driver', 'etc/gecko-driver/linux/geckodriver'
    } else if (OperatingSystem.current().isMacOsX()) {
        systemProperty 'webdriver.gecko.driver', 'etc/gecko-driver/mac/geckodriver'
    } else {
        println "Please set up geckodriver"
    }
}

test.dependsOn makeGeckodriverExecutable
test.dependsOn copyWar


