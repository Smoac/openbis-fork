/*
 * Copyright 2009 ETH Zuerich, CISD
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ch.systemsx.cisd.yeastx.fiaml;

import java.util.Date;

import net.lemnik.eodsql.AutoGeneratedKeys;
import net.lemnik.eodsql.ResultColumn;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * A class that represents a MSRun in an eicML file.
 */
public class FIAMSRunDTO
{
    @AutoGeneratedKeys
    private long id;

    @ResultColumn("DS_ID")
    private long dataSetId;
    
    @ResultColumn("SAMP_ID")
    private long sampleId;
    
    @ResultColumn("EXPE_ID")
    private long experimentId;
    
    @ResultColumn("RAW_DATA_FILE_PATH")
    private String rawDataFilePath;

    @ResultColumn("RAW_DATA_FILE_NAME")
    private String rawDataFileName;

    @ResultColumn("INSTRUMENT_TYPE")
    private String instrumentType;

    @ResultColumn("INSTRUMENT_MANUFACTURER")
    private String instrumentManufacturer;

    @ResultColumn("INSTRUMENT_MODEL")
    private String instrumentModel;

    @ResultColumn("METHOD_IONISATION")
    private String methodIonisation;

    @ResultColumn("METHOD_SEPARATION")
    private String methodSeparation;

    private char polarity = '?';

    @ResultColumn("ACQUISITION_DATE")
    private Date acquisitionDate;
    
    @ResultColumn("LOW_MZ")
    private float lowMz;
    
    @ResultColumn("HIGH_MZ")
    private float highMz;
    
    private float internalStandard;
    
    private float od;
    
    private String operator;
    
    private int profileCount;

    public int getProfileCount()
    {
        return profileCount;
    }

    public void setProfileCount(int profileCount)
    {
        this.profileCount = profileCount;
    }

    public long getId()
    {
        return id;
    }

    public void setId(long eicMsRunId)
    {
        this.id = eicMsRunId;
    }

    public long getDataSetId()
    {
        return dataSetId;
    }

    public void setDataSetId(long dataSetId)
    {
        this.dataSetId = dataSetId;
    }

    public long getSampleId()
    {
        return sampleId;
    }

    public void setSampleId(long sampleId)
    {
        this.sampleId = sampleId;
    }

    public long getExperimentId()
    {
        return experimentId;
    }

    public void setExperimentId(long experimentId)
    {
        this.experimentId = experimentId;
    }

    public String getRawDataFilePath()
    {
        return rawDataFilePath;
    }

    public void setRawDataFilePath(String rawDataFilePath)
    {
        this.rawDataFilePath = rawDataFilePath;
    }

    public String getRawDataFileName()
    {
        return rawDataFileName;
    }

    public void setRawDataFileName(String rawDataFileName)
    {
        this.rawDataFileName = rawDataFileName;
    }

    public String getInstrumentType()
    {
        return instrumentType;
    }

    public void setInstrumentType(String instrumentType)
    {
        this.instrumentType = instrumentType;
    }

    public String getInstrumentManufacturer()
    {
        return instrumentManufacturer;
    }

    public void setInstrumentManufacturer(String instrumentManufacturer)
    {
        this.instrumentManufacturer = instrumentManufacturer;
    }

    public String getInstrumentModel()
    {
        return instrumentModel;
    }

    public void setInstrumentModel(String instrumentModel)
    {
        this.instrumentModel = instrumentModel;
    }

    public String getMethodIonisation()
    {
        return methodIonisation;
    }

    public void setMethodIonisation(String methodIonisation)
    {
        this.methodIonisation = methodIonisation;
    }

    public String getMethodSeparation()
    {
        return methodSeparation;
    }

    public void setMethodSeparation(String methodSeparation)
    {
        this.methodSeparation = methodSeparation;
    }

    public void setPolarity(char polarity)
    {
        this.polarity = polarity;
    }

    public char getPolarity()
    {
        return polarity;
    }

    public Date getAcquisitionDate()
    {
        return acquisitionDate;
    }

    public void setAcquisitionDate(Date acquisitionDate)
    {
        this.acquisitionDate = acquisitionDate;
    }

    public String getOperator()
    {
        return operator;
    }

    public void setOperator(String operator)
    {
        this.operator = operator;
    }

    public float getLowMz()
    {
        return lowMz;
    }

    public void setLowMz(float lowMz)
    {
        this.lowMz = lowMz;
    }

    public float getHighMz()
    {
        return highMz;
    }

    public void setHighMz(float highMz)
    {
        this.highMz = highMz;
    }

    public float getInternalStandard()
    {
        return internalStandard;
    }

    public void setInternalStandard(float internalStandard)
    {
        this.internalStandard = internalStandard;
    }

    public float getOd()
    {
        return od;
    }

    public void setOd(float od)
    {
        this.od = od;
    }

    @Override
    public String toString()
    {
        return ToStringBuilder.reflectionToString(this);
    }
}