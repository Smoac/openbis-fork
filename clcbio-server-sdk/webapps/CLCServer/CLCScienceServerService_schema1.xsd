<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" targetNamespace="http://soap.clcbio.com/" xmlns:tns="http://soap.clcbio.com/" xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:import namespace="http://www.w3.org/2005/05/xmlmime" schemaLocation="http://www.w3.org/2005/05/xmlmime"/>
  <xs:element name="ServiceException" type="tns:ServiceException"/>

  <xs:element name="addGroup" type="tns:addGroup"/>

  <xs:element name="addGroupResponse" type="tns:addGroupResponse"/>

  <xs:element name="addLazyObject" type="tns:addLazyObject"/>

  <xs:element name="addLazyObjectResponse" type="tns:addLazyObjectResponse"/>

  <xs:element name="addUser" type="tns:addUser"/>

  <xs:element name="addUserResponse" type="tns:addUserResponse"/>

  <xs:element name="addUserToGroup" type="tns:addUserToGroup"/>

  <xs:element name="addUserToGroupResponse" type="tns:addUserToGroupResponse"/>

  <xs:element name="allocateObjectId" type="tns:allocateObjectId"/>

  <xs:element name="allocateObjectIdResponse" type="tns:allocateObjectIdResponse"/>

  <xs:element name="auditLogQuery" type="tns:auditLogQuery"/>

  <xs:element name="auditLogQueryResponse" type="tns:auditLogQueryResponse"/>

  <xs:element name="canEditUsersAndGroups" type="tns:canEditUsersAndGroups"/>

  <xs:element name="canEditUsersAndGroupsResponse" type="tns:canEditUsersAndGroupsResponse"/>

  <xs:element name="commitInsert" type="tns:commitInsert"/>

  <xs:element name="commitInsertResponse" type="tns:commitInsertResponse"/>

  <xs:element name="commitUpdate" type="tns:commitUpdate"/>

  <xs:element name="commitUpdateResponse" type="tns:commitUpdateResponse"/>

  <xs:element name="createContainer" type="tns:createContainer"/>

  <xs:element name="createContainerBefore" type="tns:createContainerBefore"/>

  <xs:element name="createContainerBeforeResponse" type="tns:createContainerBeforeResponse"/>

  <xs:element name="createContainerResponse" type="tns:createContainerResponse"/>

  <xs:element name="deleteScheduledCommand" type="tns:deleteScheduledCommand"/>

  <xs:element name="deleteScheduledCommandResponse" type="tns:deleteScheduledCommandResponse"/>

  <xs:element name="doAbort" type="tns:doAbort"/>

  <xs:element name="doAbortResponse" type="tns:doAbortResponse"/>

  <xs:element name="doRemoveTerminatedProcess" type="tns:doRemoveTerminatedProcess"/>

  <xs:element name="doRemoveTerminatedProcessResponse" type="tns:doRemoveTerminatedProcessResponse"/>

  <xs:element name="doResumeProcess" type="tns:doResumeProcess"/>

  <xs:element name="doResumeProcessResponse" type="tns:doResumeProcessResponse"/>

  <xs:element name="doStopProcess" type="tns:doStopProcess"/>

  <xs:element name="doStopProcessResponse" type="tns:doStopProcessResponse"/>

  <xs:element name="doStopRequeueProcess" type="tns:doStopRequeueProcess"/>

  <xs:element name="doStopRequeueProcessResponse" type="tns:doStopRequeueProcessResponse"/>

  <xs:element name="doSuspendProcess" type="tns:doSuspendProcess"/>

  <xs:element name="doSuspendProcessResponse" type="tns:doSuspendProcessResponse"/>

  <xs:element name="emptyRecycleBin" type="tns:emptyRecycleBin"/>

  <xs:element name="emptyRecycleBinResponse" type="tns:emptyRecycleBinResponse"/>

  <xs:element name="exists" type="tns:exists"/>

  <xs:element name="existsResponse" type="tns:existsResponse"/>

  <xs:element name="export" type="tns:export"/>

  <xs:element name="exportResponse" type="tns:exportResponse"/>

  <xs:element name="fetch" type="tns:fetch"/>

  <xs:element name="fetchLazyByteArray" type="tns:fetchLazyByteArray"/>

  <xs:element name="fetchLazyByteArrayResponse" type="tns:fetchLazyByteArrayResponse"/>

  <xs:element name="fetchResponse" type="tns:fetchResponse"/>

  <xs:element name="generateSystemDiagnosticsReport" type="tns:generateSystemDiagnosticsReport"/>

  <xs:element name="generateSystemDiagnosticsReportResponse" type="tns:generateSystemDiagnosticsReportResponse"/>

  <xs:element name="generateSystemInformationArchive" type="tns:generateSystemInformationArchive"/>

  <xs:element name="generateSystemInformationArchiveResponse" type="tns:generateSystemInformationArchiveResponse"/>

  <xs:element name="getAdminGroupID" type="tns:getAdminGroupID"/>

  <xs:element name="getAdminGroupIDResponse" type="tns:getAdminGroupIDResponse"/>

  <xs:element name="getAllAttributes" type="tns:getAllAttributes"/>

  <xs:element name="getAllAttributesResponse" type="tns:getAllAttributesResponse"/>

  <xs:element name="getAllGroups" type="tns:getAllGroups"/>

  <xs:element name="getAllGroupsResponse" type="tns:getAllGroupsResponse"/>

  <xs:element name="getAttribute" type="tns:getAttribute"/>

  <xs:element name="getAttributeResponse" type="tns:getAttributeResponse"/>

  <xs:element name="getClcObjectThin" type="tns:getClcObjectThin"/>

  <xs:element name="getClcObjectThinResponse" type="tns:getClcObjectThinResponse"/>

  <xs:element name="getExecutionEnvironments" type="tns:getExecutionEnvironments"/>

  <xs:element name="getExecutionEnvironmentsResponse" type="tns:getExecutionEnvironmentsResponse"/>

  <xs:element name="getExportPluginReferences" type="tns:getExportPluginReferences"/>

  <xs:element name="getExportPluginReferencesResponse" type="tns:getExportPluginReferencesResponse"/>

  <xs:element name="getExportPluginReferencesSuitable" type="tns:getExportPluginReferencesSuitable"/>

  <xs:element name="getExportPluginReferencesSuitableResponse" type="tns:getExportPluginReferencesSuitableResponse"/>

  <xs:element name="getGroups" type="tns:getGroups"/>

  <xs:element name="getGroupsResponse" type="tns:getGroupsResponse"/>

  <xs:element name="getImportPluginReferences" type="tns:getImportPluginReferences"/>

  <xs:element name="getImportPluginReferencesResponse" type="tns:getImportPluginReferencesResponse"/>

  <xs:element name="getIndexServerStatus" type="tns:getIndexServerStatus"/>

  <xs:element name="getIndexServerStatusResponse" type="tns:getIndexServerStatusResponse"/>

  <xs:element name="getInstalledPlugins" type="tns:getInstalledPlugins"/>

  <xs:element name="getInstalledPluginsResponse" type="tns:getInstalledPluginsResponse"/>

  <xs:element name="getPermissions" type="tns:getPermissions"/>

  <xs:element name="getPermissionsResponse" type="tns:getPermissionsResponse"/>

  <xs:element name="getPlugins" type="tns:getPlugins"/>

  <xs:element name="getPluginsResponse" type="tns:getPluginsResponse"/>

  <xs:element name="getProcessManagerProcesses" type="tns:getProcessManagerProcesses"/>

  <xs:element name="getProcessManagerProcessesResponse" type="tns:getProcessManagerProcessesResponse"/>

  <xs:element name="getProcessOutput" type="tns:getProcessOutput"/>

  <xs:element name="getProcessOutputResponse" type="tns:getProcessOutputResponse"/>

  <xs:element name="getProcessOutputType" type="tns:getProcessOutputType"/>

  <xs:element name="getProcessOutputTypeResponse" type="tns:getProcessOutputTypeResponse"/>

  <xs:element name="getRecycleBin" type="tns:getRecycleBin"/>

  <xs:element name="getRecycleBinResponse" type="tns:getRecycleBinResponse"/>

  <xs:element name="getScheduledCommands" type="tns:getScheduledCommands"/>

  <xs:element name="getScheduledCommandsResponse" type="tns:getScheduledCommandsResponse"/>

  <xs:element name="getServerCommandRefLoaded" type="tns:getServerCommandRefLoaded"/>

  <xs:element name="getServerCommandRefLoadedResponse" type="tns:getServerCommandRefLoadedResponse"/>

  <xs:element name="getServerCommandRefsLoaded" type="tns:getServerCommandRefsLoaded"/>

  <xs:element name="getServerCommandRefsLoadedResponse" type="tns:getServerCommandRefsLoadedResponse"/>

  <xs:element name="getServerCommandRefsRegistered" type="tns:getServerCommandRefsRegistered"/>

  <xs:element name="getServerCommandRefsRegisteredResponse" type="tns:getServerCommandRefsRegisteredResponse"/>

  <xs:element name="getServerConfiguration" type="tns:getServerConfiguration"/>

  <xs:element name="getServerConfigurationResponse" type="tns:getServerConfigurationResponse"/>

  <xs:element name="getServerInformation" type="tns:getServerInformation"/>

  <xs:element name="getServerInformationResponse" type="tns:getServerInformationResponse"/>

  <xs:element name="getServerStatus" type="tns:getServerStatus"/>

  <xs:element name="getServerStatusResponse" type="tns:getServerStatusResponse"/>

  <xs:element name="getSessionProcess" type="tns:getSessionProcess"/>

  <xs:element name="getSessionProcessResponse" type="tns:getSessionProcessResponse"/>

  <xs:element name="getSessionProcesses" type="tns:getSessionProcesses"/>

  <xs:element name="getSessionProcessesResponse" type="tns:getSessionProcessesResponse"/>

  <xs:element name="getTreeItem" type="tns:getTreeItem"/>

  <xs:element name="getTreeItemPath" type="tns:getTreeItemPath"/>

  <xs:element name="getTreeItemPathResponse" type="tns:getTreeItemPathResponse"/>

  <xs:element name="getTreeItemResponse" type="tns:getTreeItemResponse"/>

  <xs:element name="getTreeItems" type="tns:getTreeItems"/>

  <xs:element name="getTreeItemsResponse" type="tns:getTreeItemsResponse"/>

  <xs:element name="getUsers" type="tns:getUsers"/>

  <xs:element name="getUsersInGroup" type="tns:getUsersInGroup"/>

  <xs:element name="getUsersInGroupResponse" type="tns:getUsersInGroupResponse"/>

  <xs:element name="getUsersResponse" type="tns:getUsersResponse"/>

  <xs:element name="heartBeat" type="tns:heartBeat"/>

  <xs:element name="heartBeatResponse" type="tns:heartBeatResponse"/>

  <xs:element name="insertAttribute" type="tns:insertAttribute"/>

  <xs:element name="insertAttributeResponse" type="tns:insertAttributeResponse"/>

  <xs:element name="insertCopyBefore" type="tns:insertCopyBefore"/>

  <xs:element name="insertCopyBeforeResponse" type="tns:insertCopyBeforeResponse"/>

  <xs:element name="insertFileObjectBefore" type="tns:insertFileObjectBefore"/>

  <xs:element name="insertFileObjectBeforeResponse" type="tns:insertFileObjectBeforeResponse"/>

  <xs:element name="invalidateUserHttpSession" type="tns:invalidateUserHttpSession"/>

  <xs:element name="invalidateUserHttpSessionResponse" type="tns:invalidateUserHttpSessionResponse"/>

  <xs:element name="isAdmin" type="tns:isAdmin"/>

  <xs:element name="isAdminResponse" type="tns:isAdminResponse"/>

  <xs:element name="list" type="tns:list"/>

  <xs:element name="listPersistenceModels" type="tns:listPersistenceModels"/>

  <xs:element name="listPersistenceModelsResponse" type="tns:listPersistenceModelsResponse"/>

  <xs:element name="listResponse" type="tns:listResponse"/>

  <xs:element name="listSafeFilesIn" type="tns:listSafeFilesIn"/>

  <xs:element name="listSafeFilesInResponse" type="tns:listSafeFilesInResponse"/>

  <xs:element name="login" type="tns:login"/>

  <xs:element name="loginResponse" type="tns:loginResponse"/>

  <xs:element name="logout" type="tns:logout"/>

  <xs:element name="logoutResponse" type="tns:logoutResponse"/>

  <xs:element name="moveBefore" type="tns:moveBefore"/>

  <xs:element name="moveBeforeResponse" type="tns:moveBeforeResponse"/>

  <xs:element name="parseClcUrl" type="tns:parseClcUrl"/>

  <xs:element name="parseClcUrlResponse" type="tns:parseClcUrlResponse"/>

  <xs:element name="permissionsSupport" type="tns:permissionsSupport"/>

  <xs:element name="permissionsSupportResponse" type="tns:permissionsSupportResponse"/>

  <xs:element name="processManagerMoveProcessBackward" type="tns:processManagerMoveProcessBackward"/>

  <xs:element name="processManagerMoveProcessBackwardResponse" type="tns:processManagerMoveProcessBackwardResponse"/>

  <xs:element name="processManagerMoveProcessForward" type="tns:processManagerMoveProcessForward"/>

  <xs:element name="processManagerMoveProcessForwardResponse" type="tns:processManagerMoveProcessForwardResponse"/>

  <xs:element name="qualify" type="tns:qualify"/>

  <xs:element name="qualifyResponse" type="tns:qualifyResponse"/>

  <xs:element name="query" type="tns:query"/>

  <xs:element name="queryResponse" type="tns:queryResponse"/>

  <xs:element name="queueExecute" type="tns:queueExecute"/>

  <xs:element name="queueExecuteResponse" type="tns:queueExecuteResponse"/>

  <xs:element name="remoteClone" type="tns:remoteClone"/>

  <xs:element name="remoteCloneResponse" type="tns:remoteCloneResponse"/>

  <xs:element name="removeAttribute" type="tns:removeAttribute"/>

  <xs:element name="removeAttributeResponse" type="tns:removeAttributeResponse"/>

  <xs:element name="removeContainers" type="tns:removeContainers"/>

  <xs:element name="removeContainersResponse" type="tns:removeContainersResponse"/>

  <xs:element name="removeFromRecycleBin" type="tns:removeFromRecycleBin"/>

  <xs:element name="removeFromRecycleBinResponse" type="tns:removeFromRecycleBinResponse"/>

  <xs:element name="removeGroup" type="tns:removeGroup"/>

  <xs:element name="removeGroupResponse" type="tns:removeGroupResponse"/>

  <xs:element name="removeUser" type="tns:removeUser"/>

  <xs:element name="removeUserFromGroup" type="tns:removeUserFromGroup"/>

  <xs:element name="removeUserFromGroupResponse" type="tns:removeUserFromGroupResponse"/>

  <xs:element name="removeUserResponse" type="tns:removeUserResponse"/>

  <xs:element name="renameChild" type="tns:renameChild"/>

  <xs:element name="renameChildResponse" type="tns:renameChildResponse"/>

  <xs:element name="schedule" type="tns:schedule"/>

  <xs:element name="scheduleResponse" type="tns:scheduleResponse"/>

  <xs:element name="searchWithScore" type="tns:searchWithScore"/>

  <xs:element name="searchWithScoreResponse" type="tns:searchWithScoreResponse"/>

  <xs:element name="setPassword" type="tns:setPassword"/>

  <xs:element name="setPasswordResponse" type="tns:setPasswordResponse"/>

  <xs:element name="setPermissions" type="tns:setPermissions"/>

  <xs:element name="setPermissionsResponse" type="tns:setPermissionsResponse"/>

  <xs:element name="setRootPassword" type="tns:setRootPassword"/>

  <xs:element name="setRootPasswordResponse" type="tns:setRootPasswordResponse"/>

  <xs:element name="setServerConfiguration" type="tns:setServerConfiguration"/>

  <xs:element name="setServerConfigurationResponse" type="tns:setServerConfigurationResponse"/>

  <xs:element name="sort" type="tns:sort"/>

  <xs:element name="sortResponse" type="tns:sortResponse"/>

  <xs:element name="startInsertBefore" type="tns:startInsertBefore"/>

  <xs:element name="startInsertBeforeResponse" type="tns:startInsertBeforeResponse"/>

  <xs:element name="startUpdate" type="tns:startUpdate"/>

  <xs:element name="startUpdateResponse" type="tns:startUpdateResponse"/>

  <xs:element name="updateObject" type="tns:updateObject"/>

  <xs:element name="updateObjectResponse" type="tns:updateObjectResponse"/>

  <xs:element name="updateScheduledCommand" type="tns:updateScheduledCommand"/>

  <xs:element name="updateScheduledCommandResponse" type="tns:updateScheduledCommandResponse"/>

  <xs:element name="waitForIndexThreadsToFinish" type="tns:waitForIndexThreadsToFinish"/>

  <xs:element name="waitForIndexThreadsToFinishResponse" type="tns:waitForIndexThreadsToFinishResponse"/>

  <xs:element name="workflowManagerInstall" type="tns:workflowManagerInstall"/>

  <xs:element name="workflowManagerInstallResponse" type="tns:workflowManagerInstallResponse"/>

  <xs:element name="workflowManagerList" type="tns:workflowManagerList"/>

  <xs:element name="workflowManagerListResponse" type="tns:workflowManagerListResponse"/>

  <xs:element name="workflowManagerUnInstall" type="tns:workflowManagerUnInstall"/>

  <xs:element name="workflowManagerUnInstallResponse" type="tns:workflowManagerUnInstallResponse"/>

  <xs:element name="workflowManagerUpdate" type="tns:workflowManagerUpdate"/>

  <xs:element name="workflowManagerUpdateResponse" type="tns:workflowManagerUpdateResponse"/>

  <xs:complexType name="soapWhitelist">
    <xs:sequence>
      <xs:element name="a" type="tns:transportInsertResult" minOccurs="0"/>
      <xs:element name="b" type="tns:transportPersistenceStructure" minOccurs="0"/>
      <xs:element name="c" type="tns:transportPersistenceElement" minOccurs="0"/>
      <xs:element name="d" type="tns:transportPersistenceContainer" minOccurs="0"/>
      <xs:element name="e" type="tns:transportRecycleBin" minOccurs="0"/>
      <xs:element name="f" type="tns:transportPersistenceFile" minOccurs="0"/>
      <xs:element name="g" type="tns:serverCommandAlgoParameters" minOccurs="0"/>
      <xs:element name="h" type="tns:serverCommandAlgoOutput" minOccurs="0"/>
      <xs:element name="i" type="tns:clcObjectReferences" minOccurs="0"/>
      <xs:element name="j" type="tns:clcObjectReference" minOccurs="0"/>
      <xs:element name="k" type="tns:serverImportCommandReference" minOccurs="0"/>
      <xs:element name="l" type="tns:serverImporterParameters" minOccurs="0"/>
      <xs:element name="m" type="tns:serverImporterOutput" minOccurs="0"/>
      <xs:element name="n" type="tns:serverExportCommandReference" minOccurs="0"/>
      <xs:element name="o" type="tns:serverExporterParameters" minOccurs="0"/>
      <xs:element name="p" type="tns:serverExporterOutput" minOccurs="0"/>
      <xs:element name="q" type="tns:removeTerminatedProcessesCommandReference" minOccurs="0"/>
      <xs:element name="r" type="tns:removeTerminatedProcessesOutput" minOccurs="0"/>
      <xs:element name="s" type="tns:removeTerminatedProcessesParameters" minOccurs="0"/>
      <xs:element name="t" type="tns:soapBinaryData" minOccurs="0"/>
      <xs:element name="u" type="tns:dataBaseType" minOccurs="0"/>
      <xs:element name="v" type="tns:slaveNodeManagerConfiguration" minOccurs="0"/>
      <xs:element name="w" type="tns:serverMainConfiguration" minOccurs="0"/>
      <xs:element name="x" type="tns:serverPluginManagementCommandReference" minOccurs="0"/>
      <xs:element name="y" type="tns:serverPluginManagementParameters" minOccurs="0"/>
      <xs:element name="z" type="tns:templateCommandManagerConfiguration" minOccurs="0"/>
      <xs:element name="a1" type="tns:commandLineExecuterParameters" minOccurs="0"/>
      <xs:element name="b1" type="tns:commandLineExecuterOutput" minOccurs="0"/>
      <xs:element name="c1" type="tns:typeString" minOccurs="0"/>
      <xs:element name="d1" type="tns:typeExportCommandOutput" minOccurs="0"/>
      <xs:element name="e1" type="tns:typeImportCommandInput" minOccurs="0"/>
      <xs:element name="f1" type="tns:typeCommandOutput" minOccurs="0"/>
      <xs:element name="g1" type="tns:typeBoolean" minOccurs="0"/>
      <xs:element name="h1" type="tns:typeBinaryObject" minOccurs="0"/>
      <xs:element name="i1" type="tns:commandLineExecuterMasterParameters" minOccurs="0"/>
      <xs:element name="j1" type="tns:typeCsvEnum" minOccurs="0"/>
      <xs:element name="k1" type="tns:typeBooleanCompound" minOccurs="0"/>
      <xs:element name="l1" type="tns:typeDouble" minOccurs="0"/>
      <xs:element name="m1" type="tns:authenticationConfiguration" minOccurs="0"/>
      <xs:element name="n1" type="tns:userConfiguration" minOccurs="0"/>
      <xs:element name="o1" type="tns:commandLineExecuterMasterOutput" minOccurs="0"/>
      <xs:element name="p1" type="tns:clcFileObjectReference" minOccurs="0"/>
      <xs:element name="q1" type="tns:serverInformation" minOccurs="0"/>
      <xs:element name="r1" type="tns:commandLineExecuterMasterReference" minOccurs="0"/>
      <xs:element name="s1" type="tns:safeFileDirectories" minOccurs="0"/>
      <xs:element name="t1" type="tns:safeFileLocation" minOccurs="0"/>
      <xs:element name="u1" type="tns:safeFileLocations" minOccurs="0"/>
      <xs:element name="v1" type="tns:gridExecuterCommandReference" minOccurs="0"/>
      <xs:element name="w1" type="tns:gridExecuterParameters" minOccurs="0"/>
      <xs:element name="x1" type="tns:gridConfiguration" minOccurs="0"/>
      <xs:element name="y1" type="tns:serverBatchCommandParameters" minOccurs="0"/>
      <xs:element name="z1" type="tns:clcUrlParameter" minOccurs="0"/>
      <xs:element name="a2" type="tns:clcUrlParameterWithAttachment" minOccurs="0"/>
      <xs:element name="b2" type="tns:serverCLCExecutionEnvironment" minOccurs="0"/>
      <xs:element name="c2" type="tns:serverGridExecutionEnvironment" minOccurs="0"/>
      <xs:element name="d2" type="tns:serverApiPermissionConfiguration" minOccurs="0"/>
      <xs:element name="e2" type="tns:directCommandReference" minOccurs="0"/>
      <xs:element name="f2" type="tns:directCommandOutput" minOccurs="0"/>
      <xs:element name="g2" type="tns:directCommandParameters" minOccurs="0"/>
      <xs:element name="h2" type="tns:serializedBeanJSON" minOccurs="0"/>
      <xs:element name="i2" type="tns:directCommandConfiguration" minOccurs="0"/>
      <xs:element name="j2" type="tns:typeContextSubstitute" minOccurs="0"/>
      <xs:element name="k2" type="tns:workflowCommandParameters" minOccurs="0"/>
      <xs:element name="l2" type="tns:workflowConfiguration" minOccurs="0"/>
      <xs:element name="m2" type="tns:serverCommandAlgoReference" minOccurs="0"/>
      <xs:element name="n2" type="tns:thinPluginDescripterBinaryIcon" minOccurs="0"/>
      <xs:element name="o2" type="tns:workflowElementBeanParameterExternal" minOccurs="0"/>
      <xs:element name="p2" type="tns:thinPluginDescripterAttachment" minOccurs="0"/>
      <xs:element name="q2" type="tns:valueTypeBoolean" minOccurs="0"/>
      <xs:element name="r2" type="tns:valueTypeByte" minOccurs="0"/>
      <xs:element name="s2" type="tns:valueTypeClcUrl" minOccurs="0"/>
      <xs:element name="t2" type="tns:valueTypeClcUrlFile" minOccurs="0"/>
      <xs:element name="u2" type="tns:valueTypeClcUrlObject" minOccurs="0"/>
      <xs:element name="v2" type="tns:valueTypeDouble" minOccurs="0"/>
      <xs:element name="w2" type="tns:valueTypeInteger" minOccurs="0"/>
      <xs:element name="x2" type="tns:valueTypeLong" minOccurs="0"/>
      <xs:element name="y2" type="tns:valueTypeString" minOccurs="0"/>
      <xs:element name="z2" type="tns:workflowElementBeanParameterExternalOrphane" minOccurs="0"/>
      <xs:element name="a3" type="tns:typeInteger" minOccurs="0"/>
      <xs:element name="b3" type="tns:workflowCommandOutput" minOccurs="0"/>
      <xs:element name="c3" type="tns:qualificationReportAlgo" minOccurs="0"/>
      <xs:element name="d3" type="tns:qualificationReportMaster" minOccurs="0"/>
      <xs:element name="e3" type="tns:qualificationReportWorkflow" minOccurs="0"/>
      <xs:element name="f3" type="tns:typeSafeFile" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="transportInsertResult">
    <xs:sequence>
      <xs:element name="id" type="xs:string" minOccurs="0"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="succes" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="transportPersistenceStructure" abstract="true">
    <xs:sequence>
      <xs:element name="id" type="xs:string" minOccurs="0"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="readable" type="xs:boolean"/>
      <xs:element name="writeable" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="transportPersistenceElement">
    <xs:complexContent>
      <xs:extension base="tns:transportPersistenceStructure">
        <xs:sequence>
          <xs:element name="attributes" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="objectVersion" type="xs:int"/>
          <xs:element name="rootObjId" type="xs:int"/>
          <xs:element name="rootUniqueId" type="xs:string" minOccurs="0"/>
          <xs:element name="saveCount" type="xs:int"/>
          <xs:element name="subType" type="xs:string" minOccurs="0"/>
          <xs:element name="type" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="transportPersistenceContainer">
    <xs:complexContent>
      <xs:extension base="tns:transportPersistenceStructure">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="transportRecycleBin">
    <xs:complexContent>
      <xs:extension base="tns:transportPersistenceContainer">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="transportPersistenceFile">
    <xs:complexContent>
      <xs:extension base="tns:transportPersistenceElement">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverCommandAlgoParameters">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandParameters">
        <xs:sequence>
          <xs:element name="algoBeanParameters">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="key" minOccurs="0" type="xs:string"/>
                      <xs:element name="value" minOccurs="0" type="tns:algoParameterBean"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="logAlways" type="xs:boolean"/>
          <xs:element name="serverAlgoDestinations" type="tns:serverAlgoDestination" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="serverAlgoInputChannels" type="tns:serverAlgoChannelInput" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="useGroupedOutput" type="xs:boolean"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverCommandParameters">
    <xs:sequence>
      <xs:element name="executionEnvironment" type="tns:serverExecutionEnvironment" minOccurs="0"/>
      <xs:element name="notificationPreferences" type="tns:notificationPreferences" minOccurs="0"/>
      <xs:element name="parameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" minOccurs="0" type="xs:anyType"/>
                  <xs:element name="value" minOccurs="0" type="xs:anyType"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="algoParameterBean">
    <xs:sequence>
      <xs:element name="longDescription" type="xs:string" minOccurs="0"/>
      <xs:element name="mandatory" type="xs:boolean"/>
      <xs:element name="option" type="xs:string" minOccurs="0"/>
      <xs:element name="shortDescription" type="xs:string" minOccurs="0"/>
      <xs:element name="valueDefinition" type="tns:defaultBeanParameterValueDefinition" minOccurs="0"/>
      <xs:element name="valueType" type="tns:algoParameterValueType" minOccurs="0"/>
      <xs:element name="values" type="xs:anyType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="defaultBeanParameterValueDefinition">
    <xs:sequence>
      <xs:element name="definition" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="algoParameterValueType">
    <xs:sequence>
      <xs:element name="fullClassName" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serverAlgoDestination">
    <xs:sequence>
      <xs:element name="channel" type="tns:serverAlgoChannel" minOccurs="0"/>
      <xs:element name="destination" type="tns:clcUrlParameter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serverAlgoChannel">
    <xs:sequence>
      <xs:element name="classKey" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="outputType" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="clcUrlParameter">
    <xs:sequence>
      <xs:element name="clcShortUrl" type="xs:string" minOccurs="0"/>
      <xs:element name="clcUrl" type="xs:string" minOccurs="0"/>
      <xs:element name="resourceName" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serverAlgoChannelInput">
    <xs:complexContent>
      <xs:extension base="tns:serverAlgoChannel">
        <xs:sequence>
          <xs:element name="channelInputObjectReferences" type="tns:clcUrlParameter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverExecutionEnvironment">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="notificationPreferences">
    <xs:sequence>
      <xs:element name="notifyOnFailure" type="xs:boolean"/>
      <xs:element name="notifyOnSuccess" type="xs:boolean"/>
      <xs:element name="recipientEmailAddresses" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serverCommandAlgoOutput">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandOutput">
        <xs:sequence>
          <xs:element name="logObjRef" type="tns:clcUrlParameter" minOccurs="0"/>
          <xs:element name="messages" type="tns:algoOutputPosting" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="serverAlgoOutputChannels" type="tns:serverAlgoChannelOutput" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverCommandOutput">
    <xs:sequence>
      <xs:element name="outpuObjects" type="xs:anyType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="processStatus" type="tns:clcProcessReflection" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="algoOutputPosting">
    <xs:sequence>
      <xs:element name="algoReference" type="tns:algoReference" minOccurs="0"/>
      <xs:element name="posting" type="xs:string" minOccurs="0"/>
      <xs:element name="timestampMilis" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="algoReference">
    <xs:sequence>
      <xs:element name="algoName" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serverAlgoChannelOutput">
    <xs:complexContent>
      <xs:extension base="tns:serverAlgoChannel">
        <xs:sequence>
          <xs:element name="channelOutputObjectReferences" type="tns:clcUrlParameter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="clcProcessReflection">
    <xs:sequence>
      <xs:element name="childProcessIds" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="commandClassification" type="xs:string" minOccurs="0"/>
      <xs:element name="creationTime" type="xs:long"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="done" type="xs:boolean"/>
      <xs:element name="executingServerDescription" type="xs:string" minOccurs="0"/>
      <xs:element name="jobStartTime" type="xs:long"/>
      <xs:element name="lastPostedMessage" type="xs:string" minOccurs="0"/>
      <xs:element name="processExceptions" type="tns:thinException" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="processID" type="xs:string" minOccurs="0"/>
      <xs:element name="progress" type="xs:int"/>
      <xs:element name="requeueable" type="xs:boolean"/>
      <xs:element name="statusDescription" type="xs:string" minOccurs="0"/>
      <xs:element name="stoppable" type="xs:boolean"/>
      <xs:element name="suspendable" type="xs:boolean"/>
      <xs:element name="suspended" type="xs:boolean"/>
      <xs:element name="username" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="thinException">
    <xs:sequence>
      <xs:element name="exceptionClassName" type="xs:string" minOccurs="0"/>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
      <xs:element name="stacktrace" type="tns:serializeableStackTraceElement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serializeableStackTraceElement">
    <xs:sequence>
      <xs:element name="declaringClass" type="xs:string" minOccurs="0"/>
      <xs:element name="fileName" type="xs:string" minOccurs="0"/>
      <xs:element name="lineNumber" type="xs:int"/>
      <xs:element name="methodName" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="clcObjectReferences">
    <xs:sequence>
      <xs:element name="CLCObjectReferences" type="tns:clcObjectReference" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="clcObjectReference">
    <xs:sequence>
      <xs:element name="clcObjectId" type="xs:string" minOccurs="0"/>
      <xs:element name="objectName" type="xs:string" minOccurs="0"/>
      <xs:element name="persistenceModelId" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serverImportCommandReference">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandReference">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverCommandReference">
    <xs:sequence>
      <xs:element name="commandOutputType" type="tns:serverCommandOutput" minOccurs="0"/>
      <xs:element name="commandParameters" type="tns:serverCommandParameters" minOccurs="0"/>
      <xs:element name="id" type="xs:string" minOccurs="0"/>
      <xs:element name="masterCommand" type="xs:boolean"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="version" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serverImporterParameters">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandParameters">
        <xs:sequence>
          <xs:element name="filesToImport" type="tns:clcUrlParameter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="importPluginClassKey" type="xs:string" minOccurs="0"/>
          <xs:element name="inputFromTerminatedProcess" type="tns:typeImportCommandInput" minOccurs="0"/>
          <xs:element name="insertionPoint" type="tns:clcUrlParameter" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="typeImportCommandInput">
    <xs:complexContent>
      <xs:extension base="tns:typeCommandOutput">
        <xs:sequence>
          <xs:element name="forcedFileName" type="xs:string" minOccurs="0"/>
          <xs:element name="importPluginClassKey" type="xs:string" minOccurs="0"/>
          <xs:element name="insertionPoint" type="tns:clcUrlParameter" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="typeCommandOutput">
    <xs:complexContent>
      <xs:extension base="tns:userClArg">
        <xs:sequence>
          <xs:element name="terminatedProcessId" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="userClArg" abstract="true">
    <xs:sequence>
      <xs:element name="argumentType" type="tns:userArgumentType" minOccurs="0"/>
      <xs:element name="displayName" type="xs:string" minOccurs="0"/>
      <xs:element name="id" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serverImporterOutput">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandOutput">
        <xs:sequence>
          <xs:element name="importedObjectReferences" type="tns:clcUrlParameter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverExportCommandReference">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandReference">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverExporterParameters">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandParameters">
        <xs:sequence>
          <xs:element name="exportPluginClassKey" type="xs:string" minOccurs="0"/>
          <xs:element name="objectsToExport" type="tns:clcUrlParameter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="overridingExportDestinationDir" type="tns:clcUrlParameter" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverExporterOutput">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandOutput">
        <xs:sequence>
          <xs:element name="exportedFile" type="tns:clcUrlParameter" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="removeTerminatedProcessesCommandReference">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandReference">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="removeTerminatedProcessesOutput">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandOutput">
        <xs:sequence>
          <xs:element name="removedProcessDescriptions" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="removeTerminatedProcessesParameters">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandParameters">
        <xs:sequence>
          <xs:element name="invokeOnAllUsers" type="xs:boolean"/>
          <xs:element name="preservationDate" type="tns:thinDate" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="thinDate">
    <xs:sequence>
      <xs:element name="date" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="soapBinaryData">
    <xs:complexContent>
      <xs:extension base="tns:thinBinaryData">
        <xs:sequence>
          <xs:element name="dataHandler" xmime:expectedContentTypes="application/octet-stream" type="xs:base64Binary" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="thinBinaryData">
    <xs:sequence>
      <xs:element name="dataName" type="xs:string" minOccurs="0"/>
      <xs:element name="localFilePath" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="slaveNodeManagerConfiguration">
    <xs:complexContent>
      <xs:extension base="tns:serverConfiguration">
        <xs:sequence>
          <xs:element name="masterNode" type="tns:node" minOccurs="0"/>
          <xs:element name="serverState" type="tns:serverState" minOccurs="0"/>
          <xs:element name="slavenodes" type="tns:node" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="thisNode" type="tns:node" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverConfiguration" abstract="true">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="node">
    <xs:sequence>
      <xs:element name="displayName" type="xs:string" minOccurs="0"/>
      <xs:element name="nodeGuid" type="xs:string" minOccurs="0"/>
      <xs:element name="serviceHost" type="xs:string" minOccurs="0"/>
      <xs:element name="servicePort" type="xs:string" minOccurs="0"/>
      <xs:element name="supportedCommandIds" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serverMainConfiguration">
    <xs:complexContent>
      <xs:extension base="tns:serverConfiguration">
        <xs:sequence>
          <xs:element name="indexServerConfiguration" type="tns:indexServerConfiguration" minOccurs="0"/>
          <xs:element name="maxServletUploadSizeBytes" type="xs:long"/>
          <xs:element name="modelConfiguration" type="tns:modelConfiguration" minOccurs="0"/>
          <xs:element name="smtpConfiguration" type="tns:smtpConfiguration" minOccurs="0"/>
          <xs:element name="userSessionTimeOutSeconds" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="indexServerConfiguration">
    <xs:sequence>
      <xs:element name="local" type="xs:boolean"/>
      <xs:element name="url" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="modelConfiguration">
    <xs:sequence>
      <xs:element name="fileSystemPersistenceModels" type="tns:fileSystemPersistenceModelConf" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="simpleDbParameters" type="tns:simpleDBPersistenceModelConf" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="sqlDbParameters" type="tns:sqlPersistenceModelConf" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="supportedSimpleDbDrivers" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="supportedSqlDrivers" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="fileSystemPersistenceModelConf">
    <xs:sequence>
      <xs:element name="canRead" type="xs:boolean"/>
      <xs:element name="canWrite" type="xs:boolean"/>
      <xs:element name="enabled" type="xs:boolean"/>
      <xs:element name="pathName" type="xs:string" minOccurs="0"/>
      <xs:element name="permissionsEnabled" type="xs:boolean"/>
      <xs:element name="persistenceModelId" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="simpleDBPersistenceModelConf">
    <xs:sequence>
      <xs:element name="databaseName" type="xs:string" minOccurs="0"/>
      <xs:element name="drivers" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="enabled" type="xs:boolean"/>
      <xs:element name="host" type="xs:string" minOccurs="0"/>
      <xs:element name="password" type="xs:string" minOccurs="0"/>
      <xs:element name="persistenceModelId" type="xs:string" minOccurs="0"/>
      <xs:element name="port" type="xs:string" minOccurs="0"/>
      <xs:element name="selectedDriver" type="xs:int"/>
      <xs:element name="username" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="sqlPersistenceModelConf">
    <xs:sequence>
      <xs:element name="databaseName" type="xs:string" minOccurs="0"/>
      <xs:element name="drivers" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="enabled" type="xs:boolean"/>
      <xs:element name="host" type="xs:string" minOccurs="0"/>
      <xs:element name="password" type="xs:string" minOccurs="0"/>
      <xs:element name="persistenceModelId" type="xs:string" minOccurs="0"/>
      <xs:element name="port" type="xs:string" minOccurs="0"/>
      <xs:element name="selectedDriver" type="xs:int"/>
      <xs:element name="username" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="smtpConfiguration">
    <xs:sequence>
      <xs:element name="outGoingSMTPServer" type="xs:string" minOccurs="0"/>
      <xs:element name="password" type="xs:string" minOccurs="0"/>
      <xs:element name="senderEmailAddress" type="xs:string" minOccurs="0"/>
      <xs:element name="useAuthentication" type="xs:boolean"/>
      <xs:element name="userName" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serverPluginManagementCommandReference">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandReference">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverPluginManagementParameters">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandParameters">
        <xs:sequence>
          <xs:element name="clusterExecutionScope" type="tns:clusterExecutionScope" minOccurs="0"/>
          <xs:element name="cpaFileToInstall" type="tns:thinBinaryData" minOccurs="0"/>
          <xs:element name="dedicatedSlaveNodeId" type="xs:string" minOccurs="0"/>
          <xs:element name="operation" type="tns:operation" minOccurs="0"/>
          <xs:element name="pluginToUnInstallId" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="templateCommandManagerConfiguration">
    <xs:complexContent>
      <xs:extension base="tns:serverConfiguration">
        <xs:sequence>
          <xs:element name="installedTemplateCommands" type="tns:installedTemplateCommand" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="installedTemplateCommand">
    <xs:sequence>
      <xs:element name="enabled" type="xs:boolean"/>
      <xs:element name="newTemplateCommand" type="tns:serverCommandReference" minOccurs="0"/>
      <xs:element name="templateCommandIdBasedUpon" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="commandLineExecuterParameters">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandParameters">
        <xs:sequence>
          <xs:element name="USER_PARAM_START_TAG" type="xs:string" minOccurs="0"/>
          <xs:element name="USER_PARAM_END_TAG" type="xs:string" minOccurs="0"/>
          <xs:element name="command" type="xs:string" minOccurs="0"/>
          <xs:element name="environmentVariables">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="key" minOccurs="0" type="xs:string"/>
                      <xs:element name="value" minOccurs="0" type="xs:string"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="mandatoryPostTerminationDeletableWorkDir" type="xs:string" minOccurs="0"/>
          <xs:element name="postProcessAlgoCommandId" type="xs:string" minOccurs="0"/>
          <xs:element name="runtimeMasterCommand" type="xs:boolean"/>
          <xs:element name="standardErrorCausesException" type="xs:boolean"/>
          <xs:element name="standardErrorImporter" type="tns:typeImportCommandInput" minOccurs="0"/>
          <xs:element name="standardOutImporter" type="tns:typeImportCommandInput" minOccurs="0"/>
          <xs:element name="userArgIdToPostProcessAlgoParamIdMap">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="key" minOccurs="0" type="xs:string"/>
                      <xs:element name="value" minOccurs="0" type="xs:string"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="userArguments" type="tns:userClArg" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="userArgumentsForPostProcessingOnly" type="tns:userClArg" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="userParameterWindowSize" type="xs:int"/>
          <xs:element name="userSetSharedWorkDir" type="tns:safeFileDirectory" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="safeFileDirectory">
    <xs:sequence>
      <xs:element name="configuredSafeDirectoryPath" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="commandLineExecuterOutput">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandOutput">
        <xs:sequence>
          <xs:element name="exitValue" type="xs:int"/>
          <xs:element name="outputFiles">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="key" minOccurs="0" type="tns:typeImportCommandInput"/>
                      <xs:element name="value" minOccurs="0" type="tns:thinBinaryData"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="standardError" type="tns:thinBinaryData" minOccurs="0"/>
          <xs:element name="standardOut" type="tns:thinBinaryData" minOccurs="0"/>
          <xs:element name="substitutedCommandLine" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="typeString">
    <xs:complexContent>
      <xs:extension base="tns:userClArg">
        <xs:sequence>
          <xs:element name="value" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="typeExportCommandOutput">
    <xs:complexContent>
      <xs:extension base="tns:typeCommandOutput">
        <xs:sequence>
          <xs:element name="exportCmdInputclcRefs" type="tns:clcUrlParameter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="exportPluginClassKey" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="typeBoolean">
    <xs:complexContent>
      <xs:extension base="tns:typeString">
        <xs:sequence>
          <xs:element name="enabled" type="xs:boolean"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="typeBinaryObject">
    <xs:complexContent>
      <xs:extension base="tns:userClArg">
        <xs:sequence>
          <xs:element name="value" type="tns:thinBinaryData" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="commandLineExecuterMasterParameters">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandParameters">
        <xs:sequence>
          <xs:element name="commandLineExecuterCommandId" type="xs:string" minOccurs="0"/>
          <xs:element name="commandLineExecuterCommandName" type="xs:string" minOccurs="0"/>
          <xs:element name="commandLineExecuterParameters" type="tns:commandLineExecuterParameters" minOccurs="0"/>
          <xs:element name="commandLineOutputInsertionPoint" type="tns:clcUrlParameter" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="typeCsvEnum">
    <xs:complexContent>
      <xs:extension base="tns:typeString">
        <xs:sequence>
          <xs:element name="csvEnumDisplayValues" type="xs:string" minOccurs="0"/>
          <xs:element name="csvEnumValues" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="typeBooleanCompound">
    <xs:complexContent>
      <xs:extension base="tns:typeBoolean">
        <xs:sequence>
          <xs:element name="compoundUserArg" type="tns:userClArg" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="typeDouble">
    <xs:complexContent>
      <xs:extension base="tns:typeString">
        <xs:sequence>
          <xs:element name="doubleValue" type="xs:double"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="authenticationConfiguration">
    <xs:complexContent>
      <xs:extension base="tns:serverConfiguration">
        <xs:sequence>
          <xs:element name="adConfiguration" type="tns:adConfiguration" minOccurs="0"/>
          <xs:element name="ldapConfiguration" type="tns:ldapConfiguration" minOccurs="0"/>
          <xs:element name="mechamism" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="adConfiguration">
    <xs:sequence>
      <xs:element name="adminGroup" type="xs:string" minOccurs="0"/>
      <xs:element name="cacheTimeout" type="xs:int"/>
      <xs:element name="domain" type="xs:string" minOccurs="0"/>
      <xs:element name="groupsDN" type="xs:string" minOccurs="0"/>
      <xs:element name="host" type="xs:string" minOccurs="0"/>
      <xs:element name="port" type="xs:int"/>
      <xs:element name="usersDN" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ldapConfiguration">
    <xs:sequence>
      <xs:element name="adminGroup" type="xs:string" minOccurs="0"/>
      <xs:element name="anonymousBind" type="xs:boolean"/>
      <xs:element name="baseDN" type="xs:string" minOccurs="0"/>
      <xs:element name="bindDN" type="xs:string" minOccurs="0"/>
      <xs:element name="bindPassword" type="xs:string" minOccurs="0"/>
      <xs:element name="cacheTimeout" type="xs:int"/>
      <xs:element name="groupNameAttr" type="xs:string" minOccurs="0"/>
      <xs:element name="groupsDN" type="xs:string" minOccurs="0"/>
      <xs:element name="gssapi" type="xs:boolean"/>
      <xs:element name="host" type="xs:string" minOccurs="0"/>
      <xs:element name="krbConfig" type="xs:string" minOccurs="0"/>
      <xs:element name="membershipAttr" type="xs:string" minOccurs="0"/>
      <xs:element name="port" type="xs:int"/>
      <xs:element name="realm" type="xs:string" minOccurs="0"/>
      <xs:element name="ssl" type="xs:boolean"/>
      <xs:element name="uidAttr" type="xs:string" minOccurs="0"/>
      <xs:element name="usersDN" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="userConfiguration">
    <xs:complexContent>
      <xs:extension base="tns:serverConfiguration">
        <xs:sequence>
          <xs:element name="adminGroup" type="xs:string" minOccurs="0"/>
          <xs:element name="groupMap">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="key" minOccurs="0" type="xs:string"/>
                      <xs:element name="value" minOccurs="0" type="tns:group"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="rootPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="userPasswordMap">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="key" minOccurs="0" type="xs:string"/>
                      <xs:element name="value" minOccurs="0" type="xs:string"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="group">
    <xs:sequence>
      <xs:element name="members" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="commandLineExecuterMasterOutput">
    <xs:complexContent>
      <xs:extension base="tns:masterCommandOutput">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="masterCommandOutput">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandOutput">
        <xs:sequence>
          <xs:element name="childProcessesOutput" type="tns:serverCommandOutput" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="clcFileObjectReference">
    <xs:complexContent>
      <xs:extension base="tns:clcObjectReference">
        <xs:sequence>
          <xs:element name="binaryData" type="tns:thinBinaryData" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverInformation">
    <xs:sequence>
      <xs:element name="cloudMode" type="xs:boolean"/>
      <xs:element name="databaseEnabled" type="xs:boolean"/>
      <xs:element name="debugMode" type="xs:boolean"/>
      <xs:element name="jobNodes" type="xs:int"/>
      <xs:element name="limitedMode" type="xs:boolean"/>
      <xs:element name="productId" type="xs:string" minOccurs="0"/>
      <xs:element name="productName" type="xs:string" minOccurs="0"/>
      <xs:element name="serverFacadeVersion" type="xs:long"/>
      <xs:element name="validLicense" type="xs:boolean"/>
      <xs:element name="version" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="commandLineExecuterMasterReference">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandReference">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="safeFileDirectories">
    <xs:complexContent>
      <xs:extension base="tns:serverConfiguration">
        <xs:sequence>
          <xs:element name="safeFileDirectories" type="tns:safeFileDirectory" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="safeFileLocation">
    <xs:sequence>
      <xs:element name="clcUrlParameter" type="tns:clcUrlParameter" minOccurs="0"/>
      <xs:element name="directory" type="xs:boolean"/>
      <xs:element name="itemName" type="xs:string" minOccurs="0"/>
      <xs:element name="pathname" type="xs:string" minOccurs="0"/>
      <xs:element name="permissionRead" type="xs:boolean"/>
      <xs:element name="permissionWrite" type="xs:boolean"/>
      <xs:element name="serverIconRelativePath" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="safeFileLocations">
    <xs:sequence>
      <xs:element name="safeFileLocations" type="tns:safeFileLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="superLocation" type="tns:safeFileLocation" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="gridExecuterCommandReference">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandReference">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="gridExecuterParameters">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandParameters">
        <xs:sequence>
          <xs:element name="gridExcutedCommand" type="tns:serverCommandReference" minOccurs="0"/>
          <xs:element name="gridPreset" type="tns:gridPreset" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="gridPreset">
    <xs:sequence>
      <xs:element name="drmaaNativeLibPath" type="xs:string" minOccurs="0"/>
      <xs:element name="gridExecuteablePath" type="xs:string" minOccurs="0"/>
      <xs:element name="gridSharedWorkDir" type="xs:string" minOccurs="0"/>
      <xs:element name="gridType" type="tns:gridType" minOccurs="0"/>
      <xs:element name="jobCategory" type="xs:string" minOccurs="0"/>
      <xs:element name="nativeSpecification" type="xs:string" minOccurs="0"/>
      <xs:element name="presetName" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="gridConfiguration">
    <xs:complexContent>
      <xs:extension base="tns:serverConfiguration">
        <xs:sequence>
          <xs:element name="gridPresets" type="tns:gridPreset" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverBatchCommandParameters">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandParameters">
        <xs:sequence>
          <xs:element name="commandRefs" type="tns:serverCommandReference" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="postProcessCommandRef" type="tns:serverCommandReference" minOccurs="0"/>
          <xs:element name="validPostProcessTypes" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="clcUrlParameterWithAttachment">
    <xs:complexContent>
      <xs:extension base="tns:clcUrlParameter">
        <xs:sequence>
          <xs:element name="dataHandler" xmime:expectedContentTypes="application/octet-stream" type="xs:base64Binary" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverCLCExecutionEnvironment">
    <xs:complexContent>
      <xs:extension base="tns:serverExecutionEnvironment">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverGridExecutionEnvironment">
    <xs:complexContent>
      <xs:extension base="tns:serverExecutionEnvironment">
        <xs:sequence>
          <xs:element name="gridPreset" type="tns:gridPreset" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverApiPermissionConfiguration">
    <xs:complexContent>
      <xs:extension base="tns:serverConfiguration">
        <xs:sequence>
          <xs:element name="permissionsMap">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="key" minOccurs="0" type="tns:grantedGroupsKey"/>
                      <xs:element name="value" minOccurs="0" type="tns:grantedGroups"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="grantedGroupsKey">
    <xs:sequence>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="key" type="xs:string" minOccurs="0"/>
      <xs:element name="keyType" type="tns:keyType" minOccurs="0"/>
      <xs:element name="subType" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="grantedGroups">
    <xs:sequence>
      <xs:element name="childPermission" type="tns:grantedGroupsKey" minOccurs="0"/>
      <xs:element name="nameOfGrantedGroups" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="permissionsEnabled" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="directCommandReference">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandReference">
        <xs:sequence>
          <xs:element name="CLTName" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="directCommandOutput">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandOutput">
        <xs:sequence>
          <xs:element name="methodException" type="tns:thinException" minOccurs="0"/>
          <xs:element name="methodReturnValue" type="tns:serializedBeanXML" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serializedBeanXML">
    <xs:sequence>
      <xs:element name="stringValue" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="directCommandParameters">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandParameters">
        <xs:sequence>
          <xs:element name="implementingClassName" type="xs:string" minOccurs="0"/>
          <xs:element name="methodArguments" type="tns:serializedBeanXML" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="methodAttributes" type="tns:directCommandParametersAttribute" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="methodName" type="xs:string" minOccurs="0"/>
          <xs:element name="preferredReturnSerializationPolizy" type="tns:serializedBeanXML" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="directCommandParametersAttribute">
    <xs:sequence>
      <xs:element name="help" type="xs:string" minOccurs="0"/>
      <xs:element name="mapping" type="xs:string" minOccurs="0"/>
      <xs:element name="path" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serializedBeanJSON">
    <xs:complexContent>
      <xs:extension base="tns:serializedBeanXML">
        <xs:sequence>
          <xs:element name="jasonSchema" type="xs:string" minOccurs="0"/>
          <xs:element name="parameterClassName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="directCommandConfiguration">
    <xs:complexContent>
      <xs:extension base="tns:serverConfiguration">
        <xs:sequence>
          <xs:element name="directCommandsPersistedBeanFieldsMap">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="key" minOccurs="0" type="xs:string"/>
                      <xs:element name="value" minOccurs="0" type="tns:serializedBeanXML"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="typeContextSubstitute">
    <xs:complexContent>
      <xs:extension base="tns:userClArg">
        <xs:sequence>
          <xs:element name="contextSubstitute" type="tns:contextSubstitutes" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="workflowCommandParameters">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandParameters">
        <xs:sequence>
          <xs:element name="serverWorkflowDestination" type="tns:clcUrlParameter" minOccurs="0"/>
          <xs:element name="serverWorkflowSource" type="tns:clcUrlParameter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="workflowBean" type="tns:workflowBean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="workflowBean">
    <xs:sequence>
      <xs:element name="apiVersion" type="xs:long"/>
      <xs:element name="classKey" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="id" type="xs:string" minOccurs="0"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="version" type="xs:double"/>
      <xs:element name="workflowConnections" type="tns:workflowConnectionBean" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="workflowElements" type="tns:workflowElementBean" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="workflowConnectionBean">
    <xs:sequence>
      <xs:element name="inputChannelReference" type="tns:workflowHandlerBean" minOccurs="0"/>
      <xs:element name="outputChannelReference" type="tns:workflowHandlerBean" minOccurs="0"/>
      <xs:element name="source" type="tns:workflowElementBean" minOccurs="0"/>
      <xs:element name="target" type="tns:workflowElementBean" minOccurs="0"/>
      <xs:element name="workflowInput" type="xs:boolean"/>
      <xs:element name="workflowOutput" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="workflowHandlerBean">
    <xs:sequence>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="id" type="xs:string" minOccurs="0"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="type" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="workflowElementBean">
    <xs:sequence>
      <xs:element name="classKey" type="xs:string" minOccurs="0"/>
      <xs:element name="commandId" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="id" type="xs:string" minOccurs="0"/>
      <xs:element name="input" type="xs:boolean"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="output" type="xs:boolean"/>
      <xs:element name="parameterByRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" minOccurs="0" type="xs:string"/>
                  <xs:element name="value" minOccurs="0" type="tns:workflowRole"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="parameters" type="tns:workflowElementBeanParameter" minOccurs="0"/>
      <xs:element name="serverCommandName" type="xs:string" minOccurs="0"/>
      <xs:element name="version" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="workflowElementBeanParameter">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="workflowConfiguration">
    <xs:complexContent>
      <xs:extension base="tns:serverConfiguration">
        <xs:sequence>
          <xs:element name="installedWorkflowPlugins" type="tns:installedWorkflowPlugin" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="installedWorkflowPlugin">
    <xs:sequence>
      <xs:element name="installedWorkflowCommand" type="tns:installedTemplateCommand" minOccurs="0"/>
      <xs:element name="workflowPluginDescriptor" type="tns:thinPluginDescriptor" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="thinPluginDescriptor">
    <xs:sequence>
      <xs:element name="beta" type="xs:boolean"/>
      <xs:element name="betaExpires" type="xs:long"/>
      <xs:element name="betaVersion" type="xs:int"/>
      <xs:element name="buildId" type="xs:string" minOccurs="0"/>
      <xs:element name="classification" type="tns:thinPluginClassification" minOccurs="0"/>
      <xs:element name="cpaFile" type="xs:string" minOccurs="0"/>
      <xs:element name="denied" type="xs:boolean"/>
      <xs:element name="deniedMsg" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="disabled" type="xs:boolean"/>
      <xs:element name="id" type="xs:string" minOccurs="0"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="vendorName" type="xs:string" minOccurs="0"/>
      <xs:element name="version" type="tns:thinPluginVersion" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="thinPluginVersion">
    <xs:sequence>
      <xs:element name="major" type="xs:int"/>
      <xs:element name="minor" type="xs:int"/>
      <xs:element name="rev" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serverCommandAlgoReference">
    <xs:complexContent>
      <xs:extension base="tns:serverCommandReference">
        <xs:sequence>
          <xs:element name="noInputAlgo" type="xs:boolean"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="thinPluginDescripterBinaryIcon">
    <xs:complexContent>
      <xs:extension base="tns:thinPluginDescripterReferencedIcon">
        <xs:sequence>
          <xs:element name="imageFileBase64" type="xs:string" minOccurs="0"/>
          <xs:element name="imageFileName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="thinPluginDescripterReferencedIcon">
    <xs:complexContent>
      <xs:extension base="tns:thinPluginDescriptor">
        <xs:sequence>
          <xs:element name="installedIconURL" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="workflowElementBeanParameterExternal">
    <xs:complexContent>
      <xs:extension base="tns:workflowElementBeanParameter">
        <xs:sequence>
          <xs:element name="workflowCommandReference" type="tns:serverCommandReference" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="thinPluginDescripterAttachment">
    <xs:complexContent>
      <xs:extension base="tns:thinPluginDescripterReferencedIcon">
        <xs:sequence>
          <xs:element name="iconAttachment" type="tns:soapBinaryData" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="valueTypeBoolean">
    <xs:complexContent>
      <xs:extension base="tns:algoParameterValueType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="valueTypeByte">
    <xs:complexContent>
      <xs:extension base="tns:algoParameterValueType">
        <xs:sequence>
          <xs:element name="maximum" type="xs:byte" minOccurs="0"/>
          <xs:element name="minimum" type="xs:byte" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="valueTypeClcUrl">
    <xs:complexContent>
      <xs:extension base="tns:algoParameterValueType">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="valueTypeClcUrlFile">
    <xs:complexContent>
      <xs:extension base="tns:valueTypeClcUrl">
        <xs:sequence>
          <xs:element name="fileFilter" type="tns:fileFilter" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fileFilter">
    <xs:sequence>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="fileExtension" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="valueTypeClcUrlObject">
    <xs:complexContent>
      <xs:extension base="tns:valueTypeClcUrl">
        <xs:sequence>
          <xs:element name="clcObjectTypeConstraints" type="tns:clcObjectTypeConstraints" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="clcObjectTypeConstraints">
    <xs:sequence>
      <xs:element name="objectTypeConstraints" type="tns:clcObjectTypeConstraint" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="clcObjectTypeConstraint">
    <xs:sequence>
      <xs:element name="allowedObjectClassName" type="xs:string" minOccurs="0"/>
      <xs:element name="allowedSubtypeNames" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="valueTypeDouble">
    <xs:complexContent>
      <xs:extension base="tns:algoParameterValueType">
        <xs:sequence>
          <xs:element name="max" type="xs:double" minOccurs="0"/>
          <xs:element name="maxInclusive" type="xs:boolean"/>
          <xs:element name="min" type="xs:double" minOccurs="0"/>
          <xs:element name="minInclusive" type="xs:boolean"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="valueTypeInteger">
    <xs:complexContent>
      <xs:extension base="tns:algoParameterValueType">
        <xs:sequence>
          <xs:element name="max" type="xs:int" minOccurs="0"/>
          <xs:element name="min" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="valueTypeLong">
    <xs:complexContent>
      <xs:extension base="tns:algoParameterValueType">
        <xs:sequence>
          <xs:element name="max" type="xs:long" minOccurs="0"/>
          <xs:element name="min" type="xs:long" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="valueTypeString">
    <xs:complexContent>
      <xs:extension base="tns:algoParameterValueType">
        <xs:sequence>
          <xs:element name="pattern" type="xs:string" minOccurs="0"/>
          <xs:element name="patternDescription" type="xs:string" minOccurs="0"/>
          <xs:element name="valueSeparator" type="xs:unsignedShort"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="workflowElementBeanParameterExternalOrphane">
    <xs:complexContent>
      <xs:extension base="tns:workflowElementBeanParameterExternal">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="typeInteger">
    <xs:complexContent>
      <xs:extension base="tns:typeString">
        <xs:sequence>
          <xs:element name="integerValue" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="workflowCommandOutput">
    <xs:complexContent>
      <xs:extension base="tns:masterCommandOutput">
        <xs:sequence>
          <xs:element name="workflowLog" type="tns:clcUrlParameter" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="qualificationReportAlgo">
    <xs:complexContent>
      <xs:extension base="tns:qualificationReport">
        <xs:sequence>
          <xs:element name="missingSourceOrDestination" type="tns:clcUrlParameter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="parameterValidationResult" type="tns:algoParameterValidationBeans" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="qualificationReport">
    <xs:sequence>
      <xs:element name="executionQualification" type="tns:qualificationClassification" minOccurs="0"/>
      <xs:element name="nonExecutionQualificationExplanation" type="xs:string" minOccurs="0"/>
      <xs:element name="qualificationEvaluationException" type="tns:thinException" minOccurs="0"/>
      <xs:element name="qualifiedCommand" type="tns:serverCommandIdentifier" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="algoParameterValidationBeans">
    <xs:sequence>
      <xs:element name="validations" type="tns:algoParameterValidationBean" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="algoParameterValidationBean">
    <xs:sequence>
      <xs:element name="keyIDs" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="validation" type="xs:string" minOccurs="0"/>
      <xs:element name="validationType" type="tns:parameterValidationType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serverCommandIdentifier">
    <xs:sequence>
      <xs:element name="id" type="xs:string" minOccurs="0"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="version" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="qualificationReportMaster">
    <xs:complexContent>
      <xs:extension base="tns:qualificationReport">
        <xs:sequence>
          <xs:element name="childQualificationReports" type="tns:qualificationReport" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="qualificationReportWorkflow">
    <xs:complexContent>
      <xs:extension base="tns:qualificationReportMaster">
        <xs:sequence>
          <xs:element name="workflowBeanIdCommonsMap">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="key" minOccurs="0" type="xs:string"/>
                      <xs:element name="value" minOccurs="0" type="tns:workflowReportCommons"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="workflowParameterCommons" type="tns:workflowRoleCommons" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="workflowReportCommons">
    <xs:sequence>
      <xs:element name="qualificationReport" type="tns:qualificationReport" minOccurs="0"/>
      <xs:element name="workflowRoleCommons" type="tns:workflowRoleCommons" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="workflowRoleCommons">
    <xs:sequence>
      <xs:element name="highestCommonDenominatorParameters" type="tns:workflowRole" minOccurs="0"/>
      <xs:element name="lowestCommonDenominatorInconsistentParameters" type="tns:workflowRole" minOccurs="0"/>
      <xs:element name="lowestCommonDenominatorInvalidParameters" type="tns:workflowRole" minOccurs="0"/>
      <xs:element name="lowestCommonDenominatorMissingParameters" type="tns:workflowRole" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="typeSafeFile">
    <xs:complexContent>
      <xs:extension base="tns:userClArg">
        <xs:sequence>
          <xs:element name="clcUrlParameters" type="tns:clcUrlParameter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="schedule">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:serverCommandReference" minOccurs="0"/>
      <xs:element name="arg2" type="tns:interval" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="interval">
    <xs:sequence>
      <xs:element name="milisecondsBetweenExecutions" type="xs:long"/>
      <xs:element name="milisecondsToFirstExecution" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="scheduleResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ServiceException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
      <xs:element name="stackTraceString" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getExecutionEnvironments">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getExecutionEnvironmentsResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:serverExecutionEnvironment" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="removeAttribute">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:base64Binary" nillable="true" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="removeAttributeResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="canEditUsersAndGroups">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="canEditUsersAndGroupsResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getUsers">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getUsersResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="moveBefore">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
      <xs:element name="arg4" type="xs:string" minOccurs="0"/>
      <xs:element name="arg5" type="xs:boolean"/>
      <xs:element name="arg6" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="moveBeforeResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="auditLogQuery">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:logQuery" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="logQuery">
    <xs:complexContent>
      <xs:extension base="tns:logEntry">
        <xs:sequence>
          <xs:element name="beforeThisDate" type="xs:long" minOccurs="0"/>
          <xs:element name="destinctField" type="tns:selectDestinctableFields" minOccurs="0"/>
          <xs:element name="onOrAfterThisDate" type="xs:long" minOccurs="0"/>
          <xs:element name="processIds" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="windowFrom" type="xs:int" minOccurs="0"/>
          <xs:element name="windowTo" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="logEntry">
    <xs:sequence>
      <xs:element name="commandName" type="xs:string" minOccurs="0"/>
      <xs:element name="entering" type="xs:boolean"/>
      <xs:element name="exiting" type="xs:boolean"/>
      <xs:element name="IPAddress" type="xs:string" minOccurs="0"/>
      <xs:element name="objectsIn" type="xs:anyType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="objectsOut" type="xs:anyType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="operation" type="tns:operationsLogged" minOccurs="0"/>
      <xs:element name="serverProcessId" type="xs:string" minOccurs="0"/>
      <xs:element name="sessionID" type="xs:string" minOccurs="0"/>
      <xs:element name="sourceClass" type="xs:string" minOccurs="0"/>
      <xs:element name="timeStamp" type="xs:long" minOccurs="0"/>
      <xs:element name="username" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="auditLogQueryResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:logQueryResult" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="logQueryResult">
    <xs:sequence>
      <xs:element name="DBQueriedConnectString" type="xs:string" minOccurs="0"/>
      <xs:element name="logEntries" type="tns:logEntry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="logQuery" type="tns:logQuery" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getServerStatus">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getServerStatusResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:serverStatus" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serverStatus">
    <xs:sequence>
      <xs:element name="serverConfiguration" type="tns:serverMainConfiguration" minOccurs="0"/>
      <xs:element name="usersSessionStatus" type="tns:userStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="userStatus">
    <xs:sequence>
      <xs:element name="httpSessions" type="tns:clcClientSession" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="lastLogin" type="xs:long"/>
      <xs:element name="userJobs" type="tns:userProcesses" minOccurs="0"/>
      <xs:element name="username" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="clcClientSession">
    <xs:sequence>
      <xs:element name="admin" type="xs:boolean"/>
      <xs:element name="clientHost" type="xs:string" minOccurs="0"/>
      <xs:element name="clientIpAddress" type="xs:string" minOccurs="0"/>
      <xs:element name="creationTimeMiliSeconds" type="xs:long"/>
      <xs:element name="gwtContext" type="xs:boolean"/>
      <xs:element name="serverName" type="xs:string" minOccurs="0"/>
      <xs:element name="serverPort" type="xs:int"/>
      <xs:element name="sessionContext">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" minOccurs="0" type="xs:string"/>
                  <xs:element name="value" minOccurs="0" type="xs:string"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sessionId" type="xs:string" minOccurs="0"/>
      <xs:element name="userEmail" type="xs:string" minOccurs="0"/>
      <xs:element name="userSessionTimeOutSeconds" type="xs:int"/>
      <xs:element name="username" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="userProcesses">
    <xs:sequence>
      <xs:element name="userProcesses" type="tns:clcProcessReflection" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="export">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="exportResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:thinBinaryData" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="permissionsSupport">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="permissionsSupportResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="insertFileObjectBefore">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="tns:thinBinaryData" minOccurs="0"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
      <xs:element name="arg4" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="insertFileObjectBeforeResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:transportPersistenceElement" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="list">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:boolean"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="listResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:transportPersistenceStructure" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getIndexServerStatus">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getIndexServerStatusResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:indexServerStatus" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="indexServerStatus">
    <xs:sequence>
      <xs:element name="local" type="xs:boolean"/>
      <xs:element name="pingOk" type="xs:boolean"/>
      <xs:element name="remoteHost" type="xs:string" minOccurs="0"/>
      <xs:element name="remoteUrl" type="xs:string" minOccurs="0"/>
      <xs:element name="statusDescription" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getTreeItem">
    <xs:sequence>
      <xs:element name="arg0" type="tns:clcUrlParameter" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getTreeItemResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:clcTreeItem" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="clcTreeItem">
    <xs:sequence>
      <xs:element name="children" type="tns:clcTreeItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="clcUrlParameter" type="tns:clcUrlParameter" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="exportPluginReferences" type="tns:exportPluginReference" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="folder" type="xs:boolean"/>
      <xs:element name="html" type="xs:string" minOccurs="0"/>
      <xs:element name="iconHeight" type="xs:int"/>
      <xs:element name="iconPath" type="xs:string" minOccurs="0"/>
      <xs:element name="iconWidth" type="xs:int"/>
      <xs:element name="objectId" type="xs:string" minOccurs="0"/>
      <xs:element name="objectName" type="xs:string" minOccurs="0"/>
      <xs:element name="objectReference" type="tns:clcObjectReference" minOccurs="0"/>
      <xs:element name="persistenceModelId" type="xs:string" minOccurs="0"/>
      <xs:element name="recycled" type="xs:boolean"/>
      <xs:element name="title" type="xs:string" minOccurs="0"/>
      <xs:element name="unknownClcFileObject" type="xs:boolean"/>
      <xs:element name="userHasAccess" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="exportPluginReference">
    <xs:sequence>
      <xs:element name="exportPluginClassKey" type="xs:string" minOccurs="0"/>
      <xs:element name="fileFilterDescription" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="doResumeProcess">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="doResumeProcessResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="setServerConfiguration">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:serverConfiguration" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="setServerConfigurationResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:serverConfiguration" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="doSuspendProcess">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="doSuspendProcessResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="updateObject">
    <xs:sequence>
      <xs:element name="arg0" type="tns:editableCLCObject" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="editableCLCObject">
    <xs:sequence>
      <xs:element name="elementInfoList" type="tns:elementInfoList" minOccurs="0"/>
      <xs:element name="objectReference" type="tns:clcUrlParameter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="elementInfoList">
    <xs:sequence>
      <xs:element name="customAttributes" type="tns:customThinAttribute" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="fixedValues" type="tns:fixedElementInfo" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="customThinAttribute">
    <xs:sequence>
      <xs:element name="attributeType" type="xs:string" minOccurs="0"/>
      <xs:element name="booleanTypeSelected" type="xs:boolean"/>
      <xs:element name="classKey" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="editHistory" type="tns:editHistory" minOccurs="0"/>
      <xs:element name="editable" type="xs:boolean"/>
      <xs:element name="validEnumValues" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="value" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="editHistory">
    <xs:sequence>
      <xs:element name="attemptedNewValue" type="xs:string" minOccurs="0"/>
      <xs:element name="validationErrorMessage" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="fixedElementInfo">
    <xs:sequence>
      <xs:element name="comments" type="xs:string" minOccurs="0"/>
      <xs:element name="commonName" type="xs:string" minOccurs="0"/>
      <xs:element name="dbSource" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="elementType" type="xs:string" minOccurs="0"/>
      <xs:element name="gbDivision" type="xs:string" minOccurs="0"/>
      <xs:element name="keyWords" type="xs:string" minOccurs="0"/>
      <xs:element name="latinName" type="xs:string" minOccurs="0"/>
      <xs:element name="length" type="xs:int"/>
      <xs:element name="modificationDate" type="xs:string" minOccurs="0"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="taxonomyName" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="updateObjectResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:editableCLCObject" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getExportPluginReferences">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getExportPluginReferencesResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:exportPluginReference" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getExportPluginReferencesSuitable">
    <xs:sequence>
      <xs:element name="arg0" type="tns:clcObjectReference" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getExportPluginReferencesSuitableResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:exportPluginReference" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getImportPluginReferences">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getImportPluginReferencesResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:importPluginReference" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="importPluginReference">
    <xs:sequence>
      <xs:element name="fileFilterDescription" type="xs:string" minOccurs="0"/>
      <xs:element name="importPluginClassKey" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getProcessManagerProcesses">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getProcessManagerProcessesResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:serverProcessManagerProcesses" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serverProcessManagerProcesses">
    <xs:sequence>
      <xs:element name="queuedProcesses" type="tns:clcProcessReflection" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="runningProcesses" type="tns:clcProcessReflection" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="setPermissions">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
      <xs:element name="arg3" type="xs:boolean"/>
      <xs:element name="arg4" type="xs:boolean"/>
      <xs:element name="arg5" type="xs:boolean"/>
      <xs:element name="arg6" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="setPermissionsResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="workflowManagerUpdate">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="tns:installedTemplateCommand" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="workflowManagerUpdateResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:qualificationReportWorkflow" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getClcObjectThin">
    <xs:sequence>
      <xs:element name="arg0" type="tns:clcObjectReference" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getClcObjectThinResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:clcObjectThin" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="clcObjectThin">
    <xs:sequence>
      <xs:element name="clcUrlParameter" type="tns:clcUrlParameter" minOccurs="0"/>
      <xs:element name="elementInfo" type="tns:elementInfoList" minOccurs="0"/>
      <xs:element name="historyEntryThin" type="tns:historyEntryThin" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="htmlDescription" type="xs:string" minOccurs="0"/>
      <xs:element name="objectReference" type="tns:clcObjectReference" minOccurs="0"/>
      <xs:element name="objectType" type="xs:string" minOccurs="0"/>
      <xs:element name="sequenceAsGBString" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="historyEntryThin">
    <xs:sequence>
      <xs:element name="comment" type="xs:string" minOccurs="0"/>
      <xs:element name="date" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="stringRepresentation" type="xs:string" minOccurs="0"/>
      <xs:element name="userName" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="createContainer">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
      <xs:element name="arg4" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="createContainerResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:transportPersistenceContainer" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="doAbort">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="doAbortResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="startInsertBefore">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="tns:transportPersistenceElement" minOccurs="0"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
      <xs:element name="arg4" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="startInsertBeforeResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:transportInsertResult" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="deleteScheduledCommand">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="deleteScheduledCommandResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="getProcessOutput">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getProcessOutputResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:serverCommandOutput" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="removeGroup">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="removeGroupResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="getServerCommandRefLoaded">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getServerCommandRefLoadedResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:serverCommandReference" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="waitForIndexThreadsToFinish">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="waitForIndexThreadsToFinishResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="setRootPassword">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="setRootPasswordResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="insertAttribute">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:base64Binary" nillable="true" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="insertAttributeResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="createContainerBefore">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:clcObjectReference" minOccurs="0"/>
      <xs:element name="arg2" type="tns:clcObjectReference" minOccurs="0"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="createContainerBeforeResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:clcObjectReference" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getAllAttributes">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getAllAttributesResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:base64Binary" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="login">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="loginResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:clcClientSession" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="commitInsert">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
      <xs:element name="arg3" type="xs:base64Binary" nillable="true" minOccurs="0"/>
      <xs:element name="arg4" type="xs:int"/>
      <xs:element name="arg5" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="commitInsertResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="queueExecute">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:serverCommandReference" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="queueExecuteResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="generateSystemDiagnosticsReport">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:diagnosticsCheckType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="generateSystemDiagnosticsReportResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:diagnosticsReport" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="diagnosticsReport">
    <xs:sequence>
      <xs:element name="checkOk" type="xs:boolean"/>
      <xs:element name="checkType" type="tns:diagnosticsCheckType" minOccurs="0"/>
      <xs:element name="testResultDescriptionsHtml" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getServerConfiguration">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:serverConfigurationModule" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getServerConfigurationResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:serverConfiguration" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="qualify">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:serverCommandReference" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="qualifyResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:qualificationReport" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="addLazyObject">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:base64Binary" nillable="true" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
      <xs:element name="arg3" type="xs:int"/>
      <xs:element name="arg4" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="addLazyObjectResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="logout">
    <xs:sequence>
      <xs:element name="arg0" type="tns:clcClientSession" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="logoutResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="emptyRecycleBin">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="emptyRecycleBinResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="getProcessOutputType">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getProcessOutputTypeResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:serverCommandOutput" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getTreeItems">
    <xs:sequence>
      <xs:element name="arg0" type="tns:clcObjectReference" minOccurs="0"/>
      <xs:element name="arg1" type="tns:clcObjectTypeConstraints" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getTreeItemsResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:clcTreeItem" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="exists">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="existsResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="workflowManagerInstall">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:installedWorkflowPlugin" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="workflowManagerInstallResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:qualificationReportWorkflow" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="workflowManagerList">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="workflowManagerListResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:installedWorkflows" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="installedWorkflows">
    <xs:sequence>
      <xs:element name="dependenciesReport" type="tns:workflowDependenciesReport" minOccurs="0"/>
      <xs:element name="installedWorkflowPlugins" type="tns:installedWorkflowPlugin" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="workflowDependenciesReport">
    <xs:sequence>
      <xs:element name="workflowDependenciezReport">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" minOccurs="0" type="xs:string"/>
                  <xs:element name="value" minOccurs="0" type="tns:qualificationReportWorkflow"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="generateSystemInformationArchive">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:systemInformationQuery" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="systemInformationQuery">
    <xs:sequence>
      <xs:element name="addStaticUserEmailAddress" type="xs:string" minOccurs="0"/>
      <xs:element name="addStaticUserErrorDescription" type="xs:string" minOccurs="0"/>
      <xs:element name="addStaticUserStackTrace" type="xs:string" minOccurs="0"/>
      <xs:element name="auditLogQuery" type="tns:logQuery" minOccurs="0"/>
      <xs:element name="jobnodesQuery" type="tns:systemInformationQuery" minOccurs="0"/>
      <xs:element name="queryAuditlog" type="xs:boolean"/>
      <xs:element name="queryConfigurations" type="xs:boolean"/>
      <xs:element name="queryServerCheckSetupStatus" type="xs:boolean"/>
      <xs:element name="queryServerLogFiles" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="generateSystemInformationArchiveResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:thinBinaryData" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getRecycleBin">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getRecycleBinResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:transportRecycleBin" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getServerInformation">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="getServerInformationResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:serverInformation" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="removeUserFromGroup">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="removeUserFromGroupResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="listSafeFilesIn">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:safeFileLocation" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="listSafeFilesInResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:safeFileLocations" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getPlugins">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:thinPluginDescriptor" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getPluginsResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:thinBinaryData" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="commitUpdate">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
      <xs:element name="arg3" type="xs:base64Binary" nillable="true" minOccurs="0"/>
      <xs:element name="arg4" type="xs:int"/>
      <xs:element name="arg5" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="commitUpdateResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="fetchLazyByteArray">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:int"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="fetchLazyByteArrayResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:base64Binary" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getScheduledCommands">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getScheduledCommandsResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:scheduledCommand" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="scheduledCommand">
    <xs:sequence>
      <xs:element name="commandReference" type="tns:serverCommandReference" minOccurs="0"/>
      <xs:element name="intervals" type="tns:interval" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="scheduleId" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getSessionProcess">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getSessionProcessResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:clcProcessReflection" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="removeUser">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="removeUserResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="getTreeItemPath">
    <xs:sequence>
      <xs:element name="arg0" type="tns:clcUrlParameter" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getTreeItemPathResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:clcObjectPath" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="clcObjectPath">
    <xs:complexContent>
      <xs:extension base="tns:clcObjectReference">
        <xs:sequence>
          <xs:element name="father" type="tns:clcObjectPath" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="getServerCommandRefsLoaded">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getServerCommandRefsLoadedResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:serverCommandReference" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="remoteClone">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:cloneTransport" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="cloneTransport">
    <xs:sequence>
      <xs:element name="cloneObjects" type="xs:anyType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="remoteCloneResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:cloneTransport" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="setPassword">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="setPasswordResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="sort">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="sortResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="query">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="queryResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:modelQueryResults" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="modelQueryResults">
    <xs:sequence>
      <xs:element name="query" type="xs:string" minOccurs="0"/>
      <xs:element name="results" type="tns:clcTreeItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="processManagerMoveProcessForward">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:clcProcessReflection" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="processManagerMoveProcessForwardResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:serverProcessManagerProcesses" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getAdminGroupID">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getAdminGroupIDResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="startUpdate">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="tns:transportPersistenceElement" minOccurs="0"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="startUpdateResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="listPersistenceModels">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="listPersistenceModelsResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:transportPersistenceContainer" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getAllGroups">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getAllGroupsResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="invalidateUserHttpSession">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="invalidateUserHttpSessionResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="isAdmin">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="isAdminResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="processManagerMoveProcessBackward">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:clcProcessReflection" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="processManagerMoveProcessBackwardResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:serverProcessManagerProcesses" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getGroups">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getGroupsResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="fetch">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="fetchResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:transportPersistenceStructure" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="doStopProcess">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="doStopProcessResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="doRemoveTerminatedProcess">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="doRemoveTerminatedProcessResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="getServerCommandRefsRegistered">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getServerCommandRefsRegisteredResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:serverCommandReference" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="renameChild">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
      <xs:element name="arg4" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="renameChildResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getInstalledPlugins">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getInstalledPluginsResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:thinPluginDescriptor" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="doStopRequeueProcess">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="doStopRequeueProcessResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="parseClcUrl">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:clcUrlParameter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="parseClcUrlResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:clcUrlParsed" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="clcUrlParsed">
    <xs:sequence>
      <xs:element name="clcUrlParsedType" type="tns:clcUrlParsedType" minOccurs="0"/>
      <xs:element name="rootString" type="xs:string" minOccurs="0"/>
      <xs:element name="subPathStrings" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getPermissions">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getPermissionsResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:transportPermissionObject" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="transportPermissionObject">
    <xs:sequence>
      <xs:element name="group" type="xs:string" minOccurs="0"/>
      <xs:element name="readable" type="xs:boolean"/>
      <xs:element name="writable" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="removeFromRecycleBin">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="removeFromRecycleBinResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="addUserToGroup">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="addUserToGroupResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="addGroup">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="addGroupResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="updateScheduledCommand">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="tns:scheduledCommand" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="updateScheduledCommandResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="allocateObjectId">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="allocateObjectIdResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="searchWithScore">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:int"/>
      <xs:element name="arg3" type="xs:int"/>
      <xs:element name="arg4" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="searchWithScoreResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:transportPersistenceStructureScore" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="transportPersistenceStructureScore">
    <xs:sequence>
      <xs:element name="score" type="xs:float" minOccurs="0"/>
      <xs:element name="structures" type="tns:transportPersistenceStructure" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="workflowManagerUnInstall">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="workflowManagerUnInstallResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="insertCopyBefore">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
      <xs:element name="arg3" type="xs:boolean"/>
      <xs:element name="arg4" type="xs:string" minOccurs="0"/>
      <xs:element name="arg5" type="xs:string" minOccurs="0"/>
      <xs:element name="arg6" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="insertCopyBeforeResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:transportPersistenceStructure" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getUsersInGroup">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getUsersInGroupResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="removeContainers">
    <xs:sequence>
      <xs:element name="arg0" type="tns:clcObjectReferences" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="removeContainersResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="getSessionProcesses">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getSessionProcessesResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:userProcesses" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="heartBeat">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="heartBeatResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:clcClientSession" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="addUser">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="addUserResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="getAttribute">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:string" minOccurs="0"/>
      <xs:element name="arg2" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getAttributeResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:base64Binary" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="userArgumentType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TYPE_BINARY_OBJECT"/>
      <xs:enumeration value="TYPE_BOOLEAN"/>
      <xs:enumeration value="TYPE_COMMAND_OUTPUT"/>
      <xs:enumeration value="TYPE_EXPORT_COMMAND_OUTPUT"/>
      <xs:enumeration value="TYPE_STRING"/>
      <xs:enumeration value="TYPE_IMPORT_COMMAND_INPUT"/>
      <xs:enumeration value="TYPE_CSV_ENUM"/>
      <xs:enumeration value="TYPE_BOOLEAN_COMPOUND"/>
      <xs:enumeration value="TYPE_DOUBLE"/>
      <xs:enumeration value="TYPE_CONTEXT_SUBSTITUTE"/>
      <xs:enumeration value="TYPE_INTEGER"/>
      <xs:enumeration value="TYPE_SAFE_FILE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="dataBaseType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="IN_PROCESS"/>
      <xs:enumeration value="EXT_DB"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="serverState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SINGLE_SERVER"/>
      <xs:enumeration value="MASTER_NODE"/>
      <xs:enumeration value="EXECUTION_NODE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="clusterExecutionScope">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NO_SCOPE"/>
      <xs:enumeration value="EXECUTE_MASTER"/>
      <xs:enumeration value="EXECUTE_DEDICATED_SLAVE_NODE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="operation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="INSTALL_PLUGIN"/>
      <xs:enumeration value="UNINSTALL_PLUGIN"/>
      <xs:enumeration value="RELOAD_PLUGINS"/>
      <xs:enumeration value="NO_OPERATION"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="gridType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OGE"/>
      <xs:enumeration value="DRMAA"/>
      <xs:enumeration value="PBSPRO"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="keyType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PERMISSION_COMMAND"/>
      <xs:enumeration value="PERMISION_CONFIGURATION"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="contextSubstitutes">
    <xs:restriction base="xs:string">
      <xs:enumeration value="CPU_LIMIT_MAX_CORES"/>
      <xs:enumeration value="CURRENT_USER"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="workflowRole">
    <xs:restriction base="xs:string">
      <xs:enumeration value="CREATOR"/>
      <xs:enumeration value="ADMINISTRATOR"/>
      <xs:enumeration value="ENDUSER"/>
      <xs:enumeration value="NONE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="thinPluginClassification">
    <xs:restriction base="xs:string">
      <xs:enumeration value="CLC_PLUGIN"/>
      <xs:enumeration value="WORKFLOW_PLUGIN"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="parameterValidationType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Missing"/>
      <xs:enumeration value="Inconsistency"/>
      <xs:enumeration value="Invalid"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="qualificationClassification">
    <xs:restriction base="xs:string">
      <xs:enumeration value="LEVEL_00_DISQUALIFIED"/>
      <xs:enumeration value="LEVEL_01_QUALIFIES_MODEL"/>
      <xs:enumeration value="LEVEL_02_QUALIFIES_COMMANDS"/>
      <xs:enumeration value="LEVEL_03_QUALIFIES_PARAMETER_PRESENCE"/>
      <xs:enumeration value="LEVEL_04_QUALIFIES_PARAMETER_COMPLETENESS"/>
      <xs:enumeration value="LEVEL_05_QUALIFIES_SOURCE_AND_DESTINATION"/>
      <xs:enumeration value="LEVEL_06_QUALIFIES_EXECUTION"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="selectDestinctableFields">
    <xs:restriction base="xs:string">
      <xs:enumeration value="username"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="operationsLogged">
    <xs:restriction base="xs:string">
      <xs:enumeration value="login"/>
      <xs:enumeration value="logout"/>
      <xs:enumeration value="executeQueue"/>
      <xs:enumeration value="execute"/>
      <xs:enumeration value="executionBegin"/>
      <xs:enumeration value="setServerConfiguration"/>
      <xs:enumeration value="serverLifeCycle"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="diagnosticsCheckType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="JOB_NODE_SERVER_VERSION_EQUALITY"/>
      <xs:enumeration value="JOB_NODE_COMMAND_EQUALITY"/>
      <xs:enumeration value="JOB_NODE_FILE_PERSISTENCE_MODEL_EQUALITY"/>
      <xs:enumeration value="JOB_NODE_CONFIGURATION_EQUALITY"/>
      <xs:enumeration value="JOB_NODE_PLUGIN_EQUALITY"/>
      <xs:enumeration value="INDEX_SERVER_STATUS"/>
      <xs:enumeration value="FILE_PERSISTENCE_ID_MAP_PERMISSIONS"/>
      <xs:enumeration value="GRID_SETUP_STATUS"/>
      <xs:enumeration value="FILE_PERSISTENCE_SAFE_FILES"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="serverConfigurationModule">
    <xs:restriction base="xs:string">
      <xs:enumeration value="MAIN_SYSTEM"/>
      <xs:enumeration value="SUBSYSTEM_CLUSTER"/>
      <xs:enumeration value="SUBSYSTEM_TEMPLATE_COMMAND"/>
      <xs:enumeration value="SUBSYSTEM_AUTH"/>
      <xs:enumeration value="SUBSYSTEM_USERS"/>
      <xs:enumeration value="SUBSYSTEM_SAFE_FILES"/>
      <xs:enumeration value="SUBSYSTEM_GRID"/>
      <xs:enumeration value="SUBSYSTEM_API_PERMISSION"/>
      <xs:enumeration value="SUBSYSTEM_DIRECT_COMMAND"/>
      <xs:enumeration value="SUBSYSTEM_WORKFLOW"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="clcUrlParsedType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OBJECT_LOCAL"/>
      <xs:enumeration value="OBJECT_SERVER"/>
      <xs:enumeration value="FILE_LOCAL"/>
      <xs:enumeration value="FILE_SERVER"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>

