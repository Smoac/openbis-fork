evaluationDependsOn(':common')
evaluationDependsOn(':openbis_api')
evaluationDependsOn(':openbis-common')
evaluationDependsOn(':authentication')
evaluationDependsOn(':dbmigration')

apply from: 'http://svncisd.ethz.ch/repos/cisd/gradle/trunk/javaproject.gradle'

configurations.create('testRuntimeFirst')

dependencies {
	compile project(':common'),
			project(':openbis_api'),
		    project(':openbis-common'),
		    project(':authentication'),
		    project(':dbmigration'),
			'sencha:gxt:2.2.5',
			'lucene:lucene-highlighter:3.1.0',
			'hibernate:hibernate-search:3.4.2.Final',
			'eclipse:jetty-deploy:8.1.8.v20121106',
			'google:gwt-debug-panel:1.0',
			'google:gwt-user:2.4',
			'springframework:spring-orm:2.5.6.SEC01',
			'cisd:cisd-hotdeploy:13.01.0',
			'apache:poi-ooxml:3.8-20120326',
			'hibernate:hibernate-validator:4.2.0.Final',
			'unimi:fastutil:5.1.5',
			'apache:commons-collections:+'

	testCompile project(path: ':common', configuration: 'tests'),
				project(path: ':dbmigration', configuration: 'tests'),
				'springframework:spring-test:2.5.6.SEC01'

	testRuntime project(path: ':common', configuration: 'tests'),
				project(path: ':dbmigration', configuration: 'tests'), 
				'apache:commons-fileupload:1.2.1'

	testRuntimeFirst 'javax:servlet-api:+'
}

sourceSets.test.runtimeClasspath = configurations.testRuntimeFirst + sourceSets.test.runtimeClasspath

configurations {
	testRuntime.exclude group: 'google', module: 'gwt-servlet'
}

sourceSets { 
	test {
		resources {
			srcDirs = ['source/java']
		}
	}
}

task cleanDbSuite(type: Test) {
	useTestNG()
	options.suites('sourceTest/java/tests_system_cleandb_excluding_authorization.xml')
	testReportDir = file("${project.buildDir}/reports/tests-cleandb")
}


// This task is here to make WebAppsPropertiesTest to work. It requires some data files
// to be present on the same directory than the class file itself.
task copyTestData(type: Copy, dependsOn: testClasses) {
    from "${project.projectDir}/sourceTest/java/ch/systemsx/cisd/openbis/generic/shared/basic"
    into "${project.buildDir}/classes/test/ch/systemsx/cisd/openbis/generic/shared/basic"
    include "*.properties"
}
test.dependsOn(copyTestData)
test.dependsOn(cleanDbSuite)


/* for API packages in rtd_phosphonetx, screening */
commonApiSources = project(':common').files('.').getAsFileTree().matching {
	include "source/java/ch/systemsx/cisd/common/exceptions/**"
    include "source/java/ch/systemsx/cisd/common/api/**"
    include "source/java/ch/systemsx/cisd/common/spring/HttpInvokerUtils.java"
}
openBisApiApiSources = project(':openbis_api').files('.').getAsFileTree().matching {
    include "source/java/ch/systemsx/cisd/openbis/generic/shared/api/v1/**"
    include "source/java/ch/systemsx/cisd/openbis/generic/shared/api/v1/dto/**"
}
openbisCommonApiSources = project(':openbis-common').files('.').getAsFileTree().matching {
    include "source/java/ch/systemsx/cisd/common/api/client/**"
}
openbisApiSources = project(':openbis').files('.').getAsFileTree().matching {
    include "source/java/ch/systemsx/cisd/openbis/plugin/query/client/api/v1/**"
    include "source/java/ch/systemsx/cisd/openbis/plugin/query/shared/api/v1/dto/**"
    include "source/java/ch/systemsx/cisd/openbis/generic/shared/api/v1/**"
    include "source/java/ch/systemsx/cisd/openbis/generic/shared/api/v1/dto/**"
}

