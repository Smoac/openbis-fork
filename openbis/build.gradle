evaluationDependsOn(':commonbase')
evaluationDependsOn(':common')
evaluationDependsOn(':openbis_api')
evaluationDependsOn(':openbis-common')
evaluationDependsOn(':authentication')
evaluationDependsOn(':dbmigration')

apply from: '../gradle/javaproject.gradle'

configurations.create('testRuntimeFirst')

dependencies {
	compile project(':common'),
			project(':openbis_api'),
		    project(':openbis-common'),
		    project(':authentication'),
		    project(':dbmigration'),
			'sencha:gxt:2.2.5',
			'lucene:lucene-highlighter:5.5.5',
            'lucene:lucene-queryparser:5.5.5',
            'lucene:lucene-analyzers-common:5.5.5',
			'hibernate:hibernate-search-orm:5.8.2.Final',
			'eclipse:jetty-deploy:9.4+',
			'google:gwt-debug-panel:1.0',
			'javax:servlet-api:+',
			'google:gwt-user:+',
			'reveregroup:gwt-image-loader:+',
			'springframework:spring-orm:+',
			'cisd:cisd-hotdeploy:13.01.0',
			'apache:poi-ooxml:3.8-20120326',
			'hibernate:hibernate-validator:4.2.0.Final',
			'unimi:fastutil:5.1.5',
			'apache:commons-collections4:+',
			'springframework:spring-context-support:+',
			'ehcache:ehcache:2.10.0',
			'jline:jline:+'
			

    runtime 'slf4j:slf4j-log4j12:+'

	testCompile project(path: ':common', configuration: 'tests'),
				project(path: ':dbmigration', configuration: 'tests'),
				project(path: ':openbis_api', configuration: 'tests'),
				'springframework:spring-test:+'

	testRuntime project(path: ':common', configuration: 'tests'),
				project(path: ':dbmigration', configuration: 'tests'),
				project(path: ':openbis_api', configuration: 'tests'), 
				'apache:commons-fileupload:+'

	testRuntimeFirst 'javax:servlet-api:+'
	
}

sourceSets.test.runtimeClasspath = configurations.testRuntimeFirst + sourceSets.test.runtimeClasspath

configurations {
	testRuntime.exclude group: 'google', module: 'gwt-servlet'
}

sourceSets { 
	test {
		resources {
			srcDirs = ['source/java']
		}
	}
}

task cleanDbSuite(type: Test) {
    useTestNG()
    systemProperty "ant.project.name", project.name
    maxHeapSize = "4096m"
    jvmArgs '-XX:MaxPermSize=1024m', '-Duser.timezone=Europe/Zurich'
    testLogging.showStandardStreams = true
    ignoreFailures = true
    
    options.suites('sourceTest/java/tests_system_cleandb_excluding_authorization.xml')
    reports.html.destination = file("${project.buildDir}/reports/tests-cleandb")
}

task cleanDbSuiteProjectSamplesEnabled(type: Test) {
    useTestNG()
    systemProperty "ant.project.name", project.name
    maxHeapSize = "4096m"
    jvmArgs '-XX:MaxPermSize=1024m', '-Duser.timezone=Europe/Zurich'
    testLogging.showStandardStreams = true
    ignoreFailures = true
    systemProperty "project-samples-enabled", 'true'
    
    options.suites('sourceTest/java/tests_system_cleandb_excluding_authorization_project_samples.xml')
    reports.html.destination = file("${project.buildDir}/reports/tests-cleandb-project-samples")
}

task testProjectSamplesEnabled(type: Test) {
    useTestNG()
    systemProperty "ant.project.name", project.name
    maxHeapSize = "4096m"
    jvmArgs '-XX:MaxPermSize=1024m', '-Duser.timezone=Europe/Zurich'
    testLogging.showStandardStreams = true
    ignoreFailures = true
    systemProperty "project-samples-enabled", 'true'
    
    options.suites('sourceTest/java/tests_project_samples.xml')
    reports.html.destination = file("${project.buildDir}/reports/tests-project-samples")
}


// This task is here to make WebAppsPropertiesTest to work. It requires some data files
// to be present on the same directory than the class file itself.
task copyTestData(type: Copy, dependsOn: testClasses) {
    from "${project.projectDir}/sourceTest/java/ch/systemsx/cisd/openbis/generic/shared/basic"
    into "${project.buildDir}/classes/test/ch/systemsx/cisd/openbis/generic/shared/basic"
    include "*.properties"
}
testProjectSamplesEnabled.dependsOn(copyTestData)
cleanDbSuiteProjectSamplesEnabled.dependsOn(testProjectSamplesEnabled)
test.dependsOn(copyTestData)
test.dependsOn(cleanDbSuite)
//test.dependsOn(testProjectSamplesEnabled)

apply from: 'gwtdev.gradle'