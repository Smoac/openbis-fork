evaluationDependsOn(':commonbase')
evaluationDependsOn(':common')
evaluationDependsOn(':openbis_api')
evaluationDependsOn(':openbis-common')
evaluationDependsOn(':authentication')
evaluationDependsOn(':dbmigration')

apply from: '../gradle/javaproject.gradle'

configurations.create('testRuntimeFirst')
configurations.create('devRuntime')

dependencies {
	compile project(':common'),
			project(':openbis_api'),
			project(':openbis-common'),
			project(':authentication'),
			project(':dbmigration'),
			'sencha:gxt:2.2.5',
			'lucene:lucene-highlighter:5.5.5',
			'lucene:lucene-queryparser:5.5.5',
			'lucene:lucene-analyzers-common:5.5.5',
			'hibernate:hibernate-search-orm:5.8.2.Final',
			'eclipse:jetty-deploy:9.4.14.v20181114',
			'google:gwt-debug-panel:1.0',
			'javax:servlet-api:3.1.0',
			'google:gwt-user:2.4',
			'reveregroup:gwt-image-loader:1.1.4',
			'springframework:spring-orm:5.0.1.RELEASE',
			'cisd:cisd-hotdeploy:13.01.0',
			'apache:poi-ooxml:3.17',
			'hibernate:hibernate-validator:4.3.2.Final',
			'unimi:fastutil:5.1.5',
			'apache:commons-collections4:4.1',
			'springframework:spring-context-support:5.0.1.RELEASE',
			'ehcache:ehcache:2.10.0',
			'jline:jline:0.9.94'


	runtime 'slf4j:slf4j-log4j12:1.6.2',
			'apache:commons-fileupload:1.3.3'
			
	devRuntime 'eclipse:jetty-runner:9.4.14.v20181114'

	testCompile project(path: ':common', configuration: 'tests'),
			project(path: ':dbmigration', configuration: 'tests'),
			project(path: ':openbis_api', configuration: 'tests'),
			'springframework:spring-test:5.0.1.RELEASE'

	testRuntime project(path: ':common', configuration: 'tests'),
			project(path: ':dbmigration', configuration: 'tests'),
			project(path: ':openbis_api', configuration: 'tests'),
			'apache:commons-fileupload:1.3.3'

	testRuntimeFirst 'javax:servlet-api:3.1.0'

}

sourceSets.test.runtimeClasspath = configurations.testRuntimeFirst + sourceSets.test.runtimeClasspath

configurations {
	testRuntime.exclude group: 'google', module: 'gwt-servlet'
}

sourceSets {
	main {
		resources {
			srcDirs = ['source/java']
		}
	}
	test {
		resources {
			srcDirs = ['source/java']
		}
	}
}

task cleanDbSuite(type: Test) {
	useTestNG()
	systemProperty "ant.project.name", project.name
	maxHeapSize = "6144m"
	jvmArgs '-XX:MaxPermSize=1024m', '-Duser.timezone=Europe/Zurich'
	testLogging.showStandardStreams = true
	ignoreFailures = true

	options.suites('sourceTest/java/tests_system_cleandb_excluding_authorization.xml')
	reports.html.destination = file("${project.buildDir}/reports/tests-cleandb")
}

task cleanDbSuiteProjectSamplesEnabled(type: Test) {
	useTestNG()
	systemProperty "ant.project.name", project.name
	maxHeapSize = "6144m"
	jvmArgs '-XX:MaxPermSize=1024m', '-Duser.timezone=Europe/Zurich'
	testLogging.showStandardStreams = true
	ignoreFailures = true
	systemProperty "project-samples-enabled", 'true'

	options.suites('sourceTest/java/tests_system_cleandb_excluding_authorization_project_samples.xml')
	reports.html.destination = file("${project.buildDir}/reports/tests-cleandb-project-samples")
}

task testProjectSamplesEnabled(type: Test) {
	useTestNG()
	systemProperty "ant.project.name", project.name
	maxHeapSize = "6144m"
	jvmArgs '-XX:MaxPermSize=1024m', '-Duser.timezone=Europe/Zurich'
	testLogging.showStandardStreams = true
	ignoreFailures = true
	systemProperty "project-samples-enabled", 'true'

	options.suites('sourceTest/java/tests_project_samples.xml')
	reports.html.destination = file("${project.buildDir}/reports/tests-project-samples")
}


// This task is here to make WebAppsPropertiesTest to work. It requires some data files
// to be present on the same directory than the class file itself.
task copyTestData(type: Copy, dependsOn: testClasses) {
	from "${project.projectDir}/sourceTest/java/ch/systemsx/cisd/openbis/generic/shared/basic"
	into "${project.buildDir}/classes/test/ch/systemsx/cisd/openbis/generic/shared/basic"
	include "*.properties"
}

task executeOpenBisDev(type: JavaExec) {
	main = 'org.eclipse.jetty.runner.Runner'
	classpath = sourceSets.main.runtimeClasspath + configurations.devRuntime
	jvmArgs(['-Dpython.path=../libraries/jython/jython-lib', '-Dlog4j.configuration=etc/log.xml',
			 '-Djavax.net.ssl.trustStore=dist/server/openBIS.keystore',
			 '-Dorg.mortbay.util.FileResource.checkAliases=false', '-Xmx2048M', '-XX:MaxPermSize=512m', '-ea'])
	args(['--classes', '../commonbase/targets/gradle/classes/main', 
		  '--classes', '../common/targets/gradle/classes/main',
		  '--classes', '../authentication/targets/gradle/classes/main', 
		  '--classes', '../dbmigration/targets/gradle/classes/main',
		  '--classes', '../openbis-common/targets/gradle/classes/main', 
		  '--classes', '../openbis_api/targets/gradle/classes/main',
		  '--classes', 'targets/gradle/classes/main', '--lib', 'targets/www/lib/', '--port', '8888', 'targets/www'])
}

testProjectSamplesEnabled.dependsOn(copyTestData)
cleanDbSuiteProjectSamplesEnabled.dependsOn(testProjectSamplesEnabled)
test.dependsOn(copyTestData)
test.dependsOn(cleanDbSuite)
//test.dependsOn(testProjectSamplesEnabled)

apply from: 'gwtdev.gradle'
