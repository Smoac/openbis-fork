authentication-service = dummy-authentication-service

# The time after which an inactive session is expired by the service (in minutes).
session-timeout = 720 

# Authorization
# Supported: 'no-authorization' and 'active-authorization'
authorization-component-factory = active-authorization

script-folder = ./source/

# Supported: currently only 'postgresql' is supported
database.engine = postgresql
database.create-from-scratch = false
# For debugging set this value to true.
database.script-single-step-mode = false
database.url-host-part =
database.kind = test
# database.kind = system_test_strict
# database.kind = system_test_plates_on_demand
# database.kind = system_test_multi_groups
database.owner =
database.owner-password =
database.admin-user = 
database.admin-password =

# User id of the user used for anonymous login 
# user-for-anonymous-login = <user id>

crowd.service.host = crowd-bsse.ethz.ch
crowd.service.port = 8443
crowd.application.name = lims
crowd.application.password =

# The database instance local unique identifier. Used when the new database is created.
database-instance = CISD 

# The URL of the CIFEX server
cifex-url = https://cifex.ethz.ch:443

# Cifex users that will receive and automatically manage uploaded data.
# The user names should be prepended with 'id:' prefix for example: 
# cifex-recipient = id:dropboxuser, id:backpuser
cifex-recipient = id:cifexdatamanager

# Comma-separated list of host names and IP addresses of clients on which an INSTANCE_ADMIN
# user is allowed to change identity
accepted-remote-hosts-for-identity-change = localhost

# Hibernate Search
# The working directory.
hibernate.search.index-base = ./targets/indices-${database.kind}
# One of NO_INDEX, SKIP_IF_MARKER_FOUND, INDEX_FROM_SCRATCH.
# If not specified, default (SKIP_IF_MARKER_FOUND) is taken.
#hibernate.search.index-mode = INDEX_FROM_SCRATCH
hibernate.search.index-mode = SKIP_IF_MARKER_FOUND
# Defines the maximum number of elements indexed before flushing the transaction-bound queue.
# Default is 1000.
hibernate.search.batch-size = 1000
# Maximum number of search results
hibernate.search.maxResults = 100000
# If 'async', the update of indices will be done in a separate thread.
hibernate.search.worker.execution=async

# Online Help
#
# Online help is broken into two sections -- generic and specific. Generic help links back to
# the CISD. Specific help is provided by the host of the installation
#
# OpenBIS needs to know the root URL for the online help and a template for the individual pages.
# The template should have on parameter, called title, and should be constructed to automatically
# create the page if it does not already exist.
# The template can be created by going to the root page, adding a new link to the page, and
# replacing the title of the new page with the ${title}
onlinehelp.generic.root-url = https://wiki-bsse.ethz.ch/display/CISDDoc/OnlineHelp
onlinehelp.generic.page-template = https://wiki-bsse.ethz.ch/pages/createpage.action?spaceKey=CISDDoc&title=${title}&linkCreation=true&fromPageId=40633829
#onlinehelp.specific.root-url = https://wiki-bsse.ethz.ch/display/CISDDoc/OnlineHelp
#onlinehelp.specific.page-template = https://wiki-bsse.ethz.ch/pages/createpage.action?spaceKey=CISDDoc&title=${title}&linkCreation=true&fromPageId=40633829
# ---------------------------------------------------------------------------
# (optional)  Database Configurations for Query module
# ---------------------------------------------------------------------------

# Comma separated keys of databases configured for Query module.
# Each database should have configuration properties prefixed with its key.
# Mandatory properties for each <database> include: 
#   <database>.label                - name shown to the openBIS user when adding or editing a customized query
#		<database>.database-driver      - JDBC Driver of the database (e.g. org.postgresql.Driver)
#   <database>.database-url	        - JDBC URL to the database (e.g. jdbc:postgresql://localhost/openbis)
# Optional properties for each <database> include:
#   <database>.database-user        - name of the database user (default: user.name from system properties)
#   <database>.database-password    - password of the database user
#   <database>.creator-minimal-role - minimal role required to create/edit queries on this database (default: POWER_USER)
#   <database>.data-space           - If NOT specified OBSERVER of any space will be allowed to perform 
#                                     queries and <creator-minimal-role> of any space will allowed 
#                                     to create/edit queries on this DB.
#                                   - If specified only OBSERVER of the space will be allowed to perform 
#                                     queries and <creator-minimal-role> of the space will allowed 
#                                     to create/edit queries on this DB.
query-databases = 1

1.label = openBIS meta data
#1.data-space = CISD
#1.creator-minimal-role = SPACE_ADMIN
1.database-driver = org.postgresql.Driver
1.database-url = jdbc:postgresql://localhost/openbis_${database.kind}
#1.database-username =
#1.database-password =

# ---------------------------------------------------------------------------
# maintenance plugins configuration
# ---------------------------------------------------------------------------

# Comma separated names of maintenance plugins.  
# Each plugin should have configuration properties prefixed with its name.
# Mandatory properties for each <plugin> include: 
#   <plugin>.class - Fully qualified plugin class name
#   <plugin>.interval - The time between plugin executions (in seconds)
# Optional properties for each <plugin> include:
#   <plugin>.start - Time of the first execution (HH:mm)
#   <plugin>.execute-only-once - If true the task will be executed exactly once, 
#                                interval will be ignored. By default set to false.
#maintenance-plugins = demo, dynamic-property-evaluator, remove-unused-ad-hoc-vocabulary-terms

demo.class = ch.systemsx.cisd.openbis.generic.server.task.DemoMaintenanceTask
demo.interval = 60
#demo.execute-only-once = true
demo.property_1 = some value
demo.property_2 = some value 2

#dynamic-property-evaluator.class = ch.systemsx.cisd.openbis.generic.server.task.DynamicPropertyEvaluationMaintenanceTask
# run daily at midnight  
#dynamic-property-evaluator.interval = 86400
#dynamic-property-evaluator.start = 00:00
# run every 10min
#dynamic-property-evaluator.interval = 6000

#remove-unused-ad-hoc-vocabulary-terms.class = ch.systemsx.cisd.openbis.generic.server.task.RemoveUnusedUnofficialTermsMaintenanceTask
## run once every 12 hours
#remove-unused-ad-hoc-vocabulary-terms.interval = 43200
## delete unused ad hoc terms older than 7 days
#remove-unused-ad-hoc-vocabulary-terms.older-than-days = 7

# Name of the file that stores Web Client configuration
web-client-configuration-file = etc/web-client.properties
