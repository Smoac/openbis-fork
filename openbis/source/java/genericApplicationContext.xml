<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:plugins="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-2.5.xsd">

    <import resource="hibernateContext.xml" />
    <import resource="dbConfigurationContext.xml" />

    <bean id="data-source" factory-bean="db-configuration-context" factory-method="getDataSource" />

    <bean id="exception-translator" class="ch.systemsx.cisd.openbis.generic.server.business.bo.NextExceptionFallbackExceptionTranslator" />

    <bean id="transaction-manager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="hibernate-session-factory" />
        <property name="jdbcExceptionTranslator" ref="exception-translator" />
    </bean>

    <bean id="sql-script-provider" class="ch.systemsx.cisd.dbmigration.DBMigrationEngine"
        factory-method="createOrMigrateDatabaseAndGetScriptProvider">
        <constructor-arg ref="db-configuration-context" />
        <constructor-arg>
            <bean
                class="ch.systemsx.cisd.openbis.generic.server.dataaccess.db.DatabaseVersionHolder"
                factory-method="getDatabaseVersion" />
        </constructor-arg>
    </bean>

    <bean id="dao-factory"
        class="ch.systemsx.cisd.openbis.generic.server.dataaccess.db.DAOFactory">
        <constructor-arg ref="db-configuration-context" />
        <constructor-arg ref="hibernate-session-factory" />
        <constructor-arg ref="hibernate-search-context" />
        <constructor-arg ref="full-text-index-updater" />
        <constructor-arg ref="dynamic-property-scheduler" />
    </bean>
    
    <bean id="dss-factory" class="ch.systemsx.cisd.openbis.generic.server.business.DataStoreServiceFactory"/>

    <bean id="authentication-service"
        class="ch.systemsx.cisd.openbis.generic.server.AuthenticationServiceHolder">
        <constructor-arg ref="${authentication-service}" />
    </bean>

    <bean id="session-manager" class="ch.systemsx.cisd.authentication.DefaultSessionManager">
        <constructor-arg>
            <bean class="ch.systemsx.cisd.openbis.generic.server.SessionFactory" />
        </constructor-arg>
        <constructor-arg>
            <bean class="ch.systemsx.cisd.openbis.generic.shared.LogMessagePrefixGenerator" />
        </constructor-arg>
        <constructor-arg ref="authentication-service" />
        <constructor-arg>
            <bean class="ch.systemsx.cisd.common.servlet.RequestContextProviderAdapter">
                <constructor-arg ref="request-context-provider" />
            </bean>
        </constructor-arg>
        <!-- The time after which an inactive session is expired by the service (in minutes). -->
        <constructor-arg value="${session-timeout}" />
        <!-- Enable login with email addresses -->
        <constructor-arg value="true" />
    </bean>
    
    <bean id="remote-host-validator" class="ch.systemsx.cisd.openbis.generic.server.WhiteListBasedRemoteHostValidator">
        <constructor-arg value="${accepted-remote-hosts-for-identity-change}"/>
    </bean>

    <bean id="common-business-object-factory"
        class="ch.systemsx.cisd.openbis.generic.server.CommonBusinessObjectFactory">
        <constructor-arg ref="dao-factory" />
        <constructor-arg ref="dss-factory" />
    </bean>

    <bean id="last-modification-state"
          class="ch.systemsx.cisd.openbis.generic.shared.basic.dto.LastModificationState" />
          
    <!-- 
        // Common
    -->
    
    <bean id="common-server" class="ch.systemsx.cisd.openbis.generic.server.CommonServer">
        <constructor-arg ref="authentication-service" />
        <constructor-arg ref="session-manager" />
        <constructor-arg ref="dao-factory" />
        <constructor-arg ref="common-business-object-factory" />
        <constructor-arg ref="last-modification-state" />
        <property name="userForAnonymousLogin" value="${user-for-anonymous-login}"/>
    </bean>

		<bean id="web-client-configuration-provider"
        class="ch.systemsx.cisd.openbis.generic.client.web.server.WebClientConfigurationProvider">
        <constructor-arg value="${web-client-configuration-file}" />
    </bean>

    <bean id="common-service" class="ch.systemsx.cisd.openbis.generic.client.web.server.CommonClientService">
        <constructor-arg ref="common-server" />
        <constructor-arg ref="request-context-provider" />
        <property name="cifexURL" value="${cifex-url}"/>
        <property name="cifexRecipient" value="${cifex-recipient}"/>
        <property name="onlineHelpGenericRootURL" value="${onlinehelp.generic.root-url}"/>
        <property name="onlineHelpGenericPageTemplate" value="${onlinehelp.generic.page-template}"/>
        <property name="onlineHelpSpecificRootURL" value="${onlinehelp.specific.root-url}"/>
        <property name="onlineHelpSpecificPageTemplate" value="${onlinehelp.specific.page-template}"/>
        <property name="maxResults" value="${hibernate.search.maxResults}" />
    </bean>
    
    <!-- 
        // HTML Escaping
     -->
    <bean id="html-escaping-advisor" class="ch.systemsx.cisd.openbis.generic.client.web.server.StringHtmlEscapingPointcutAdvisor" />
    
    <!--
        // Exception translation
     -->
    <bean id="client-service-exception-translating-advisor" class="ch.systemsx.cisd.openbis.generic.client.web.server.ClientServiceExceptionTranslatingAdvisor" />
    <bean id="server-exception-translating-advisor" class="ch.systemsx.cisd.openbis.generic.server.ServerExceptionTranslatingAdvisor" />
    
    <bean id="rpc-name-server" class="ch.systemsx.cisd.common.api.server.RpcServiceNameServer" />
    
    <!-- 
        // Tracking
    -->
    
    <bean id="tracking-server" class="ch.systemsx.cisd.openbis.generic.server.TrackingServer">
        <constructor-arg ref="session-manager" />
        <constructor-arg ref="dao-factory" />
        <constructor-arg ref="common-business-object-factory" />
    </bean>
    
    <!-- 
        // ETL Service 
    -->
    <bean id="etl-service" class="ch.systemsx.cisd.openbis.generic.server.ETLService">
        <constructor-arg ref="authentication-service" />
        <constructor-arg ref="session-manager" />
        <constructor-arg ref="dao-factory" />
        <constructor-arg ref="common-business-object-factory" />
        <constructor-arg ref="dss-factory" />
        <constructor-arg ref="trusted-origin-domain-provider" />
    </bean>

    <!-- 
        // Transaction
    -->

    <!-- 
        // This discovers on-the-fly all <code>org.springframework.aop.Advisor</code> implementations.
    -->
    <bean id="bean-post-processor"
        class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

    <bean class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
        <property name="transactionInterceptor" ref="transaction-interceptor" />
    </bean>

    <bean id="transaction-interceptor"
        class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transaction-manager" />
        <property name="transactionAttributeSource">
            <bean
                class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
        </property>
    </bean>

    <!-- 
        // Database Last Modification Monitor
        // This advice will auto-magically used as an interceptor for server methods (e.g. ICommonServer)
    -->
    
    <bean class="ch.systemsx.cisd.openbis.generic.server.DatabaseLastModificationAdvisor">
        <constructor-arg ref="last-modification-state" />
    </bean>

    <!-- 
        // Authorization
    -->

    <bean class="ch.systemsx.cisd.openbis.generic.server.authorization.AuthorizationAdvisor">
        <constructor-arg ref="${authorization-component-factory}" />
    </bean>

    <bean id="no-authorization"
        class="ch.systemsx.cisd.openbis.generic.server.authorization.NoAuthorization" />

    <bean id="active-authorization"
        class="ch.systemsx.cisd.openbis.generic.server.authorization.ActiveAuthorization">
        <constructor-arg ref="dao-factory" />
    </bean>

    <!-- 
        // Logging
    -->

    <bean class="ch.systemsx.cisd.common.spring.LogAdvisor" />
    <bean class="ch.systemsx.cisd.common.spring.MarkerLogApplicationListener"/>

        
    <!--
        //Mail Client Parameters
    -->
    <bean id="mail-client-parameters" class="ch.systemsx.cisd.common.mail.MailClientParameters">
        <property name="from" value="${mail.from}"/>
        <property name="smtpHost" value="${mail.smtp.host}"/>
        <property name="smtpUser" value="${mail.smtp.user}"/>
        <property name="smtpPassword" value="${mail.smtp.password}"/>
    </bean>
    
    
    <!--  
       Maintenance Tasks
     -->
    
    <bean id="maintenance-task-starter" 
        class="ch.systemsx.cisd.openbis.generic.server.MaintenanceTaskStarter">
    </bean>

    
    <!--  
       Core plugins registration
     -->
    
    <bean id="core-plugin-registrator" class="ch.systemsx.cisd.openbis.generic.server.coreplugin.CorePluginRegistrator">
        <property name="commonServer" ref="common-server"/>
        <property name="pluginsFolderName" value="${core-plugins-folder}"/>
        <property name="disabledTechnologies" value="${disabled-technologies}"/>
    </bean>
    
    <!--
       Material-specific configuration 
     -->
   <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
     <property name="targetClass"><value>ch.systemsx.cisd.openbis.generic.shared.util.MaterialConfigurationProvider</value></property>
     <property name="targetMethod"><value>initialize</value></property>
     <property name="arguments">
       <list>
         <value>${material-relax-code-constraints}</value>
       </list>
     </property>     
   </bean>
   
    <bean id="trusted-origin-domain-provider" class="ch.systemsx.cisd.openbis.generic.server.TrustedCrossOriginDomainsProvider">
        <constructor-arg value="${trusted-cross-origin-domains}"/>
    </bean>

    <bean id="objectMapper" class="ch.systemsx.cisd.openbis.generic.shared.api.json.GenericObjectMapper">
    </bean>

    <!--
        // Plugins
    -->

    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
	  <bean class="ch.systemsx.cisd.common.spring.AnnotationBeanPostProcessorIgnoringMissingBeans"/>
	
    <plugins:component-scan base-package="ch.systemsx.cisd.openbis" annotation-config="false">
        <plugins:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </plugins:component-scan>
</beans>