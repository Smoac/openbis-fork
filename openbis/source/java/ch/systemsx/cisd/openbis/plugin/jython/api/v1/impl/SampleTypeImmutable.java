/*
 * Copyright 2011 ETH Zuerich, CISD
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ch.systemsx.cisd.openbis.plugin.jython.api.v1.impl;

import ch.systemsx.cisd.openbis.plugin.jython.api.v1.ISampleTypeImmutable;

/**
 * @author Kaloyan Enimanev
 */
public class SampleTypeImmutable implements ISampleTypeImmutable
{
    private final ch.systemsx.cisd.openbis.generic.shared.basic.dto.SampleType sampleType;

    SampleTypeImmutable(String code)
    {
        this(new ch.systemsx.cisd.openbis.generic.shared.basic.dto.SampleType());
        getSampleType().setCode(code);
    }

    SampleTypeImmutable(ch.systemsx.cisd.openbis.generic.shared.basic.dto.SampleType sampleType)
    {
        this.sampleType = sampleType;
    }

    ch.systemsx.cisd.openbis.generic.shared.basic.dto.SampleType getSampleType()
    {
        return sampleType;
    }

    public String getCode()
    {
        return getSampleType().getCode();
    }

    public String getDescription()
    {
        return getSampleType().getDescription();
    }

    public boolean isListable()
    {
        return getSampleType().isListable();
    }

    public boolean isSubcodeUnique()
    {
        return getSampleType().isSubcodeUnique();
    }

    public boolean isAutoGeneratedCode()
    {
        return getSampleType().isAutoGeneratedCode();
    }

    public String getGeneratedCodePrefix()
    {
        return getSampleType().getGeneratedCodePrefix();
    }
}
