import ch.systemsx.cisd.openbis.generic.client.jython.api.v1.DataType as DataType

tr = service.transaction()

expType = tr.createNewExperimentType('EXPERIMENT-TYPE')
expType.setDescription('Experiment type description.')

sampleType = tr.createNewSampleType('SAMPLE-TYPE')
sampleType.setDescription('Sample type description.')
sampleType.setSubcodeUnique(True)
sampleType.setAutoGeneratedCode(True)
sampleType.setGeneratedCodePrefix("G_");

dataSetType = tr.createNewDataSetType('DATA-SET-TYPE')
dataSetType.setContainerType(True)
dataSetType.setDescription('Data set type description.')

materialType = tr.createNewMaterialType('MATERIAL-TYPE')
materialType.setDescription('Material type description.')

stringPropertyType = tr.createNewPropertyType('VARCHAR-PROPERTY-TYPE', DataType.VARCHAR)
stringPropertyType.setDescription('Varchar property type description.')
stringPropertyType.setLabel('STRING')

materialPropertyType = tr.createNewPropertyType('MATERIAL-PROPERTY-TYPE', DataType.MATERIAL)
materialPropertyType.setDescription('Material property type description.')
materialPropertyType.setLabel('MATERIAL')
materialPropertyType.setMaterialType(materialType)
materialPropertyType.setManagedInternally(False)

#xmlPropertyType = tr.createNewPropertyType('XML-PROPERTY-TYPE', DataType.XML)
#xmlPropertyType.setDescription('XML property type description.')
#xmlPropertyType.setLabel('XML')
#xmlPropertyType.setXmlSchema('')
#xmlPropertyType.setTransformation('')

assigment1 = tr.assignToSampleType(sampleType, materialPropertyType)
assigment1.setMandatory(True)

assigment2 = tr.assignToExperimentType(expType, stringPropertyType)
assigment2.setMandatory(False)
assigment2.setDefaultValue("Default STRING Value")
