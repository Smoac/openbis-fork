apply from: 'http://svncisd.ethz.ch/repos/cisd/gradle/trunk/javaproject.gradle'

configurations.create('gui')

dependencies {
	compile project(':common'),
			project(':openbis-common'),
			project(':openbis'),
			// authentication and dbmigration are required as they contain later versions of 
			// some classes than cisd-cifex.jar. They need to be in classpath before cisd-cifex.jar
			project(':authentication'),
			project(':dbmigration')
			
	
	compile 'apache:ftpserver-core:+',
			'apache:sshd-core:+',
			'jfree:jfreechart:+',
			'cisd:cisd-cifex:+',
			'shriop:javacsv:+',
			'cisd:cisd-image-readers:+',
			'hjg:pngj:+',
			'apache:commons-fileupload:+'

	runtime 'sun:jai:+'
				
	testCompile project(path: ':common', configuration: 'tests'),
				project(path: ':openbis-common', configuration: 'tests'),
				project(path: ':openbis', configuration: 'tests')
				
	gui	'cglib:cglib-nodep:+',
		'cisd:cisd-args4j:+',
		'cisd:cisd-base:+',
		'apache:poi-ooxml:+',
		'springframework:spring-context:+',
		'python:jython:+',
		'apache:commons-httpclient:+',
		'marathon:marathon-spring-util:+',
		'apache:log4j:+',
		'dom4j:dom4j:+'
}

sourceSets { 
	test {
		resources {
			srcDirs = ['source/java']
		}
	}
}

task dssGui(type: Jar) {
	baseName 'dss_gui'
	
	from (project(':common').sourceSets.main.output.getAsFileTree().plus(
		  project(':openbis-common').sourceSets.main.output.getAsFileTree().plus(
		  project(':openbis_api').sourceSets.main.output.getAsFileTree().plus(
		  project(':openbis').sourceSets.main.output.getAsFileTree().plus(
		  sourceSets.main.output.getAsFileTree())))).matching {
		include 'ch/systemsx/cisd/common/**/*.class'	
      	include 'ch/systemsx/cisd/openbis/common/**/*.class'
      	include 'ch/systemsx/cisd/openbis/generic/shared/**/*.class'
      	include 'ch/systemsx/cisd/openbis/plugin/query/shared/**/*.class'
        include 'ch/systemsx/cisd/openbis/dss/client/**/*.class'
      	include 'ch/systemsx/cisd/openbis/dss/generic/shared/api/**/*.class'
      	include 'ch/systemsx/cisd/openbis/dss/generic/shared/utils/**/*.class'
      	include 'org/python/core/SyspathArchiveHack.class'
	})
	
	from (fileTree(dir: 'resource', includes: ['ok.png', 'wrong.png', 'wait.gif']))
}	
dssGui.dependsOn compileJava

task dssGuiZip(type: Zip) {
	baseName 'dss_upload_gui'

	from (configurations.gui) {
		into 'dss_upload_gui/lib'
	}
	
	from (dssGui.archivePath) {
		into 'dss_upload_gui/lib'
	}
}
dssGuiZip.dependsOn dssGui
build.dependsOn dssGuiZip

