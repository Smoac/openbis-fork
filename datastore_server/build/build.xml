<project name="datastore_server" default="dist" basedir="..">
	<import file="../../build_resources/ant/build-common.xml" />
	<project-classpath name="ecp" classes="${classes}" />

	<property name="dss.original.dist" value="../datastore_server/dist" />
	<property name="dss" value="datastore_server" />
	<property name="dist.datastore_server" value="${dist}/${dss}" />
	<property name="dist.datastore_server.lib" value="${dist.datastore_server}/lib" />
	<property name="dss-jar.file" value="${dist.datastore_server.lib}/datastore_server.jar" />
	<property name="dist.file.prefix" value="${dist}/datastore_server" />
	<property name="nativesrc" value="${lib}/unix/native" />
	<property name="nativeroot" value="${targets}/ant" />
	<property name="native" value="${nativeroot}/native" />

	<target name="clean">
		<delete dir="${dist}" />
	</target>

	<target name="compile" depends="build-common.compile, clean" />

	<target name="run-tests">
		<antcall target="build-common.run-tests">
			<param name="test.suite" value="tests.xml" />
		</antcall>
	</target>

	<target name="dss-jar" depends="compile">
		<mkdir dir="${dist.datastore_server.lib}" />
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<copy todir="${native}">
			<fileset dir="${nativesrc}">
				<include name="**/unix.so" />
			</fileset>
		</copy>
		<recursive-jar destfile="${dss-jar.file}">
			<fileset dir="${classes}">
				<include name="**/*.class" />
				<include name="**/*.xsd" />
				<include name="${build.info.filename}" />
			</fileset>
			<fileset dir="${nativeroot}">
				<include name="**/unix.so" />
			</fileset>
			<manifest>
				<attribute name="Main-Class" value="ch.systemsx.cisd.openbis.dss.generic.DataStoreServer" />
				<attribute name="Class-Path"
				           value="datastore_server-plugins.jar cisd-args4j.jar cisd-base.jar cifex.jar jetty.jar jetty-util.jar 
                	          servlet-api-2.5.jar log4j.jar activation.jar mail.jar spring.jar fast-md5.jar
                                  commons-codec.jar commons-lang.jar commons-io.jar commons-logging.jar 
                	          commons-httpclient.jar commons-pool.jar commons-dbcp.jar eodsql.jar postgresql.jar
					               jai_codec.jar jai_core.jar jaxb-api.jar jaxb-impl.jar jsr173_1-0_api.jar csv.jar" />
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</recursive-jar>
		<jar update="true" destfile="${dss-jar.file}">
			<fileset dir="../datastore_server/${sources}">
				<include name="**/*.xml" />
				<include name="**/*.xsd" />
			</fileset>
			<fileset dir="../${ant.project.name}/${classes}" includes="ch/systemsx/cisd/openbis/dss/BuildAndEnvironmentInfo.class"/>
			<zipfileset src="${lib}/gwt2.0/gwt-user.jar"
			            includes="com/google/gwt/user/client/rpc/IsSerializable.class, com/google/gwt/user/client/rpc/SerializableException.class" />
		</jar>
	</target>

	<target name="dist">
		<antcall target="make-dist">
			<param name="variant" value="" />
		</antcall>
	</target>

	<!-- parameters: 
					variant - will be used in the distribution file name  
		-->
	<target name="make-dist" depends="dss-jar">
		<copy file="${dss-jar.file}" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/cisd-base/cisd-base.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/cisd-args4j/cisd-args4j.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/cifex/cifex.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/jetty/jetty.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/jetty/jetty-util.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/jetty/servlet-api-2.5.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/activation/activation.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/mail/mail.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/log4j/log4j.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/fast-md5/fast-md5.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/commons-codec/commons-codec.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/commons-io/commons-io.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/commons-lang/commons-lang.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/commons-dbcp/commons-dbcp.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/commons-pool/commons-pool.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/postgresql/postgresql.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/commons-logging/commons-logging.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/commons-httpclient/commons-httpclient.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/eodsql/eodsql.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/jai/jai_codec.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/jai/jai_core.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/jaxb/jaxb-api.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/jaxb/jaxb-impl.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/jaxb/jsr173_1.0_api.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/spring/spring.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/fast-md5/fast-md5.jar" todir="${dist.datastore_server.lib}" />
		<copy file="${lib}/csv/csv.jar" todir="${dist.datastore_server.lib}" />
		<property name="dist.file"
		          value="${dist.file.prefix}${variant}-${version.number}-r${revision.number}.zip" />
		<zip basedir="${dist}" destfile="${dist.file}" excludes="*.zip *.jar">
			<zipfileset dir="${dss.original.dist}" 
				    excludes="**/datastore_server.sh, **/service.properties, **/log.xml" 
				    prefix="${dss}" />
			<zipfileset dir="dist" 
				    includes="**/service.properties, **/log.xml" 
				    prefix="${dss}" />
			<zipfileset file="${dss.original.dist}/datastore_server.sh"
			            filemode="755"
			            prefix="${dss}" />
		</zip>
		<delete dir="${dist.datastore_server}" />
	</target>

	<target name="ci" depends="run-tests, check-dependencies, dist">
	</target>

</project>