<project name="openbis_standard_technologies" default="dist" basedir="..">
  <import file="../../screening/build/build.xml" />
  <import file="../../rtd_phosphonetx/build/build.xml" />
  <import file="../../deep_sequencing_unit/build/build.xml" />
  <project-classpath name="ecp" classes="${classes}" />
	<project-classpath name="ecp.gwt" classes="${targets}/www/WEB-INF/classes" />
  <property name="gwt.extended.sources" value="${gwt.sources}:../rtd_phosphonetx/${sources}:../screening/${sources}" />

	<target name="ci" depends="build-common.ci, dist" />
  
  <target name="core-plugins-dist" depends="openbis.core-plugins-dist">
	  <antcall target="copy-core-plugins">
	    <param name="project-path" value="../rtd_phosphonetx/"/>
	    <param name="plugin-kind" value="as"/>
	  </antcall>
	  <antcall target="copy-core-plugins">
	    <param name="project-path" value="../screening/"/>
	    <param name="plugin-kind" value="as"/>
	  </antcall>
	  <antcall target="copy-core-plugins">
	    <param name="project-path" value="../deep_sequencing_unit/"/>
	    <param name="plugin-kind" value="as"/>
	  </antcall>
    <copy todir="${dist}/core-plugins" file="dist/etc/core_plugins.properties"/>
  </target>

	<target name="dist" depends="clean">
		<antcall target="openbis.make-dist">
			<param name="actual.build.info.filename" value="BUILD-openbis.INFO" />
			<param name="variant" value="-standard-technologies" />
		</antcall>
		<antcall target="screening.screening-api"/>
		<mkdir dir="${dist.datastore_server.lib}" />
		<antcall target="dist-upload-gui">
			<param name="variant" value="" />
		</antcall>
		<antcall target="datastore_server.add-dss-dist-libs"/>
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<antcall target="make-dss-jar"/>
		
		<!-- illumina ngs -->
		<antcall target="deep_sequencing_unit.make-dss-plugin-jar"/>
		<move file="${plugin-jar.file}" tofile="${dist.datastore_server.lib}/datastore_server_plugin-illumina-ngs.jar" />
		<antcall target="openbis.copy-core-plugins">
      <param name="project-path" value="../deep_sequencing_unit/" />
      <param name="plugin-kind" value="dss" />
		</antcall>
		
		<!-- proteomics -->
		<antcall target="rtd_phosphonetx.make-dss-plugin-jar"/>
		<move file="${plugin-jar.file}" tofile="${dist.datastore_server.lib}/datastore_server_plugin-proteomics.jar" />
		<antcall target="openbis.copy-core-plugins">
      <param name="project-path" value="../rtd_phosphonetx/" />
      <param name="plugin-kind" value="dss" />
		</antcall>
		
		<!-- screening -->
		<antcall target="screening.make-dss-plugin-jar"/>
    <move file="${plugin-jar.file}" tofile="${dist.datastore_server.lib}/datastore_server_plugin-screening.jar" />
		<antcall target="openbis.copy-core-plugins">
      <param name="project-path" value="../screening/" />
      <param name="plugin-kind" value="dss" />
		</antcall>
	  <delete file="${dist}/core-plugins/core_plugins.properties"/>
		<antcall target="screening.add-stuff-to-dss-dist"/>
		<antcall target="screening.compute-dss-checksum"/>
		
		<antcall target="datastore_server.create-distribution">
			<param name="variant" value="-standard-technologies" />
		</antcall>
		<delete dir="${dist}/core-plugins"/>
	</target>

	<target name="war" depends="rtd_phosphonetx.war, screening.war">
	</target>


	<!--
        // Compiles the javascript using GWT compiler.
  -->
	<target name="compile-javascript"
	        depends="prepare-web-client"
	        description="Compiles the javascript using GWT compiler.">
		<antcall target="compile-gwt-module">
			<param name="gwt.sources" value="${gwt.extended.sources}" />
			<param name="gwt.module.name" value="ch.systemsx.cisd.openbis.OpenBIS" />
		</antcall>
	</target>
	
	<!--
        // Targets for Eclipse environment
  -->
	<target name="compile-and-run-openbis-from-eclipse"
	        description="Compile and run openbis from Eclipse">
		<antcall target="compile-module-test">
			<param name="gwt.sources" value="${gwt.extended.sources}" />
			<param name="module-test.path" value="openbis-test" />
			<param name="module-test.module" value="ch.systemsx.cisd.openbis.OpenBIS" />
		</antcall>
		<antcall target="run-openbis-from-eclipse" />
	</target>

	<target name="run-openbis-from-eclipse"
	        description="run openbis from Eclipse">
		<antcall target="run-module-test">
			<param name="gwt.sources" value="${gwt.extended.sources}" />
			<param name="module-test.path" value="openbis-test" />
			<param name="module-test.module" value="ch.systemsx.cisd.openbis.OpenBIS" />
		</antcall>
	</target>

</project>