<project name="cifex" default="dist" basedir="..">
	<import file="../../build_resources/ant/build-common.xml" />
	<project-classpath name="ecp" classes="${classes}" />
	<property name="mainfolder" value="cifex" />

	<property name="original.dist" value="../${ant.project.name}/dist" />
	<property name="original.dist.server" value="${original.dist}/server" />
	<property name="original.dist.client" value="${original.dist}/client" />

	<property name="gwt.lib" value="${lib}/gwt2.0" />
	<property name="gwt.dev.lib" value="${gwt.lib}/gwt-dev.jar" />
	<property name="gwt.user.lib" value="${gwt.lib}/gwt-user.jar" />
	<property name="gxt.lib" value="${lib}/gxt2.1/gxt.jar" />

	<property name="cifex.server.resource" value="../${ant.project.name}/${server-resource}" />

	<property name="cifex.client.jarfiles"
	          value="cifex.jar cisd-base.jar cisd-args4j.jar jline.jar commons-lang.jar commons-io.jar commons-logging.jar commons-codec.jar commons-httpclient.jar spring-core.jar spring-web.jar spring-context.jar spring-beans.jar spring-aop.jar aopalliance.jar" />

	<property name="webapp.dist" value="${dist}/webapp" />
	<property name="webapp.dist.web-inf" value="${webapp.dist}/WEB-INF" />

	<property name="jar.file.name" value="${ant.project.name}.jar" />
	<property name="jar.file" value="${dist}/${jar.file.name}" />

	<property name="webapp.file.name" value="${ant.project.name}.war" />
	<property name="webapp.file" value="${dist}/${webapp.file.name}" />

	<property name="targets.www" value="${targets}/www/ch.systemsx.cisd.cifex.Cifex" />
	<property name="gwt.war.web-inf" value="${targets}/www/WEB-INF" />
	<property name="gwt.war.web-inf.lib" value="${gwt.war.web-inf}/lib" />
	<property name="gwt.war.web-inf.classes" value="${gwt.war.web-inf}/classes" />
	<property name="cifex.cli.zip" value="${dist}/cifex_cli.zip" />
	<property name="usermanual.pdf" value="${original.dist.server}/CIFEX-10.01-User_Manual.pdf" />

	<!-- 
	// Cleans distribution directory.
	-->
	<target name="clean" description="Cleans distribution directory.">
		<delete dir="${dist}" failonerror="true" />
		<mkdir dir="${dist}" />
	</target>

	<!-- 
	// Makes a distribution file.
	-->
	<target name="dist" description="Makes a distribution file." depends="clean, war">

		<property name="dist.file.name"
		          value="${ant.project.name}-${version.number}-r${revision.number}.zip" />
		<property name="jetty.path" value="${lib}/jetty" />
		<property name="zipped.dir" value="${dist}/${ant.project.name}" />

		<mkdir dir="${zipped.dir}" />
		<move file="${webapp.file}" todir="${zipped.dir}" />
		<move file="${cifex.cli.zip}" todir="${zipped.dir}" />

		<copy file="${jetty.path}/jetty.zip" todir="${zipped.dir}" />
		<copy file="${jetty.path}/version.txt" tofile="${zipped.dir}/jetty-version.txt">
			<filterchain>
				<striplinebreaks />
			</filterchain>
		</copy>
		<!--
		// Although there is already one 'service.properties' and 'log.xml' in the war, we need one here that
		// can be configured by the administrator. The idea is to replace the one in the war with it in the
		// 'install.sh' script.
		-->
		<copy todir="${zipped.dir}">
			<fileset dir="${original.dist}/etc">
				<include name="*" />
			</fileset>
		</copy>
		<!-- Copy all files but '*.sh'. -->
		<copy todir="${zipped.dir}">
			<fileset dir="${original.dist.server}">
				<exclude name="*.sh" />
			</fileset>
		</copy>

		<zip basedir="${dist}" destfile="${dist}/${dist.file.name}">
			<zipfileset file="${original.dist.server}/*.sh" filemode="755" prefix="${ant.project.name}" />
		</zip>

		<!-- Does some cleaning. -->
		<delete failonerror="true" includeemptydirs="true">
			<fileset dir="${dist}">
				<exclude name="${dist.file.name}" />
			</fileset>
		</delete>
	</target>

	<!--
	// Task for continuous integration server.
	-->
	<target name="ci"
	        depends="build-common.ci, check-dependencies, dist"
	        description="Task for continuous integration server." />

	<!--
	// Compiles the javascript using GWT compiler.
	-->
	<target name="compile-javascript" description="Compiles the javascript using GWT compiler.">
		<property name="cifex.gwt.path" value="ch.systemsx.cisd.cifex.Cifex" />

		<delete dir="${webapp.dist}" />
		<java classpath="${ecp}:${gwt.dev.lib}:${gwt.user.lib}:${gxt.lib}:${sources}"
		      classname="com.google.gwt.dev.Compiler"
		      fork="true">
			<jvmarg value="-Xmx512M" />
			<arg value="-war" />
			<arg value="${webapp.dist}" />
			<arg value="${cifex.gwt.path}" />
		</java>
		<move todir="${webapp.dist}">
			<fileset dir="${webapp.dist}/${cifex.gwt.path}" />
		</move>
	</target>

	<!--
	// Add 'IMessageResources.properties' and 'service.properties' (will be excluded later on)
	// files to 'build-common.compile' target.
	-->
	<target name="compile"
	        depends="build-common.compile"
	        description="Overrides the parent 'compile' target by including properties files.">
		<copy todir="${classes}">
			<fileset dir="${sources}">
				<include name="**/*.properties" />
			</fileset>
		</copy>
	</target>

	<!--
	// Creates build information.
	-->
	<target name="build-info" description="Creates build information.">
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
	</target>

	<!--
	// Creates 'cifex.jar'. Note that this will not contain any '*.sql' resp. '*.csv' file.
	-->
	<target name="jar" depends="compile, build-info" description="Creates project jar file.">
		<delete file="${jar.file}" />
		<!--
		// 'applicationContext.xml' and imported files.
		// They are only copied to the ant classes directory. Does not mean that
		// they will be part of the jar.
		-->
		<copy todir="${classes}">
			<fileset dir="${sources}">
				<include name="**/*.xml" />
			</fileset>
		</copy>
		<mkdir dir="${dist}" />
		<recursive-jar destfile="${jar.file}">
			<manifest>
				<attribute name="Main-Class" value="ch.systemsx.cisd.cifex.rpc.client.cli.CIFEXClient" />
				<attribute name="Class-Path" value="${cifex.client.jarfiles}" />
			</manifest>
			<fileset dir="${classes}">
				<include name="**/*.class" />
				<!-- Exclude 'service.properties' and 'log.xml' file. -->
				<exclude name="service.properties" />
				<exclude name="log.xml" />
				<include name="**/*.properties" />
				<include name="${build.info.filename}" />
			</fileset>
		</recursive-jar>
		<jar update="true" destfile="${jar.file}">
			<zipfileset src="${gwt.lib}/gwt-user.jar" 
								  includes="com/google/gwt/user/client/rpc/IsSerializable.class, com/google/gwt/user/client/rpc/SerializableException.class" />
		</jar>

		<delete dir="${targets.www}" />
		<mkdir dir="${targets.www}" />
		<antcall target="copy-and-sign-jar">
			<param name="dir" value="${dist}" />
			<param name="jar" value="${jar.file.name}" />
		</antcall>
		<antcall target="copy-and-sign-jar">
			<param name="dir" value="${lib}/cisd-base" />
			<param name="jar" value="cisd-base.jar" />
		</antcall>
		<antcall target="copy-and-sign-jar">
			<param name="dir" value="${lib}/cisd-args4j" />
			<param name="jar" value="cisd-args4j.jar" />
		</antcall>
		<antcall target="copy-and-sign-jar">
			<param name="dir" value="${lib}/spring" />
			<param name="jar" value="spring-web.jar" />
		</antcall>
		<antcall target="copy-and-sign-jar">
			<param name="dir" value="${lib}/spring" />
			<param name="jar" value="spring-context.jar" />
		</antcall>
		<antcall target="copy-and-sign-jar">
			<param name="dir" value="${lib}/spring" />
			<param name="jar" value="spring-beans.jar" />
		</antcall>
		<antcall target="copy-and-sign-jar">
			<param name="dir" value="${lib}/spring" />
			<param name="jar" value="spring-core.jar" />
		</antcall>
		<antcall target="copy-and-sign-jar">
			<param name="dir" value="${lib}/spring" />
			<param name="jar" value="spring-aop.jar" />
		</antcall>
		<antcall target="copy-and-sign-jar">
			<param name="dir" value="${lib}/spring/third-party" />
			<param name="jar" value="aopalliance.jar" />
		</antcall>
		<antcall target="copy-and-sign-jar">
			<param name="dir" value="${lib}/commons-httpclient" />
			<param name="jar" value="commons-httpclient.jar" />
		</antcall>
		<antcall target="copy-and-sign-jar">
			<param name="dir" value="${lib}/commons-codec" />
			<param name="jar" value="commons-codec.jar" />
		</antcall>
		<antcall target="copy-and-sign-jar">
			<param name="dir" value="${lib}/commons-io" />
			<param name="jar" value="commons-io.jar" />
		</antcall>
		<antcall target="copy-and-sign-jar">
			<param name="dir" value="${lib}/commons-lang" />
			<param name="jar" value="commons-lang.jar" />
		</antcall>
		<antcall target="copy-and-sign-jar">
			<param name="dir" value="${lib}/commons-logging" />
			<param name="jar" value="commons-logging.jar" />
		</antcall>
	  <copy todir="${dist}/cifex">
	    <fileset dir="${original.dist.client}"/>
	  </copy>
		<mkdir dir="${dist}/cifex/lib" />
		<copy todir="${dist}/cifex/lib">
				<fileset dir="${targets.www}"/>
		</copy>
		<copy file="${lib}/jline/jline.jar" todir="${dist}/cifex/lib" />
		<zip destfile="${cifex.cli.zip}" basedir="${dist}" includes="cifex/**" excludes="**/*.sh" />
		<zip update="true" destfile="${cifex.cli.zip}">
			<zipfileset dir="${dist}/cifex" includes="*.sh" filemode="755" prefix="cifex" />
		</zip>
		<delete dir="${dist}/cifex" />
	</target>

	<target name="copy-and-sign-jar">
		<copy file="${dir}/${jar}" todir="${targets.www}" />
		<signjar jar="${targets.www}/${jar}"
		         keystore="etc/dev.keystore"
		         alias="cifex"
		         storepass="cifextest"
		         keypass="cifex1" />
	</target>

	<!--
	// Creates 'cifex.war'.
	-->
	<target name="war" depends="compile-javascript, jar" description="Creates project war file.">
		<mkdir dir="${webapp.dist.web-inf}" />
		<copy todir="${webapp.dist.web-inf}">
			<fileset dir="${cifex.server.resource}">
				<include name="spring-servlet.xml" />
			</fileset>
			<fileset dir="../server-common/${server-resource}">
				<include name="web-common.xml" />
			</fileset>
		</copy>
		<copy todir="${webapp.dist}">
			<fileset dir="${targets.www}">
				<include name="*.jar" />
			</fileset>
		</copy>
		<copy file="${usermanual.pdf}" todir="${webapp.dist}" failonerror="true" />
		<!-- Create an empty 'gwt.xml' file. -->
		<echo file="${webapp.dist.web-inf}/gwt.xml" message="" />
		<war warfile="${webapp.file}" webxml="${cifex.server.resource}/web.xml">
			<fileset dir="${webapp.dist}" />
			<!-- The command line client -->
			<file file="${cifex.cli.zip}" />
			<!-- Add 'applicationContext.xml' and related files. -->
			<classes dir="../server-common/${sources}">
				<include name="**/*.xml" />
			</classes>
			<classes dir="${sources}">
				<include name="**/*.xml" />
			</classes>
			<!-- Add the database specific files. -->
			<classes dir="../${ant.project.name}/source">
				<include name="**/*.sql" />
				<include name="**/*.csv" />
			</classes>
			<lib dir="${dist}">
				<include name="${jar.file.name}" />
			</lib>
			<lib dir="${lib}/cisd-base">
				<include name="cisd-base.jar" />
			</lib>
			<lib dir="${lib}/commons-codec">
				<include name="commons-codec.jar" />
			</lib>
			<lib dir="${lib}/commons-dbcp">
				<include name="commons-dbcp.jar" />
			</lib>
			<lib dir="${lib}/commons-fileupload">
				<include name="*.jar" />
			</lib>
			<lib dir="${lib}/commons-io">
				<include name="commons-io.jar" />
			</lib>
			<lib dir="${lib}/commons-lang">
				<include name="commons-lang.jar" />
			</lib>
			<lib dir="${lib}/commons-logging">
				<include name="*.jar" />
			</lib>
			<lib dir="${lib}/commons-httpclient">
				<include name="commons-httpclient.jar" />
			</lib>
			<lib dir="${lib}/commons-pool">
				<include name="commons-pool.jar" />
			</lib>
			<lib dir="${lib}/log4j">
				<include name="log4j.jar" />
			</lib>
			<lib dir="${lib}/h2">
				<include name="h2.jar" />
			</lib>
			<lib dir="${lib}/postgresql">
				<include name="postgresql.jar" />
			</lib>
			<lib dir="${lib}/spring">
				<include name="spring.jar" />
			</lib>
			<lib dir="${lib}/spring/webmvc">
				<include name="spring-webmvc.jar" />
			</lib>
			<lib dir="${gwt.lib}">
				<include name="gwt-servlet.jar" />
			</lib>
			<lib dir="${lib}/activation">
				<include name="activation.jar" />
			</lib>
			<lib dir="${lib}/mail">
				<include name="mail.jar" />
			</lib>
		</war>
		<!-- Does some cleaning. -->
		<delete file="${jar.file}" failonerror="true" />
		<delete dir="${webapp.dist}" failonerror="true" />
	</target>

	<!--
	  // Cleans and prepares the GWT specific directories, forcing a GWT rebuilding.
	  -->
	<target name="prepare-gwt"
	        depends="jar"
	        description="Cleans and prepares the GWT specific directories, forcing a GWT rebuilding.">
		<copy todir="${gwt.war.web-inf}" overwrite="true" failonerror="true">
			<fileset dir="${cifex.server.resource}" includes="*.xml" />
			<fileset dir="../server-common/${server-resource}" includes="*.xml" />
		</copy>
		<copy todir="${gwt.war.web-inf.lib}" overwrite="true" failonerror="true">
			<fileset dir="${cifex.server.resource}" includes="*.xml" />
		</copy>
		<copy file="${lib}/mail/mail.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy file="${lib}/activation/activation.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy file="${gwt.lib}/gwt-servlet.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy file="${lib}/spring/webmvc/spring-webmvc.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy file="${lib}/spring/spring.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy file="${lib}/postgresql/postgresql.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy file="${lib}/h2/h2.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy file="${lib}/log4j/log4j.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy file="${lib}/commons-pool/commons-pool.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy file="${lib}/commons-httpclient/commons-httpclient.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy todir="${gwt.war.web-inf.lib}">
			<fileset dir="${lib}/commons-logging" includes="*.jar" />
		</copy>
		<copy file="${lib}/commons-lang/commons-lang.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy file="${lib}/commons-io/commons-io.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy todir="${gwt.war.web-inf.lib}">
					<fileset dir="${lib}/commons-fileupload" includes="*.jar" />
		</copy>
		<copy file="${lib}/commons-dbcp/commons-dbcp.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy file="${lib}/commons-codec/commons-codec.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy file="${lib}/cisd-base/cisd-base.jar" todir="${gwt.war.web-inf.lib}"/>	
		<copy file="${lib}/gxt2.1/gxt.jar" todir="${gwt.war.web-inf.lib}"/>	
		<copy file="${lib}/cglib/cglib-nodep.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy file="${lib}/hibernate-search/jms.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy file="${gwt.lib}/gwt-dev.jar" todir="${gwt.war.web-inf.lib}"/>
		<copy file="${dist}/${jar.file.name}" todir="${gwt.war.web-inf.lib}" />
		<delete failonerror="true" dir="../${ant.project.name}/.gwt-cache" />
		<delete file="${gwt.war.web-inf}/gwt.xml" />
	</target>

</project>