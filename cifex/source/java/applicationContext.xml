<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
       			http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--
        // Replaces ${...} with corresponding values found in 'location' property. A value
        // can be overridden by setting a corresponding system property.
    -->
    <bean id="propertyConfigurer" class="ch.systemsx.cisd.cifex.server.ExposablePropertyPaceholderConfigurer">
        <property name="location" value="classpath:service.properties" />
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
    </bean>

    <!-- 
        // Authentication
    -->

    <bean id="dummy-authentication-service" class="ch.systemsx.cisd.authentication.DummyAuthenticationService" />

    <bean id="no-authentication-service" class="ch.systemsx.cisd.authentication.NullAuthenticationService" />

    <bean id="crowd-authentication-service" class="ch.systemsx.cisd.authentication.crowd.CrowdAuthenticationService">
        <constructor-arg value="source-systemsx.ethz.ch" />
        <constructor-arg value="8443" />
        <constructor-arg value="${crowd.application.name}" />
        <constructor-arg value="${crowd.application.password}" />
    </bean>

    <!-- 
        // Server
    -->

    <bean id="cifex-service" class="ch.systemsx.cisd.cifex.server.CIFEXServiceImpl">
        <constructor-arg ref="domain-model" />
        <constructor-arg ref="request-context-provider" />
        <constructor-arg ref="${external-authentication-service}" />
        <property name="sessionExpirationPeriodInMinutes" value="1" />
    </bean>

    <bean id="domain-model" class="ch.systemsx.cisd.cifex.server.business.DomainModel">
        <constructor-arg ref="dao-factory" />
        <constructor-arg>
            <bean class="ch.systemsx.cisd.common.mail.MailClient">
                <constructor-arg value="${mail.from}" />
                <constructor-arg value="${mail.smtp.host}" />
                <constructor-arg value="${mail.smtp.user}" />
                <constructor-arg value="${mail.smtp.password}" />
            </bean>
        </constructor-arg>
        <constructor-arg ref="bean-post-processor" />
        <property name="fileStorePath" value="${file-store}"/>
    </bean>

    <bean id="request-context-provider" class="ch.systemsx.cisd.cifex.server.SpringRequestContextProvider" />

    <!-- 
        // Database
    -->

    <import resource="dbConfigurationContext.xml" />

    <bean id="data-source" factory-bean="db-configuration-context" factory-method="getDataSource" />

    <bean id="transaction-manager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <constructor-arg ref="data-source" />
    </bean>

    <bean id="dao-factory" class="ch.systemsx.cisd.cifex.server.business.dataaccess.db.DAOFactory">
        <constructor-arg ref="db-configuration-context" />
    </bean>

    <!-- 
        // Transaction
    -->

    <bean id="bean-post-processor" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

    <bean class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
        <property name="transactionInterceptor" ref="transactionInterceptor" />
    </bean>

    <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transaction-manager" />
        <property name="transactionAttributeSource">
            <bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
        </property>
    </bean>


</beans>