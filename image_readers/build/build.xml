<project name="image_readers" basedir="..">
	
	<target name="clean">
		<delete dir="${dist}" />
		<delete dir="${classes}" />
		<delete dir="${output.test}" />
	</target>

	<import file="../../build_resources/ant/build-common.xml" />

	<project-classpath name="ecp" classes="${classes}" />
	<property name="mainfolder" value="image_readers" />
	<property name="jar.file" value="${dist}/cisd-image_readers.jar" />
	<property name="jai-jar.file" value="${dist}/cisd-image_readers-jai.jar" />
	<property name="bioformats-jar.file" value="${dist}/cisd-image_readers-bioformats.jar" />
	<property name="imagej-jar.file" value="${dist}/cisd-image_readers-imagej.jar" />
	<property name="basic.path" value="ch/systemsx/cisd/imagereaders" />
	<property name="manifest.path" value="./resource/manifest" />

	<target name="ci" depends="build-common.ci, dist, check-dependencies" />
		
	<target name="dist" depends="compile-tests, jar, jai-jar, bioformats-jar, imagej-jar"/>

	<target name="create-dist-dir">
    <mkdir dir="${dist}"/> 
	</target>
	
	<target name="jar" depends="create-dist-dir, compile, compile-tests">
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<jar destfile="${jar.file}">
			<fileset dir="${classes}">
				<include name="${basic.path}/*.class" />
				<include name="${basic.path}/imageio/*.class" />
				<include name="${build.info.filename}" />
			</fileset>
			<fileset dir="${manifest.path}/imageio">
				<include name="**/*" />
			</fileset>
			<manifest>
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</jar>
	</target>
	
	<target name="jai-jar" depends="create-dist-dir, compile">
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<jar destfile="${jai-jar.file}">
			<fileset dir="${classes}">
				<include name="${basic.path}/jai/*.class" />
				<include name="${build.info.filename}" />
			</fileset>
			<fileset dir="${manifest.path}/jai">
				<include name="**/*" />
			</fileset>
			<manifest>
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</jar>
	</target>

	<target name="bioformats-jar" depends="create-dist-dir, compile">
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<jar destfile="${bioformats-jar.file}">
			<fileset dir="${classes}">
				<include name="${basic.path}/bioformats/*.class" />
				<include name="${build.info.filename}" />
			</fileset>
			<fileset dir="${manifest.path}/bioformats">
				<include name="**/*" />
			</fileset>
			<manifest>
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</jar>
	</target>

	<target name="imagej-jar" depends="create-dist-dir, compile">
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<jar destfile="${imagej-jar.file}">
			<fileset dir="${classes}">
				<include name="${basic.path}/ij/*.class" />
				<include name="${build.info.filename}" />
			</fileset>
			<fileset dir="${manifest.path}/ij">
				<include name="**/*" />
			</fileset>
			<manifest>
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</jar>
	</target>

	<!--
	  // Runs the test suite 'tests.xml'.
	  -->
	<target name="run-tests" description="Runs the test suite 'tests.xml'.">
		<antcall target="build-common.run-tests">
			<param name="test.suite" value="tests.xml" />
		</antcall>
	</target>

</project>