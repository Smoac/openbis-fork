# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  #config.vm.box = "centos7-vbox"
  config.vm.box = "centos/7"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network "forwarded_port", guest: 8443, host: 8443
  config.vm.network "forwarded_port", guest: 8444, host: 8444

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  config.vm.synced_folder "../../python", "/vagrant_python", type: "virtualbox"
  config.vm.synced_folder "../../../", "/vagrant_repo", type: "virtualbox"
  config.vm.synced_folder "initialize", "/vagrant_initialize", type: "virtualbox"
  config.vm.synced_folder "./", "/vagrant", type: "virtualbox"
  config.vm.synced_folder "../../core-plugins", "/vagrant_core-plugins", type: "virtualbox"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider "virtualbox" do |vb|
     # Customize the amount of memory on the VM:
     vb.memory = "2048"
   end

  # Install necessary packages and tools (yum commands + install conda)
  config.vm.provision :shell, inline: "/vagrant/initialize/setup_general.sh || true"

  # Install openBIS
  config.vm.provision :shell, inline: "/vagrant/initialize/setup_openbis.sh || true"

  # Install obis (including prereqs: python3, git, git-annex)
  config.vm.provision :shell, inline: "/vagrant/initialize/install_obis.sh || true"


  # update /etc/hostname
  #vm.provision :shell do |sh|
  #  sh.inline = "echo '127.0.0.1 appserver' >> /etc/hosts
  #  echo 'appserver' > /etc/hostname
  #  hostname `cat /etc/hostname`"
  #end
end
