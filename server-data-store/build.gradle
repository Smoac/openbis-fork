evaluationDependsOn(':lib-json')
evaluationDependsOn(':api-data-store-server-java')
evaluationDependsOn(':lib-transactional-file-system')

apply plugin: 'java'
apply plugin: 'application'

compileJava {
    options.compilerArgs << '-parameters'
}

sourceCompatibility='11'
targetCompatibility='11'

repositories {
    ivy {
        ivyPattern "https://sissource.ethz.ch/openbis/openbis-public/openbis-ivy/-/raw/main/[organisation]/[module]/[revision]/ivy.xml"
        artifactPattern "https://sissource.ethz.ch/openbis/openbis-public/openbis-ivy/-/raw/main/[organisation]/[module]/[revision]/[artifact]-[revision](-[classifier]).[ext]"
    }
}

dependencies {
    annotationProcessor 'lombok:lombok:1.18.22'
    implementation project(':lib-transactional-file-system'),
            project(':api-data-store-server-java'),
            project(':api-openbis-java'),
            project(':lib-json'),
            'lombok:lombok:1.18.22',
            'io.netty:netty-all:4.1.68.Final',
            'shriop:javacsv:2.0',
            'log4j:log4j-api:2.10.0',
            'log4j:log4j-core:2.10.0'
    testImplementation 'junit:junit:4.10',
            'hamcrest:hamcrest-core:1.3'
}

task AFSServerDevelopmentEnvironmentStart(type: JavaExec) {
    main = 'ch.ethz.sis.afsserver.startup.Main'
    classpath = sourceSets.main.runtimeClasspath
    args(["../server-data-store/src/main/resources/service.properties"])
    jvmArgs(['--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED',
             '--add-opens=java.base/java.nio=ALL-UNNAMED',
             '-Dio.netty.tryReflectionSetAccessible=true',
             '-Xmx256M', '-ea'])
}

task AFSServerZip(type: Zip, dependsOn: compileJava) {
    baseName 'afs-server'
    from (jar) {
        into ('afs-server/lib/')
    }
    from (configurations.runtimeClasspath) {
        into ('afs-server/lib/')
    }
    from('dist') {
        into 'afs-server/'
    }
}