<project name="build_resources" basedir="..">
  <import file="build-basic.xml" />

  <taskdef name="branch-and-tag-project" 
           classname="ch.systemsx.cisd.ant.task.subversion.SVNBranchAndTagTask"
           classpathref="build-resource.path" />
  <taskdef name="checkout-project" 
           classname="ch.systemsx.cisd.ant.task.subversion.SVNRecursiveCheckoutTask" 
           classpathref="build-resource.path"/>
 
  <property name="repositoryRoot.default" value="svn+ssh://source.systemsx.ch/repos"/>


  <target name="checkout">
    <condition property="repositoryRoot" value="${repositoryRoot.default}">
      <not>
        <isset property="repositoryRoot" />
      </not>
    </condition>
    <condition property="group" value="cisd">
      <not>
        <isset property="group" />
      </not>
    </condition>
    <condition property="version" value="trunk">
      <not>
        <isset property="version" />
      </not>
    </condition>
    <condition property="revision" value="HEAD">
      <not>
        <isset property="revision" />
      </not>
    </condition>
    <condition property="dir" value=".">
      <not>
        <isset property="dir" />
      </not>
    </condition>
    <checkout-project repositoryRoot="${repositoryRoot}" group="${group}" name="${name}" version="${version}" 
                      revision="${revision}" dir="${dir}" />
  </target>

  <target name="branch">
    <condition property="repositoryRoot" value="${repositoryRoot.default}">
      <not>
        <isset property="repositoryRoot" />   
      </not>   
    </condition>
    <condition property="group" value="cisd">
      <not>
        <isset property="group" />
      </not>
    </condition>
    <branch-and-tag-project repositoryRoot="${repositoryRoot}" group="${group}" name="${name}" 
                            releaseBranch="${branch}" />
  </target>

  <target name="tag">
    <condition property="repositoryRoot" value="${repositoryRoot.default}">
      <not>
        <isset property="repositoryRoot" />   
      </not>   
    </condition>
    <condition property="group" value="cisd">
      <not>
        <isset property="group" />
      </not>
    </condition>
    <branch-and-tag-project repositoryRoot="${repositoryRoot}" group="${group}" name="${name}" 
                            releaseTag="${tag}" />
  </target>

   
  <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     Tag a project. Also a branch is created if necessary.
     
     Properties:
       name     Name of the project. Mandatory
       tag      Tag number. Mandatory
       group    Group of the project. Default: cisd
       repositoryRoot  URL of the root of the Subversion repository. 
                       Default: ${repositoryRoot.default}=svn+ssh://source.systemsx.ch/repos 
  --> 
  <target name="branch-and-tag">
    <condition property="repositoryRoot" value="${repositoryRoot.default}">
      <not>
        <isset property="repositoryRoot" />   
      </not>   
    </condition>
    <condition property="group" value="cisd">
      <not>
        <isset property="group" />
      </not>
    </condition>
    <branch-and-tag-project repositoryRoot="${repositoryRoot}" group="${group}" name="${name}" 
                            releaseTag="${tag}" branchIfNecessary="true" />
  </target>
 
  <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     Checks out a tagged version of a project and run the 'dist' target. 
     
     Properties:
       name            Name of the project. Mandatory
       version         Version number. Default: trunk
       revision        Revision. Default: HEAD
       dir             Build directory. Default: .
       result.dir      Folder which will contain the result. Mandatory
       group           Group of the project. Default: cisd
       repositoryRoot  URL of the root of the Subversion repository. 
                       Default: ${repositoryRoot.default}=svn+ssh://source.systemsx.ch/repos 
  --> 
  <target name="build" depends="checkout"> 
    <exec executable="ant" failonerror="true">
      <arg value="-lib"/> 
      <arg value="${dir}/build_resources/lib/ecj.jar"/> 
      <arg value="-f"/> 
      <arg value="${dir}/${name}/build/build.xml"/> 
      <arg value="dist"/> 
    </exec> 
    <copy todir="${result.dir}">
      <fileset dir="${dir}/${name}/${dist}"/> 
    </copy> 
  </target> 

</project>