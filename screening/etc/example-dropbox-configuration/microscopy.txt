# --- Microscopy dropbox, split channels ------------------------------------------------------------------------

# The directory to watch for incoming data.
microscopy-dropbox.incoming-dir = ${incoming-root-dir}/incoming-microscopy
microscopy-dropbox.incoming-data-completeness-condition = auto-detection

# The extractor class to use for code extraction
microscopy-dropbox.data-set-info-extractor = ch.systemsx.cisd.etlserver.DefaultDataSetInfoExtractor
microscopy-dropbox.data-set-info-extractor.entity-separator = .
microscopy-dropbox.data-set-info-extractor.index-of-sample-code = 0
microscopy-dropbox.data-set-info-extractor.space-code = DEMO

# The extractor class to use for type extraction
microscopy-dropbox.type-extractor = ch.systemsx.cisd.etlserver.SimpleTypeExtractor
microscopy-dropbox.type-extractor.file-format-type = PNG
microscopy-dropbox.type-extractor.locator-type = RELATIVE_LOCATION
microscopy-dropbox.type-extractor.is-measured = true

microscopy-dropbox.storage-processor = ch.systemsx.cisd.openbis.dss.etl.MicroscopyStorageProcessor
microscopy-dropbox.storage-processor.file-extractor = ch.systemsx.cisd.openbis.dss.etl.MicroscopyImageFileExtractor
microscopy-dropbox.type-extractor.data-set-type = IMG_TEST_DATA
microscopy-dropbox.storage-processor.channel-codes = NUCLEUS, CELL, MITOCHONDRION
microscopy-dropbox.storage-processor.channel-labels = Nucleus, Cell, Mitochondrion

microscopy-dropbox.type-extractor.data-set-type = HCS_IMAGE_TEST_DATA

microscopy-dropbox.storage-processor.data-source = imaging-db
microscopy-dropbox.storage-processor.generate-thumbnails = true
microscopy-dropbox.storage-processor.well_geometry = 2x2
microscopy-dropbox.storage-processor.tile_mapping = 1,2;3,4


# --- Microscopy overlay dropbox, split channels ------------------------------------------------------------------------

# The directory to watch for incoming data.
microscopy-dropbox-overlays.incoming-dir = ${incoming-root-dir}/incoming-microscopy-overlays
microscopy-dropbox-overlays.incoming-data-completeness-condition = auto-detection

# The extractor class to use for code extraction
microscopy-dropbox-overlays.data-set-info-extractor = ch.systemsx.cisd.etlserver.SmartParentDataSetInfoExtractor
microscopy-dropbox-overlays.data-set-info-extractor.entity-separator = .
microscopy-dropbox-overlays.data-set-info-extractor.index-of-sample-code = 0
microscopy-dropbox-overlays.data-set-info-extractor.smart-parent-data-set-resolution-many-parents-mode = CHOOSE_YOUNGEST
microscopy-dropbox-overlays.data-set-info-extractor.smart-parent-data-set-resolution-fail-if-missing = true
microscopy-dropbox-overlays.data-set-info-extractor.space-code = DEMO

# The extractor class to use for type extraction
microscopy-dropbox-overlays.type-extractor = ch.systemsx.cisd.etlserver.SimpleTypeExtractor
microscopy-dropbox-overlays.type-extractor.file-format-type = PNG
microscopy-dropbox-overlays.type-extractor.locator-type = RELATIVE_LOCATION
microscopy-dropbox-overlays.type-extractor.is-measured = true

microscopy-dropbox-overlays.data-set-info-extractor.smart-parent-data-set-resolution-dataset-type = .*IMG_TEST.*
microscopy-dropbox-overlays.storage-processor = ch.systemsx.cisd.openbis.dss.etl.MicroscopyStorageProcessor
microscopy-dropbox-overlays.storage-processor.file-extractor = ch.systemsx.cisd.openbis.dss.etl.MicroscopyImageFileExtractor
microscopy-dropbox-overlays.storage-processor.channel-codes = NUCLEUS, CELL, MITOCHONDRION, NUCLEUS-TEXT, CELL-TEXT, MITOCHONDRION-TEXT
microscopy-dropbox-overlays.storage-processor.channel-labels = Nucleus, Cell, Mitochondrion, Nucleus Text, Cell Text, Mitochondrion Text
microscopy-dropbox-overlays.type-extractor.data-set-type = IMG_OVERLAY_TEST_DATA

microscopy-dropbox-overlays.storage-processor.data-source = imaging-db
microscopy-dropbox-overlays.storage-processor.generate-thumbnails = true
microscopy-dropbox-overlays.storage-processor.well_geometry = 2x2
microscopy-dropbox-overlays.storage-processor.tile_mapping = 1,2;3,4
microscopy-dropbox-overlays.storage-processor.define-channels-per-experiment = false
microscopy-dropbox-overlays.storage-processor.unzip = true


# --- Microscopy dropbox, merged channels ------------------------------------------------------------------------

# The directory to watch for incoming data.
microscopy-dropbox-merged-channels.incoming-dir = ${incoming-root-dir}/incoming-microscopy-merged
microscopy-dropbox-merged-channels.incoming-data-completeness-condition = auto-detection

# The extractor class to use for code extraction
microscopy-dropbox-merged-channels.data-set-info-extractor = ch.systemsx.cisd.etlserver.DefaultDataSetInfoExtractor
microscopy-dropbox-merged-channels.data-set-info-extractor.entity-separator = .
microscopy-dropbox-merged-channels.data-set-info-extractor.index-of-sample-code = 0
microscopy-dropbox-merged-channels.data-set-info-extractor.space-code = DEMO

# The extractor class to use for type extraction
microscopy-dropbox-merged-channels.type-extractor = ch.systemsx.cisd.etlserver.SimpleTypeExtractor
microscopy-dropbox-merged-channels.type-extractor.file-format-type = TIFF
microscopy-dropbox-merged-channels.type-extractor.locator-type = RELATIVE_LOCATION
microscopy-dropbox-merged-channels.type-extractor.data-set-type = MICROSCOPY_IMAGE
microscopy-dropbox-merged-channels.type-extractor.is-measured = true

microscopy-dropbox-merged-channels.storage-processor = ch.systemsx.cisd.openbis.dss.etl.MicroscopyStorageProcessor
microscopy-dropbox-merged-channels.storage-processor.file-extractor = ch.systemsx.cisd.openbis.dss.etl.MicroscopyImageFileExtractor
microscopy-dropbox-merged-channels.storage-processor.data-source = imaging-db
microscopy-dropbox-merged-channels.storage-processor.channel-names = RED, GREEN, BLUE
microscopy-dropbox-merged-channels.storage-processor.extract-single-image-channels = RED, GREEN, BLUE
microscopy-dropbox-merged-channels.storage-processor.well_geometry = 2x3
microscopy-dropbox-merged-channels.storage-processor.tile_mapping = 1,2,3;4,5,6

# --- Microscopy dropbox with a series of images with any names ---------------------------

# The directory to watch for incoming data.
microscopy-series-dropbox.incoming-dir = ${incoming-root-dir}/incoming-microscopy-series
microscopy-series-dropbox.incoming-data-completeness-condition = auto-detection

# The extractor class to use for code extraction
microscopy-series-dropbox.data-set-info-extractor = ch.systemsx.cisd.etlserver.DefaultDataSetInfoExtractor
microscopy-series-dropbox.data-set-info-extractor.entity-separator = .
microscopy-series-dropbox.data-set-info-extractor.index-of-sample-code = 0
microscopy-series-dropbox.data-set-info-extractor.space-code = DEMO

# The extractor class to use for type extraction
microscopy-series-dropbox.type-extractor = ch.systemsx.cisd.etlserver.SimpleTypeExtractor
microscopy-series-dropbox.type-extractor.file-format-type = TIFF
microscopy-series-dropbox.type-extractor.locator-type = RELATIVE_LOCATION
microscopy-series-dropbox.type-extractor.data-set-type = MICROSCOPY_IMAGE
microscopy-series-dropbox.type-extractor.is-measured = true

microscopy-series-dropbox.storage-processor = ch.systemsx.cisd.openbis.dss.etl.MicroscopyBlackboxSeriesStorageProcessor
microscopy-series-dropbox.storage-processor.data-source = imaging-db

# --- List of Microscopy datasets with any images specified in the control file ------------------

sample-dset-reg-dropbox.incoming-dir = ${incoming-root-dir}/incoming-sample-reg
sample-dset-reg-dropbox.incoming-data-completeness-condition = auto-detection
sample-dset-reg-dropbox.delete-unidentified = true
# The data set handler
sample-dset-reg-dropbox.dataset-handler = ch.systemsx.cisd.etlserver.entityregistration.SampleAndDataSetRegistrationHandler

# Controls whether samples may be registered and updated (ACCEPT_ALL), registered only (REJECT_EXISTING), or updated only (REJECT_NONEXISTING). Default is ACCEPT_ALL
sample-dset-reg-dropbox.dataset-handler.sample-registration-mode = ACCEPT_ALL

# Controls which sample type is processed by default. Omit this setting it it is to be specified in the control file
sample-dset-reg-dropbox.dataset-handler.sample-type = MY_SAMPLE_TYPE

# Controls which data set type is processed by default. Omit this setting it it is to be specified in the control file
sample-dset-reg-dropbox.dataset-handler.data-set-type = HCS_IMAGE

sample-dset-reg-dropbox.data-set-info-extractor = ch.systemsx.cisd.etlserver.DefaultDataSetInfoExtractor

# The extractor class to use for type extraction
sample-dset-reg-dropbox.type-extractor = ch.systemsx.cisd.etlserver.SimpleTypeExtractor
sample-dset-reg-dropbox.type-extractor.file-format-type = TIFF
sample-dset-reg-dropbox.type-extractor.locator-type = RELATIVE_LOCATION
sample-dset-reg-dropbox.type-extractor.is-measured = true

sample-dset-reg-dropbox.storage-processor = ch.systemsx.cisd.openbis.dss.etl.MicroscopyBlackboxSeriesStorageProcessor
sample-dset-reg-dropbox.storage-processor.data-source = imaging-db

