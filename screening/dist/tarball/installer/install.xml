<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<installation version="1.0">
  <info>
    <appname>openBIS</appname>
    <appversion>@{version.number}</appversion>
    <url>http://www.cisd.ethz.ch/software/openBIS</url>
    <!--  TODO KE: cannot disable uninstaller -->
    <!--  uninstaller write="no"/-->
    <javaversion>1.6</javaversion>
    <requiresjdk>yes</requiresjdk>
    <os>
      <family>unix, mac</family>  
    </os>
  </info>

  <!-- Sets the installer window size. -->
  <guiprefs width="640" height="530" resizable="yes">
      <modifier key="useHeadingPanel" value="yes"/>
      <modifier key="headingImageOnLeft" value="yes"/>
      <modifier key="headingBackgroundColor" value="0xffffff"/>
  </guiprefs>

  <locale>
    <langpack iso3="eng" />
  </locale>

  <!-- The resources section. The ids must be these ones if you want to use the LicencePanel and/or the InfoPanel. -->
  <resources>
    <res id="HTMLHelloPanel.info" src="@{installer.resourcedir}/hello.html"/>
    <res id="HTMLInfoPanel.dbsetup" src="@{installer.resourcedir}/postgres-setup.html"/>
    <res id="TargetPanel.dir" src="@{installer.resourcedir}/default-install-dir.txt" />
    <res id="Heading.image" src="@{installer.resourcedir}/openBIS_logo_229x100.png"/>
    <res id="userInputSpec.xml" src="@{installer.resourcedir}/userInputSpec.xml" />
    <res id="ProcessPanel.Spec.xml" src="@{installer.resourcedir}/backup-installation.xml"/>
  </resources>

  <variables>
    <!-- suppress the "target directory will be created" message -->
    <variable name="ShowCreateDirectoryMessage"  value="false" />
    <variable name="data.validation.error.title"  value="Error" />
    <variable name="VERSION_NUMBER"  value="@{version.number}" />
  </variables>

  <dynamicvariables>
      <variable name="INSTALL_BIN_PATH" value="$INSTALL_PATH/bin" />
      <variable name="INSTALL_OPENBIS_PATH" value="$INSTALL_PATH/servers/openBIS-server" />
      <variable name="INSTALL_DSS_PATH" value="$INSTALL_PATH/servers/datastore_server" />
      <!-- the path where the openBIS-server installation is extracted.-->
      <variable name="INSTALL_TMPEXTRACT" value="$INSTALL_PATH/tmp-extract" />
      <variable name="INSTALL_OPENBIS_TMPEXTRACT" value="$INSTALL_TMPEXTRACT/openBIS-server" />
  </dynamicvariables>

  <conditions>
    <condition type="java" id="isUpdateInstallation">
      <java>
        <class>ch.systemsx.cisd.openbis.installer.izpack.GlobalInstallationContext</class>
        <field>isUpdateInstallation</field>
      </java>
      <returnvalue type="boolean">true</returnvalue>
    </condition>
    <condition type="java" id="isFirstTimeInstallation">
      <java>
        <class>ch.systemsx.cisd.openbis.installer.izpack.GlobalInstallationContext</class>
        <field>isFirstTimeInstallation</field>
      </java>
      <returnvalue type="boolean">true</returnvalue>
    </condition>
    <condition type="java" id="noPsqlToolsOnPath">
      <java>
        <class>ch.systemsx.cisd.openbis.installer.izpack.GlobalInstallationContext</class>
        <field>noPsqlToolsOnPath</field>
      </java>
      <returnvalue type="boolean">true</returnvalue>
    </condition>
  </conditions>

  <!-- The panels section. We indicate here which panels we want to use. The order will be respected. -->
  <panels>
    <panel classname="com.izforge.izpack.panels.htmlhello.HTMLHelloPanel"/>
    <panel classname="com.izforge.izpack.panels.target.TargetPanel">
      <actions>
        <action stage="postvalidate" classname="ch.systemsx.cisd.openbis.installer.izpack.InitializeInstallationContextAction" />
      </actions>
    </panel>
    
    <panel classname="com.izforge.izpack.panels.htmlinfo.HTMLInfoPanel" id="dbsetup" condition="isFirstTimeInstallation">
        <validator classname="ch.systemsx.cisd.openbis.installer.izpack.DBConnectionValidator"/>
    </panel>
    
    <panel classname="com.izforge.izpack.panels.userinput.UserInputPanel" id="UserInputPanel.PSQL_PATH" condition="noPsqlToolsOnPath">
        <validator classname="ch.systemsx.cisd.openbis.installer.izpack.PostgresToolsPathValidator"/>
    </panel>

    <panel classname="com.izforge.izpack.panels.userinput.UserInputPanel" id="UserInputPanel.MISC" condition="isFirstTimeInstallation">
      <actions>
        <action stage="postvalidate" classname="ch.systemsx.cisd.openbis.installer.izpack.SetHostnameVariableAction" />
      </actions>
    </panel>
    
    
    <!--  create backup if needed -->
    <panel classname="com.izforge.izpack.panels.process.ProcessPanel" condition="isUpdateInstallation" >
      <actions>
        <action stage="preactivate" classname="ch.systemsx.cisd.openbis.installer.izpack.PrepareInstallationBackupAction" />
      </actions>
    </panel>
    
    <panel classname="com.izforge.izpack.panels.packs.PacksPanel"/>
    <panel classname="com.izforge.izpack.panels.install.InstallPanel">
      <actions>
        <action stage="postvalidate" classname="ch.systemsx.cisd.openbis.installer.izpack.ExecuteSetupScriptsAction" />
        <action stage="postvalidate" classname="ch.systemsx.cisd.openbis.installer.izpack.OpenGettingStartedPageAction" />
      </actions>
    </panel>
    
    <panel classname="com.izforge.izpack.panels.simplefinish.SimpleFinishPanel"/>
  </panels>


  <!-- The packs (packages) to be installed. -->
  <packs>
    <pack name="openBIS Server" required="yes" loose="yes">
      <description>The openBIS application server</description>
      <file src="@{installer.dist.dir}/openBIS-server" targetdir="$INSTALL_TMPEXTRACT"/>
      <parsable targetfile="$INSTALL_OPENBIS_TMPEXTRACT/service.properties" />
      <!-- run post installation script for the openBIS server -->
      <executable targetfile="$INSTALL_OPENBIS_TMPEXTRACT/install.sh" stage="postinstall">
        <args>
          <arg value="$INSTALL_OPENBIS_PATH" />
          <arg value="$INSTALL_OPENBIS_TMPEXTRACT/service.properties" />
        </args>
      </executable>
      <!--  remove $INSTALL_OPENBIS_TMPEXTRACT -->
      <executable targetfile="/bin/rm" stage="postinstall">
        <args>
          <arg value="-rf" />
          <arg value="$INSTALL_TMPEXTRACT" />
        </args>
      </executable>
    </pack>

    <pack name="Datastore Server" required="yes" loose="yes">
      <description>The data store server managing raw data</description>
      <file src="@{installer.dist.dir}/datastore_server" targetdir="$INSTALL_PATH/servers"/>
      <file src="@{installer.dist.dir}/data/dropboxes" targetdir="$DSS.ROOT-DIR" />
      <file src="@{installer.dist.dir}/data/incoming-simple" targetdir="$DSS.ROOT-DIR" />
      <file src="@{installer.dist.dir}/data/incoming-hcs" targetdir="$DSS.ROOT-DIR" />
      <file src="@{installer.dist.dir}/data/samples" targetdir="$DSS.ROOT-DIR" />
      <file src="@{installer.dist.dir}/data/store" targetdir="$DSS.ROOT-DIR" />
      <file src="@{installer.dist.dir}/data/log" targetdir="$INSTALL_DSS_PATH" />
      
      <parsable targetfile="$INSTALL_DSS_PATH/etc/service.properties" />
    </pack>

    <pack name="Administration Scripts" required="yes" loose="yes">
      <description>Scripts to facilitate openBIS administration</description>
      <file src="@{installer.dist.dir}/bin" targetdir="$INSTALL_PATH" />
      <file src="@{installer.dist.dir}/data/doc" targetdir="$DSS.ROOT-DIR" />
      
      <parsable targetfile="$INSTALL_BIN_PATH/env" />
      <parsable targetfile="$DSS.ROOT-DIR/doc/getting-started-with-openBIS.html" />

      <!--  set all *.sh files executable -->      
      <executable targetfile="$INSTALL_BIN_PATH/chmodx-all-scripts.sh" stage="postinstall" keep="false"/>
      
      <!-- restore the config from the pre-existing installation -->
      <executable targetfile="$INSTALL_BIN_PATH/restore-config-from-backup.sh" 
        stage="postinstall" condition="isUpdateInstallation" keep="true">
        <args>
          <arg value="$BACKUP_FOLDER/config-backup" />
        </args>
      </executable>
    </pack>
    
  </packs>

</installation>
