evaluationDependsOn(':commonbase')
evaluationDependsOn(':common')
evaluationDependsOn(':openbis_api')
evaluationDependsOn(':openbis-common')
evaluationDependsOn(':authentication')
evaluationDependsOn(':dbmigration')
evaluationDependsOn(':openbis')
evaluationDependsOn(':datastore_server')

apply from: '../gradle/javaproject.gradle'

dependencies {
    compile project(':common'),
            project(':datastore_server'),
            'openhms:jackcess:+',
            'reveregroup:gwt-image-loader:+',
            'imagej:ij:+',
            'bioformats:bioformats:6.0.0'

    testCompile project(path: ':datastore_server', configuration: 'tests')
}

sourceSets { 
    test {
        resources {
            srcDirs = ['source/java']
        }
    }
}

jar {
    from('../screening/source/sql'){ 
        into('/sql') 
        include '**/*.sql' 
    }
    from('../screening/source/java'){
        include 'screening-dssApplicationContext.xml'
    }
}

// This task is here to make TabularDataGraphCollectionConfigurationTest to work. It requires some data files
// to be present on the same directory than the class file itself.
task copyTestData(type: Copy, dependsOn: testClasses) {
    from "${project.projectDir}/sourceTest/java/ch/systemsx/cisd/openbis/dss/generic/server/graph"
    into "${project.buildDir}/classes/test/ch/systemsx/cisd/openbis/dss/generic/server/graph"
    include "*.properties"
}

task systemTestSuite(type: Test) {
    useTestNG()
    options.suites('sourceTest/java/tests_system.xml')
    jvmArgs '-Xmx2048m', '-XX:MaxPermSize=256m'    
    reports.html.destination = file("${project.buildDir}/reports/tests-system")
}

test.dependsOn(systemTestSuite)
test.dependsOn(copyTestData)

apply from: 'gwtdev.gradle'
