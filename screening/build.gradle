evaluationDependsOn(':commonbase')
evaluationDependsOn(':common')
evaluationDependsOn(':openbis_api')
evaluationDependsOn(':openbis-common')
evaluationDependsOn(':authentication')
evaluationDependsOn(':dbmigration')
evaluationDependsOn(':openbis')
evaluationDependsOn(':datastore_server')

apply from: '../gradle/javaproject.gradle'

configurations.create('devRuntime')

dependencies {
    api project(':common'),
            project(':datastore_server'),
            'openhms:jackcess:1.2.2',
            'reveregroup:gwt-image-loader:1.1.4',
            'imagej:ij:1.43u',
            'bioformats:bioformats:6.5.1'

    devRuntime project(path: ':openbis', configuration: 'devRuntime')
    
    testImplementation project(path: ':commonbase', configuration: 'tests'),
                       project(path: ':common', configuration: 'tests'),
                       project(path: ':dbmigration', configuration: 'tests'),
                       project(path: ':authentication', configuration: 'tests'),
                       project(path: ':openbis_api', configuration: 'tests'),
                       project(path: ':openbis-common', configuration: 'tests'),
                       project(path: ':datastore_server', configuration: 'tests'),
                       'fjelmer:classycle:1.4.2',
                       'testng:testng:6.8-CISD',
                       'springframework:spring-test:5.0.17.RELEASE',
                       'startnet:apgdiff:2.3'
    testImplementation (project(path: ':openbis', configuration: 'tests')) {
        exclude group: 'google', module: 'gwt-user'
    }
}

sourceSets {
    main {
        resources {
            srcDirs = ['source/java']
        }
    }
    test {
        resources {
            srcDirs = ['sourceTest/java']
        }
    }
}

jar {
    duplicatesStrategy 'include'
    from('../screening/source/sql'){ 
        into('/sql') 
        include '**/*.sql' 
    }
    from('../screening/source/java'){
        include 'screening-dssApplicationContext.xml'
    }
}

// This task is here to make TabularDataGraphCollectionConfigurationTest to work. It requires some data files
// to be present on the same directory than the class file itself.
task copyTestData(type: Copy, dependsOn: testClasses) {
    from "${project.projectDir}/sourceTest/java/ch/systemsx/cisd/openbis/dss/generic/server/graph"
    into "${project.buildDir}/classes/test/ch/systemsx/cisd/openbis/dss/generic/server/graph"
    include "*.properties"
}

task executeScreeningOpenBisDev(type: JavaExec) {
    main = 'org.eclipse.jetty.runner.Runner'
    classpath = sourceSets.main.runtimeClasspath + configurations.devRuntime
    jvmArgs(['-Dpython.path=../libraries/jython/jython-lib', '-Dlog4j.configuration=../openbis/etc/log.xml',
             '-Djavax.net.ssl.trustStore=../openbis/dist/server/openBIS.keystore',
             '-Dorg.eclipse.jetty.util.log.class=org.eclipse.jetty.util.log.StrErrLog',
             '-Dorg.mortbay.util.FileResource.checkAliases=false', '-Xmx2048M', '-ea'])
    args(['--classes', '../commonbase/targets/gradle/classes/main',
          '--classes', '../common/targets/gradle/classes/main',
          '--classes', '../authentication/targets/gradle/classes/main',
          '--classes', '../dbmigration/targets/gradle/classes/main',
          '--classes', '../openbis-common/targets/gradle/classes/main',
          '--classes', '../openbis_api/targets/gradle/classes/main',
          '--classes', '../openbis/targets/gradle/classes/main',
          '--classes', 'targets/gradle/classes/main', '--lib', 'targets/www/lib/', '--port', '8888', 'targets/www'])
}

task executeScreeningDataStoreDev(type: JavaExec) {
    main = 'ch.systemsx.cisd.openbis.dss.generic.DataStoreServer'
    classpath = sourceSets.main.runtimeClasspath + configurations.devRuntime +
            files("../openbis_standard_technologies/dist/core-plugins/microscopy/3/dss/drop-boxes/MicroscopyDropbox/lib/MicroscopyReader_20190521113500.jar")
    jvmArgs(['-Dpython.path=../libraries/jython/jython-lib', '-Dlog4j.configuration=../datastore_server/etc/log.xml',
             '-Djavax.net.ssl.trustStore=../datastore_server/dist/etc/openBIS.keystore',
             '-Dorg.eclipse.jetty.util.log.class=org.eclipse.jetty.util.log.StrErrLog',
             '-Dorg.mortbay.util.FileResource.checkAliases=false', '-Xmx2048M', '-ea'])
}

task systemTestSuite(type: Test) {
    useTestNG()
    options.suites('sourceTest/java/tests_system.xml')
    jvmArgs '-Xmx2048m', '-D--add-opens=java.sql/java.sql=ALL-UNNAMED'
    reports.html.destination = file("${project.buildDir}/reports/tests-system")
}

test.dependsOn(systemTestSuite)
test.dependsOn(copyTestData)

apply from: 'gwtdev.gradle'
