<project name="screening" default="ci" basedir="..">
  <import file="../../openbis/build/build.xml" />
  <import file="../../datastore_server/build/build.xml" />
  <project-classpath name="ecp" classes="${classes}" />
	
  <property name="original.dist" value="dist" />
  <property name="mainfolder" value="screening" />
  <property name="variant" value="-screening" />

  <property name="dist.screening-api" value="${dist}/screening_api" />
  <property name="dist.screening-api.lib" value="${dist.screening-api}" />
  <property name="dist.screening-api.jar" value="${dist.screening-api.lib}/openbis_screening_api.jar" />
	<property name="dist.screening-api.javadoc" value="${dist.screening-api}/doc" />

	<property name="classes.screening" value="../screening/targets/www/WEB-INF/classes" />
	<property name="classes.common-server" value="../server-common/targets/ant/classes" />
  <property name="classes.common" value="../common/targets/ant/classes" />
		
  <target name="compile" depends="build-common.compile, clean" />

  <!--
        // Task for creating distributions
        -->
	
  <target name="dist-dss" >
    <antcall target="datastore_server.make-dist" />
  </target>
        
  <target name="dist" depends="openbis.make-dist, dist-dss" />

  <!--
        // Task for continuous integration server.
        -->
  <target name="ci" depends="build-common.ci, dist, check-dependencies" />

  <!--
        // Compiles the javascript using GWT compiler.
        -->
  <target name="compile-javascript" depends="prepare-web-client" description="Compiles the javascript using GWT compiler.">
    <antcall target="compile-gwt-module">
      <param name="gwt.module.name" value="ch.systemsx.cisd.openbis.plugin.screening.OpenBIS" />
    </antcall>
  </target>

  <!--
        // Creates WAR file.
        -->
  <target name="war" depends="openbis.war" description="Creates project war file.">
    <war warfile="${webapp.file}" update="true">
      <classes prefix="WEB-INF/classes/screening" dir="source">
        <include name="**/*.sql" />
      </classes>
      <classes dir="../openbis/${sources}">
        <include name="**/*.xml" />
        <exclude name="**/*.gwt.xml" />
      </classes>
      <lib dir="${lib}/jaxb">
        <include name="*.jar" />
      </lib>
      <lib dir="${lib}/eodsql">
        <include name="*.jar" />
      </lib>
      <lib dir="${lib}/csv">
        <include name="*.jar" />
      </lib>
    </war>
  </target>

  <target name="prepare-compile-and-run-screening-test" depends="prepare-gwt, compile-and-run-screening-test"
    description="Prepare, compile, and run the module test mode">
  </target>

  <target name="compile-and-run-screening-test" description="Compile and run the screening openbis from Eclipse">
    <antcall target="compile-module-test">
      <param name="module-test.path" value="openbis-test-screening" />
      <param name="module-test.module" value="ch.systemsx.cisd.openbis.plugin.screening.OpenBIS" />
    </antcall>
    <antcall target="run-screening-test" />
  </target>

  <target name="run-screening-test" description="run the screening openbis from Eclipse">
    <antcall target="run-module-test">
      <param name="module-test.path" value="openbis-test-screening" />
      <param name="module-test.module" value="ch.systemsx.cisd.openbis.plugin.screening.OpenBIS" />
    </antcall>
  </target>

  <target name="check-dictionary-syntax" description="Parse *-dictionary.js and check that the syntax is correct.">
    <antcall target="check-javascript-syntax">
      <param name="javascript-file"
        value="../screening/${sources}/ch/systemsx/cisd/openbis/plugin/screening/client/web/public/screening-dictionary.js" />
    </antcall>
  </target>
  
  <target name="screening-api-doc">
    <javadoc 
      destdir="${dist.screening-api.javadoc}" 
      access="public" 
      author="false" 
      version="false" 
      classpath="${ecp}:${classes.screening}">
      <fileset dir="${sources}">
        <include name="ch/systemsx/cisd/openbis/plugin/screening/client/api/v1/*" />
        <include name="ch/systemsx/cisd/openbis/plugin/screening/shared/api/v1/dto/*" />
      </fileset>
    </javadoc>
  </target>

  <!-- 
  		To test the API you can use
  		   java -jar lib/openbis_screening_api.jar USER PASSWD OPENBIS_SERVER_URL
   -->
  <target name="screening-api-libs">
    <mkdir dir="${dist.screening-api.lib}" />
    <build-info revision="revision.number" version="version.number" clean="clean.flag" />
    <echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
    <recursive-jar destfile="${dist.screening-api.jar}">
      <fileset dir="${classes.screening}">
        <include name="ch/systemsx/cisd/openbis/dss/screening/shared/api/v1/**/*.class" />
      	<include name="ch/systemsx/cisd/openbis/plugin/screening/shared/api/v1/**/*.class" />
       	<include name="ch/systemsx/cisd/openbis/plugin/screening/client/api/v1/**/*.class" />
       	<include name="${build.info.filename}" />
      </fileset>
    	<manifest>
      	<attribute name="Main-Class" value="ch.systemsx.cisd.openbis.plugin.screening.client.api.v1.ScreeningClientApiTest" />
        <attribute name="Class-Path" value="spring-ext.jar" />
        <attribute name="Version" value="${version.number}" />
        <attribute name="Build-Number"
                   value="${version.number} (r${revision.number},${clean.flag})" />
      </manifest>
    </recursive-jar>
  	<jar update="true" destfile="${dist.screening-api.jar}">
  		<fileset dir="${classes.common-server}">
  		     	<include name="ch/systemsx/cisd/common/spring/HttpInvokerUtils.class" />
  		</fileset> 
      <fileset dir="${classes.common}">
            <include name="ch/systemsx/cisd/common/exceptions/**/*.class" />
      </fileset> 
    </jar>
    <recursive-jar destfile="${dist.screening-api.lib}/spring-ext.jar">
      <zipfileset src="${lib}/spring/spring.jar" />
      <zipfileset src="${lib}/spring/third-party/stream-supporting-httpinvoker.jar" />
      <zipfileset src="${lib}/commons-logging/commons-logging.jar" />
      <zipfileset src="${lib}/commons-httpclient/commons-httpclient.jar" />
      <zipfileset src="${lib}/commons-codec/commons-codec.jar" />
      <zipfileset src="${lib}/log4j/log4j.jar" />     
  	</recursive-jar>
  </target>
	
	<target name="screening-api" depends="screening-api-doc, screening-api-libs" />
</project>