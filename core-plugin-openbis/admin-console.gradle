configurations.create('adminConsolePartialLibs')
configurations.create('adminConsoleLibs')

dependencies {
    adminConsolePartialLibs 'google:gwt-user:2.4'

    adminConsoleLibs 'sis:sis-base:18.09.0',
            'apache:httpclient:4.3.6',
            'apache:httpcore:4.3.3',
            'apache:commons-logging:1.2',
            'apache:commons-io:2.6',
            'apache:log4j:1.2.15',
            'springframework:spring-aop:5.0.1.RELEASE',
            'springframework:spring-beans:5.0.1.RELEASE',
            'springframework:spring-context:5.0.1.RELEASE',
            'springframework:spring-core:5.0.1.RELEASE',
            'springframework:spring-web:5.0.1.RELEASE',
            'springframework:spring-webmvc:5.0.1.RELEASE',
            'springframework:spring-expression:5.0.1.RELEASE',
            'marathon:marathon-spring-util:1.2.5',
            'jline:jline:0.9.94',
            'aopalliance:aopalliance:1.0'
}

task adminConsole(type: Jar) {
    duplicatesStrategy 'include'
    archiveName 'openbis-admin-console.jar'
    includeEmptyDirs false
    from project(':lib-common').compileJava.outputs.getFiles().getAsFileTree().plus(
            project(':lib-openbis-common').compileJava.outputs.getFiles().getAsFileTree().plus(
                    project(':server-screening').compileJava.outputs.getFiles().getAsFileTree().plus(
                            project(':server-application-server').compileJava.outputs.getFiles().getAsFileTree().plus(
                                    project(':api-openbis-java').compileJava.outputs.getFiles().getAsFileTree().plus(
                                            project(':server-screening').compileJava.outputs.getFiles().getAsFileTree().plus(
                                                    project(':server-original-data-store').compileJava.outputs.getFiles().getAsFileTree())))))).matching {

        include 'ch/systemsx/cisd/common/spring/HttpInvokerUtils.class'
        include 'ch/systemsx/cisd/common/**/*.class'
        include 'ch/systemsx/cisd/openbis/common/**/*.class'
        include 'ch/systemsx/cisd/openbis/generic/client/console/**/*.class'
        include '**/shared/I*.class'
        include '**/dss/generic/shared/dto/*.class'
        include '**/generic/shared/basic/**/*.class'
        exclude '**/generic/shared/basic/annotation/**'
        exclude '**/generic/shared/basic/util/**'
        exclude '**/generic/shared/basic/utils/**'
        include '**/generic/shared/dto/**/*.class'
        exclude '**/generic/shared/dto/**/*PE.class'
        include '**/plugin/**/shared/basic/**/*.class'
        include '**/plugin/**/shared/dto/**/*.class'
        include '**/shared/authorization/annotation/*.class'
        include '**/shared/authorization/ISessionProvider.class'
        include '**/*BuildAndEnvironmentInfo.class'
    }

    from zipTree(configurations.adminConsolePartialLibs.files.iterator().next()).matching {
        include '**/com/google/gwt/user/client/rpc/IsSerializable.class'
        include '**/com/google/gwt/user/client/rpc/SerializableException.class'
    }

    for (File f : configurations.adminConsoleLibs.files) {
        from zipTree(f).matching {
            include '**/**'
        }
    }
    manifest {
        attributes("Main-Class": "ch.systemsx.cisd.openbis.generic.client.console.AdminConsole",
                "Class-Path": "openbis-admin-console.jar sis-base.jar commons-codec.jar httpclient.jar httpcore.jar aopalliance.jar commons-io.jar commons-logging.jar log4j.jar jline.jar spring-aop.jar spring-beans.jar spring-context.jar spring-core.jar spring-web.jar spring-webmvc.jar spring-expression.jar marathon-spring-util.jar")
    }
}

task zipAdminConsole(type: Zip) {
    archiveName 'openbis-admin-console.zip'
    from adminConsole.archivePath
    into 'openbis-admin-console'
}
zipAdminConsole.dependsOn adminConsole
