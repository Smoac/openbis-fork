evaluationDependsOn(':common')
evaluationDependsOn(':openbis_api')
evaluationDependsOn(':openbis-common')
evaluationDependsOn(':authentication')
evaluationDependsOn(':dbmigration')
evaluationDependsOn(':openbis')
evaluationDependsOn(':datastore_server')
evaluationDependsOn(':screening')
evaluationDependsOn(':openbis_standard_technologies')

apply from: '../gradle/javaproject.gradle'

dependencies {
    compile project(':screening')

    testCompile project(path: ':common', configuration: 'tests')
}

jar {
	baseName 'datastore_server_plugin-cina'
    manifest {
        attributes("Version": versionNumber,
                   "Build-Number": "${versionNumber} (r${revisionNumber},${cleanFlag})")
    }
}

task zip(type: Zip) {
	baseName 'datastore_server_plugin-cina'
    from jar
    into 'datastore_server/lib/'
    rename "datastore_server_plugin-cina.*\\.jar", "datastore_server_plugin-cina.jar"
}

task cinaDssClientJar(type: Jar) {
	archiveName 'dss_client.jar'
    from (zipTree(jar.archivePath).matching {
		include 'ch/systemsx/cisd/cina/client/util/**/*.class'
	})	
	
	from (zipTree(project(':openbis_standard_technologies').createDssClientJar.archivePath))
}
cinaDssClientJar.dependsOn jar

task cinaDssClient(type: Zip) {
	baseName 'dss_client-cina'
	from (project(':openbis_standard_technologies').copyJarsForWebStart.outputs.getFiles().getAsFileTree().matching {
        include 'cisd-args4j.jar'
        include 'sis-base.jar'
        include 'aopalliance.jar'
        include 'commons-codec.jar'
        include 'httpclient.jar'
        include 'httpcore.jar'
        include 'commons-io.jar'
        include 'commons-lang.jar'
        include 'commons-logging.jar'
        include 'jline.jar'
        include 'jython.jar'
        include 'log4j.jar'
        include 'spring-aop.jar'
        include 'spring-beans.jar'
        include 'spring-context.jar'
        include 'spring-core.jar'
        include 'spring-web.jar'
        include 'spring-webmvc.jar'
        include 'spring-expression.jar'
        include 'stream-supporting-httpinvoker.jar'
        }) {
        into 'dss_client/lib'
	}

    from (cinaDssClientJar.outputs.getFiles()) {
        into 'dss_client/lib'
    }
	
	from (project(':datastore_server').fileTree(dir: 'dist').matching {
		include 'dss_client.sh'
		}) {
		into 'dss_client'
	}
	
	from ('dist/cina_client.sh') {
		into 'dss_client'
	}
}

zip.dependsOn jar
build.dependsOn zip
build.dependsOn cinaDssClient
