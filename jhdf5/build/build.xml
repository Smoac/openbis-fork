<project name="jhdf5" default="dist" basedir="..">
	<import file="../../build_resources/ant/build-common.xml" />
	<project-classpath name="ecp" classes="${classes}" />

	<property name="mainfolder" value="cisd-${ant.project.name}" />
	<property name="distfolder" value="${ant.project.name}" />
	<property name="jar.file" value="${dist}/cisd-jhdf5.jar" />
	<property name="dist.file" value="${dist}/cisd-jhdf5" />
	<property name="jar.batteries-included.filename"
	          value="cisd-jhdf5-batteries_included_lin_win_mac_sun.jar" />
	<property name="jar.batteries-included.file" value="${dist}/${jar.batteries-included.filename}" />
	<property name="jar.batteries-included_lin_win_mac.file"
	          value="${dist}/cisd-jhdf5-batteries_included_lin_win_mac.jar" />
	<property name="jar.core.file" value="${dist}/cisd-jhdf5-core.jar" />
	<property name="jar.tools.file" value="${dist}/cisd-jhdf5-tools.jar" />
	<property name="src.zip.file" value="${dist}/cisd-jhdf5-src.zip" />
	<property name="javadoc.zip.file" value="${dist}/cisd-jhdf5-javadoc.zip" />
	<property name="test.jar.file" value="${dist}/cisd-jhdf5-test.jar" />
	<property name="lib" value="../libraries" />
	<property name="original.dist" value="../${ant.project.name}/dist" />
	<property name="nativesrc1" value="${lib}/hdf5/native" />
	<property name="nativesrc2" value="${lib}/unix/native" />
	<property name="nativeroot" value="${targets}/ant" />
	<property name="native" value="${nativeroot}/native" />

	<property name="dist.hdf5" value="${dist}/${mainfolder}" />
	<property name="dist.hdf5.lib" value="${dist.hdf5}/lib" />

	<target name="clean">
		<delete dir="${dist}" />
		<delete dir="${targets}/ant" />
	</target>

	<target name="jar-test" depends="clean, compile-tests">
		<mkdir dir="${dist.hdf5.lib}" />
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<copy todir="${native}">
			<fileset dir="${nativesrc1}">
				<include name="**/libjhdf5.so" />
				<include name="**/libjhdf5.jnilib" />
				<include name="**/jhdf5.dll" />
			</fileset>
		</copy>
		<recursive-jar destfile="${test.jar.file}">
			<fileset dir="${classes}">
				<include name="**/*.class" />
				<include name="${build.info.filename}" />
			</fileset>
			<fileset dir="${nativeroot}">
				<include name="native/**/*.so" />
				<include name="native/**/*.jnilib" />
				<include name="native/**/*.dll" />
			</fileset>
			<zipfileset src="${lib}/testng/testng-jdk15.jar" />
			<zipfileset src="${lib}/cisd-base/cisd-base.jar" />
			<zipfileset src="${lib}/cisd-args4j/cisd-args4j.jar" />
			<zipfileset src="${lib}/commons-lang/commons-lang.jar" />
			<zipfileset src="${lib}/commons-io/commons-io.jar" />
			<manifest>
				<attribute name="Main-Class" value="ch.systemsx.cisd.hdf5.HDF5RoundtripTest" />
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</recursive-jar>
	</target>

	<target name="jar-complete" depends="compile">
		<mkdir dir="${dist.hdf5.lib}" />
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<copy todir="${native}">
			<fileset dir="${nativesrc1}">
				<include name="**/libjhdf5.so" />
				<include name="**/libjhdf5.jnilib" />
				<include name="**/jhdf5.dll" />
			</fileset>
		</copy>
		<recursive-jar destfile="${jar.batteries-included.file}">
			<fileset dir="${classes}">
				<include name="${build.info.filename}" />
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${nativeroot}">
				<include name="native/**/*.so" />
				<include name="native/**/*.jnilib" />
				<include name="native/**/*.dll" />
			</fileset>
			<zipfileset src="${lib}/cisd-base/cisd-base.jar">
				<exclude name="${build.info.filename}" />
			</zipfileset>
			<zipfileset src="${lib}/cisd-args4j/cisd-args4j.jar">
				<exclude name="${build.info.filename}" />
				<exclude name="**/AbstractBuildAndEnvironmentInfo.class" />
			</zipfileset>
			<zipfileset src="${lib}/commons-lang/commons-lang.jar">
				<exclude name="META-INF/LICENSE.txt" />
				<exclude name="META-INF/NOTICE.txt" />
			</zipfileset>
			<zipfileset src="${lib}/commons-io/commons-io.jar">
				<exclude name="META-INF/LICENSE.txt" />
				<exclude name="META-INF/NOTICE.txt" />
			</zipfileset>
			<manifest>
				<attribute name="Main-Class" value="ch.systemsx.cisd.hdf5.tools.HDF5ArchiverMain" />
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</recursive-jar>
		<recursive-jar destfile="${jar.batteries-included_lin_win_mac.file}">
			<fileset dir="${classes}">
				<include name="${build.info.filename}" />
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${nativeroot}">
				<include name="native/**/*.so" />
				<exclude name="native/**/*-SunOS/*.so" />
				<include name="native/**/*.jnilib" />
				<include name="native/**/*.dll" />
			</fileset>
			<zipfileset src="${lib}/cisd-base/cisd-base.jar">
				<exclude name="${build.info.filename}" />
				<exclude name="native/**/*-SunOS/*.so" />
			</zipfileset>
			<zipfileset src="${lib}/cisd-args4j/cisd-args4j.jar">
				<exclude name="${build.info.filename}" />
				<exclude name="**/AbstractBuildAndEnvironmentInfo.class" />
			</zipfileset>
			<zipfileset src="${lib}/commons-lang/commons-lang.jar">
				<exclude name="META-INF/LICENSE.txt" />
				<exclude name="META-INF/NOTICE.txt" />
			</zipfileset>
			<zipfileset src="${lib}/commons-io/commons-io.jar">
				<exclude name="META-INF/LICENSE.txt" />
				<exclude name="META-INF/NOTICE.txt" />
			</zipfileset>
			<manifest>
				<attribute name="Main-Class" value="ch.systemsx.cisd.hdf5.tools.HDF5ArchiverMain" />
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</recursive-jar>
		<recursive-jar destfile="${jar.file}">
			<fileset dir="${classes}">
				<include name="${build.info.filename}" />
				<include name="**/*.class" />
			</fileset>
			<zipfileset src="${lib}/cisd-base/cisd-base.jar">
				<exclude name="${build.info.filename}" />
				<exclude name="native/**" />
			</zipfileset>
			<zipfileset src="${lib}/cisd-args4j/cisd-args4j.jar">
				<exclude name="${build.info.filename}" />
				<exclude name="**/AbstractBuildAndEnvironmentInfo.class" />
			</zipfileset>
			<zipfileset src="${lib}/commons-lang/commons-lang.jar">
				<exclude name="META-INF/LICENSE.txt" />
				<exclude name="META-INF/NOTICE.txt" />
			</zipfileset>
			<zipfileset src="${lib}/commons-io/commons-io.jar">
				<exclude name="META-INF/LICENSE.txt" />
				<exclude name="META-INF/NOTICE.txt" />
			</zipfileset>
			<manifest>
				<attribute name="Main-Class" value="ch.systemsx.cisd.hdf5.tools.HDF5ArchiverMain" />
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
				<attribute name="Class-Path"
				           value="hdf5-linux-intel.jar hdf5-solaris-intel.jar hdf5-solaris-sparc.jar hdf5-macosx-intel.jar hdf5-windows-intel.jar" />
			</manifest>
		</recursive-jar>
	</target>

	<target name="src-zip">
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<recursive-jar destfile="${src.zip.file}">
			<fileset dir="${classes}">
				<include name="${build.info.filename}" />
			</fileset>
			<fileset dir="${sources}">
				<include name="**/*.java" />
			</fileset>
			<manifest>
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</recursive-jar>
	</target>

	<target name="jar-core" depends="compile">
		<mkdir dir="${dist.hdf5.lib}" />
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<jar destfile="${jar.core.file}">
			<fileset dir="${classes}">
				<include name="${build.info.filename}" />
				<include name="**/*.class" />
				<exclude name="**/tools/*.class" />
			</fileset>
			<zipfileset src="${lib}/cisd-base/cisd-base.jar">
				<include name="ch/systemsx/cisd/base/utilities/AbstractBuildAndEnvironmentInfo.class" />
			</zipfileset>
			<manifest>
				<attribute name="Main-Class"
				           value="ch.systemsx.cisd.hdf5.BuildAndEnvironmentInfo" />
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</jar>
	</target>

	<target name="jar-tools" depends="compile">
		<mkdir dir="${dist.hdf5.lib}" />
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<jar destfile="${jar.tools.file}">
			<fileset dir="${classes}">
				<include name="${build.info.filename}" />
				<include name="**/tools/*.class" />
				<include name="ch/systems/cisd/hdf5/BuildAndEnvironmentInfo*.class" />
			</fileset>
			<zipfileset src="${lib}/cisd-base/cisd-base.jar">
				<include name="ch/systemsx/cisd/base/utilities/AbstractBuildAndEnvironmentInfo.class" />
			</zipfileset>
			<manifest>
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
				<attribute name="Main-Class" value="ch.systemsx.cisd.hdf5.tools.HDF5ArchiverMain" />
				<attribute name="Class-Path"
				           value="commons-lang.jar commons-io.jar cisd-base.jar cisd-args4j.jar cisd-jhdf5-core.jar hdf5-linux-intel.jar hdf5-solaris-intel.jar hdf5-solaris-sparc.jar hdf5-macosx-intel.jar hdf5-windows-intel.jar" />
			</manifest>
		</jar>
	</target>

	<target name="jar-all" depends="jar-complete, src-zip, jar-core, jar-tools, jar-platforms" />

	<target name="jar-platforms"
	        depends="jar-linux-intel, jar-solaris-intel, jar-solaris-sparc, jar-macosx-intel, jar-windows-intel" />

	<target name="jar-linux-intel" depends="compile">
		<delete dir="${native}" />
		<mkdir dir="${native}" />
		<mkdir dir="${dist.hdf5.lib}" />
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<copy todir="${native}">
			<fileset dir="${nativesrc1}">
				<include name="jhdf5/i386-Linux/libjhdf5.so" />
				<include name="jhdf5/amd64-Linux/libjhdf5.so" />
			</fileset>
			<fileset dir="${nativesrc2}">
				<include name="unix/i386-Linux/libunix.so" />
				<include name="unix/amd64-Linux/libunix.so" />
			</fileset>
		</copy>
		<jar destfile="${dist}/hdf5-linux-intel.jar">
			<fileset dir="${classes}">
				<include name="${build.info.filename}" />
			</fileset>
			<fileset dir="${nativeroot}">
				<include name="native/**/*.so" />
			</fileset>
			<zipfileset src="${lib}/cisd-base/cisd-base.jar">
				<include name="ch/systemsx/cisd/base/utilities/BuildAndEnvironmentInfo.class" />
			</zipfileset>
			<manifest>
				<attribute name="Main-Class"
				           value="ch.systemsx.cisd.base.utilities.BuildAndEnvironmentInfo" />
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</jar>
	</target>

	<target name="jar-solaris-intel" depends="compile">
		<delete dir="${native}" />
		<mkdir dir="${native}" />
		<mkdir dir="${dist.hdf5.lib}" />
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<copy todir="${native}">
			<fileset dir="${nativesrc1}">
				<include name="jhdf5/x86-SunOS/libjhdf5.so" />
				<include name="jhdf5/amd64-SunOS/libjhdf5.so" />
			</fileset>
			<fileset dir="${nativesrc2}">
				<include name="unix/x86-SunOS/libunix.so" />
				<include name="unix/amd64-SunOS/libunix.so" />
			</fileset>
		</copy>
		<jar destfile="${dist}/hdf5-solaris-intel.jar">
			<fileset dir="${classes}">
				<include name="${build.info.filename}" />
			</fileset>
			<fileset dir="${nativeroot}">
				<include name="native/**/*.so" />
			</fileset>
			<zipfileset src="${lib}/cisd-base/cisd-base.jar">
				<include name="ch/systemsx/cisd/base/utilities/BuildAndEnvironmentInfo.class" />
			</zipfileset>
			<manifest>
				<attribute name="Main-Class"
				           value="ch.systemsx.cisd.base.utilities.BuildAndEnvironmentInfo" />
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</jar>
	</target>

	<target name="jar-solaris-sparc" depends="compile">
		<delete dir="${native}" />
		<mkdir dir="${native}" />
		<mkdir dir="${dist.hdf5.lib}" />
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<copy todir="${native}">
			<fileset dir="${nativesrc1}">
				<include name="jhdf5/sparc-SunOS/libjhdf5.so" />
				<include name="jhdf5/sparcv9-SunOS/libjhdf5.so" />
			</fileset>
			<fileset dir="${nativesrc2}">
				<include name="unix/sparc-SunOS/libunix.so" />
				<include name="unix/sparcv9-SunOS/libunix.so" />
			</fileset>
		</copy>
		<jar destfile="${dist}/hdf5-solaris-sparc.jar">
			<fileset dir="${classes}">
				<include name="${build.info.filename}" />
			</fileset>
			<fileset dir="${nativeroot}">
				<include name="native/**/*.so" />
			</fileset>
			<zipfileset src="${lib}/cisd-base/cisd-base.jar">
				<include name="ch/systemsx/cisd/base/utilities/BuildAndEnvironmentInfo.class" />
			</zipfileset>
			<manifest>
				<attribute name="Main-Class"
				           value="ch.systemsx.cisd.base.utilities.BuildAndEnvironmentInfo" />
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</jar>
	</target>

	<target name="jar-macosx-intel" depends="compile">
		<delete dir="${native}" />
		<mkdir dir="${native}" />
		<mkdir dir="${dist.hdf5.lib}" />
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<copy todir="${native}">
			<fileset dir="${nativesrc1}">
				<include name="jhdf5/i386-Mac OS X/libjhdf5.jnilib" />
				<include name="jhdf5/x86_64-Mac OS X/libjhdf5.jnilib" />
			</fileset>
			<fileset dir="${nativesrc2}">
				<include name="unix/i386-Mac OS X/libunix.jnilib" />
				<include name="unix/x86_64-Mac OS X/libunix.jnilib" />
			</fileset>
		</copy>
		<jar destfile="${dist}/hdf5-macosx-intel.jar">
			<fileset dir="${classes}">
				<include name="${build.info.filename}" />
			</fileset>
			<fileset dir="${nativeroot}">
				<include name="native/**/*.jnilib" />
			</fileset>
			<zipfileset src="${lib}/cisd-base/cisd-base.jar">
				<include name="ch/systemsx/cisd/base/utilities/BuildAndEnvironmentInfo.class" />
			</zipfileset>
			<manifest>
				<attribute name="Main-Class"
				           value="ch.systemsx.cisd.base.utilities.BuildAndEnvironmentInfo" />
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</jar>
	</target>

	<target name="jar-windows-intel" depends="compile">
		<delete dir="${native}" />
		<mkdir dir="${native}" />
		<mkdir dir="${dist.hdf5.lib}" />
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<copy todir="${native}">
			<fileset dir="${nativesrc1}">
				<include name="jhdf5/x86-Windows/jhdf5.dll" />
				<include name="jhdf5/amd64-Windows/jhdf5.dll" />
			</fileset>
		</copy>
		<jar destfile="${dist}/hdf5-windows-intel.jar">
			<fileset dir="${classes}">
				<include name="${build.info.filename}" />
			</fileset>
			<fileset dir="${nativeroot}">
				<include name="native/**/*.dll" />
			</fileset>
			<zipfileset src="${lib}/cisd-base/cisd-base.jar">
				<include name="ch/systemsx/cisd/base/utilities/BuildAndEnvironmentInfo.class" />
			</zipfileset>
			<manifest>
				<attribute name="Main-Class"
				           value="ch.systemsx.cisd.base.utilities.BuildAndEnvironmentInfo" />
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</jar>
	</target>

	<target name="doc">
		<delete dir="${targets}/doc" />
		<delete dir="${targets}/source-base" />
		<unzip src="../libraries/cisd-base/cisd-base-src.zip" dest="${targets}/source-base" />
		<javadoc sourcepath="source/java:${targets}/source-base"
		         packagenames="ch.systemsx.cisd.hdf5,ch.systemsx.cisd.base.mdarray"
		         classpath="../base/targets/classes:../libraries/cisd-base/cisd-base.jar:../libraries/commons-lang/commons-lang.jar:../libraries/commons-io/commons-io.jar:../libraries/restrictionchecker/restrictions.jar"
		         destdir="targets/doc"
             doctitle="JHDF5 10.06"
		         access="public" />
	</target>

	<target name="dist" depends="clean, jar-all, doc">
		<zip destfile="${javadoc.zip.file}" basedir="${targets}" includes="doc/**" />
		<delete dir="${dist}/${mainfolder}" />
		<copy file="${lib}/cisd-args4j/cisd-args4j.jar" todir="${dist}/${distfolder}/lib" />
		<copy file="${lib}/cisd-base/cisd-base.jar" todir="${dist}/${distfolder}/lib" />
		<copy file="${lib}/commons-lang/commons-lang.jar" todir="${dist}/${distfolder}/lib" />
		<copy file="${lib}/commons-io/commons-io.jar" todir="${dist}/${distfolder}/lib" />
		<move file="${jar.batteries-included.file}"
		      todir="${dist}/${distfolder}/lib/batteries_included" />
		<move file="${jar.batteries-included_lin_win_mac.file}"
		      todir="${dist}/${distfolder}/lib/batteries_included" />
		<move file="${dist}/hdf5-linux-intel.jar" todir="${dist}/${distfolder}/lib/nativejar" />
		<move file="${dist}/hdf5-solaris-intel.jar" todir="${dist}/${distfolder}/lib/nativejar" />
		<move file="${dist}/hdf5-solaris-sparc.jar" todir="${dist}/${distfolder}/lib/nativejar" />
		<move file="${dist}/hdf5-macosx-intel.jar" todir="${dist}/${distfolder}/lib/nativejar" />
		<move file="${dist}/hdf5-windows-intel.jar" todir="${dist}/${distfolder}/lib/nativejar" />
		<move todir="${dist}/${distfolder}/lib">
			<fileset dir="${dist}">
				<include name="*.jar" />
			</fileset>
		</move>
		<unzip src="${dist}/${distfolder}/lib/batteries_included/${jar.batteries-included.filename}"
		       dest="${dist}/${distfolder}/lib">
			<patternset>
				<include name="native/**" />
			</patternset>
		</unzip>
		<move file="${src.zip.file}" todir="${dist}/${distfolder}/src" />
		<move file="${javadoc.zip.file}" todir="${dist}/${distfolder}/doc" />
		<copy todir="${dist}/${distfolder}">
			<fileset dir="${original.dist}" />
		</copy>
		<zip destfile="${dist.file}-${version.number}-r${revision.number}.zip">
			<zipfileset dir="${dist}/${distfolder}"
			            prefix="${mainfolder}"
			            excludes="**/*.sh" />
			<zipfileset dir="${dist}/${distfolder}"
			            prefix="${mainfolder}"
			            includes="**/*.sh"
			            filemode="755" />
		</zip>
		<delete dir="${dist}/${distfolder}" />
	</target>

	<!--
	// Task for continuous integration server.
	-->
	<target name="ci"
	        depends="build-common.ci, check-dependencies"
	        description="Task for continuous integration server." />

</project>