--
-- PostgreSQL database dump
--

-- Dumped from database version 12.3
-- Dumped by pg_dump version 12.3

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: archiving_status; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN archiving_status AS character varying(100)
	CONSTRAINT archiving_status_check CHECK (((VALUE)::text = ANY ((ARRAY['LOCKED'::character varying, 'AVAILABLE'::character varying, 'ARCHIVED'::character varying, 'ARCHIVE_PENDING'::character varying, 'UNARCHIVE_PENDING'::character varying, 'BACKUP_PENDING'::character varying])::text[])));


--
-- Name: authorization_role; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN authorization_role AS character varying(40)
	CONSTRAINT authorization_role_check CHECK (((VALUE)::text = ANY ((ARRAY['ADMIN'::character varying, 'POWER_USER'::character varying, 'USER'::character varying, 'OBSERVER'::character varying, 'ETL_SERVER'::character varying])::text[])));


--
-- Name: boolean_char; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN boolean_char AS boolean DEFAULT false;


--
-- Name: boolean_char_or_unknown; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN boolean_char_or_unknown AS character(1) DEFAULT 'U'::bpchar
	CONSTRAINT boolean_char_or_unknown_check CHECK ((VALUE = ANY (ARRAY['F'::bpchar, 'T'::bpchar, 'U'::bpchar])));


--
-- Name: code; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN code AS character varying(100);


--
-- Name: column_label; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN column_label AS character varying(128);


--
-- Name: data_set_kind; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN data_set_kind AS character varying(40)
	CONSTRAINT data_set_kind_check CHECK (((VALUE)::text = ANY ((ARRAY['PHYSICAL'::character varying, 'LINK'::character varying, 'CONTAINER'::character varying])::text[])));


--
-- Name: data_store_service_kind; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN data_store_service_kind AS character varying(40)
	CONSTRAINT data_store_service_kind_check CHECK (((VALUE)::text = ANY ((ARRAY['PROCESSING'::character varying, 'QUERIES'::character varying])::text[])));


--
-- Name: data_store_service_reporting_plugin_type; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN data_store_service_reporting_plugin_type AS character varying(40)
	CONSTRAINT data_store_service_reporting_plugin_type_check CHECK (((VALUE)::text = ANY ((ARRAY['TABLE_MODEL'::character varying, 'DSS_LINK'::character varying, 'AGGREGATION_TABLE_MODEL'::character varying])::text[])));


--
-- Name: description_2000; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN description_2000 AS character varying(2000);


--
-- Name: edms_address_type; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN edms_address_type AS text
	CONSTRAINT edms_address_type_check CHECK ((VALUE = ANY (ARRAY['OPENBIS'::text, 'URL'::text, 'FILE_SYSTEM'::text])));


--
-- Name: entity_kind; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN entity_kind AS character varying(40)
	CONSTRAINT entity_kind_check CHECK (((VALUE)::text = ANY ((ARRAY['SAMPLE'::character varying, 'EXPERIMENT'::character varying, 'DATA_SET'::character varying, 'MATERIAL'::character varying])::text[])));


--
-- Name: event_type; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN event_type AS character varying(40)
	CONSTRAINT event_type_check CHECK (((VALUE)::text = ANY ((ARRAY['DELETION'::character varying, 'MOVEMENT'::character varying, 'FREEZING'::character varying])::text[])));


--
-- Name: file; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN file AS bytea;


--
-- Name: file_name; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN file_name AS character varying(255);


--
-- Name: grid_expression; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN grid_expression AS character varying(2000);


--
-- Name: grid_id; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN grid_id AS character varying(200);


--
-- Name: identifier; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN identifier AS character varying(200);


--
-- Name: location_type; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN location_type AS text
	CONSTRAINT location_type_check CHECK ((VALUE = ANY (ARRAY['OPENBIS'::text, 'URL'::text, 'FILE_SYSTEM_PLAIN'::text, 'FILE_SYSTEM_GIT'::text])));


--
-- Name: object_name; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN object_name AS character varying(50);


--
-- Name: operation_execution_availability; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN operation_execution_availability AS character varying(40)
	CONSTRAINT operation_execution_availability_check CHECK (((VALUE)::text = ANY ((ARRAY['AVAILABLE'::character varying, 'DELETE_PENDING'::character varying, 'DELETED'::character varying, 'TIME_OUT_PENDING'::character varying, 'TIMED_OUT'::character varying])::text[])));


--
-- Name: operation_execution_state; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN operation_execution_state AS character varying(40)
	CONSTRAINT operation_execution_state_check CHECK (((VALUE)::text = ANY ((ARRAY['NEW'::character varying, 'SCHEDULED'::character varying, 'RUNNING'::character varying, 'FINISHED'::character varying, 'FAILED'::character varying])::text[])));


--
-- Name: ordinal_int; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN ordinal_int AS bigint
	CONSTRAINT ordinal_int_check CHECK ((VALUE > 0));


--
-- Name: plugin_type; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN plugin_type AS character varying(40)
	CONSTRAINT plugin_type_check CHECK (((VALUE)::text = ANY ((ARRAY['JYTHON'::character varying, 'PREDEPLOYED'::character varying])::text[])));


--
-- Name: query_type; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN query_type AS character varying(40)
	CONSTRAINT query_type_check CHECK (((VALUE)::text = ANY ((ARRAY['GENERIC'::character varying, 'EXPERIMENT'::character varying, 'SAMPLE'::character varying, 'DATA_SET'::character varying, 'MATERIAL'::character varying])::text[])));


--
-- Name: real_value; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN real_value AS real;


--
-- Name: sample_identifier; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN sample_identifier AS character varying(404);


--
-- Name: script_type; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN script_type AS character varying(40)
	CONSTRAINT script_type_check CHECK (((VALUE)::text = ANY ((ARRAY['DYNAMIC_PROPERTY'::character varying, 'MANAGED_PROPERTY'::character varying, 'ENTITY_VALIDATION'::character varying])::text[])));


--
-- Name: tech_id; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN tech_id AS bigint;


--
-- Name: text_value; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN text_value AS text;


--
-- Name: time_stamp; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN time_stamp AS timestamp with time zone;


--
-- Name: time_stamp_dfl; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN time_stamp_dfl AS timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP;


--
-- Name: title_100; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN title_100 AS character varying(100);


--
-- Name: user_id; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN user_id AS character varying(50);


--
-- Name: check_created_or_modified_data_set_owner_is_alive(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION check_created_or_modified_data_set_owner_is_alive() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	owner_code	CODE;
	owner_del_id	TECH_ID;
BEGIN
	IF (NEW.del_id IS NOT NULL) THEN
		RETURN NEW;
	END IF;

  -- check sample
  IF (NEW.samp_id IS NOT NULL) THEN
  	SELECT del_id, code INTO owner_del_id, owner_code
  	  FROM samples 
  	  WHERE id = NEW.samp_id;
  	IF (owner_del_id IS NOT NULL) THEN 
			RAISE EXCEPTION 'Data Set (Code: %) cannot be connected to a Sample (Code: %) %.', 
			                NEW.code, owner_code, deletion_description(owner_del_id);
		END IF;
	END IF;
	-- check experiment
  IF (NEW.expe_id IS NOT NULL) THEN
		SELECT del_id, code INTO owner_del_id, owner_code
	    FROM experiments 
	    WHERE id = NEW.expe_id;
	  IF (owner_del_id IS NOT NULL) THEN 
			RAISE EXCEPTION 'Data Set (Code: %) cannot be connected to an Experiment (Code: %) %.', 
			                NEW.code, owner_code, deletion_description(owner_del_id);
		END IF;	
	END IF;	
	RETURN NEW;
END;
$$;


--
-- Name: check_created_or_modified_sample_owner_is_alive(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION check_created_or_modified_sample_owner_is_alive() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	owner_code	CODE;
	owner_del_id	TECH_ID;
BEGIN
	IF (NEW.del_id IS NOT NULL) THEN
		RETURN NEW;
	END IF;

  -- check experiment (can't be deleted)
  IF (NEW.expe_id IS NOT NULL) THEN
  	SELECT del_id, code INTO owner_del_id, owner_code
  	  FROM experiments 
  	  WHERE id = NEW.expe_id;
  	IF (owner_del_id IS NOT NULL) THEN 
			RAISE EXCEPTION 'Sample (Code: %) cannot be connected to an Experiment (Code: %) %.', 
   		                NEW.code, owner_code, deletion_description(owner_del_id);
		END IF;
	END IF;
	RETURN NEW;
END;
$$;


--
-- Name: check_data_set_kind_link(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION check_data_set_kind_link() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    kind DATA_SET_KIND;
BEGIN
    SELECT data_set_kind INTO kind
        FROM data_all 
        WHERE id = NEW.id;
        IF (kind <> 'LINK') THEN 
            RAISE EXCEPTION 'Link data (Data Set Code: %) must reference a data set of kind LINK (is %).', 
                            NEW.id, kind;
        END IF;
    RETURN NEW;
END;
$$;


--
-- Name: check_data_set_kind_physical(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION check_data_set_kind_physical() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    kind DATA_SET_KIND;
BEGIN
    SELECT data_set_kind INTO kind
        FROM data_all 
        WHERE id = NEW.id;
        IF (kind <> 'PHYSICAL') THEN 
            RAISE EXCEPTION 'External data (Data Set Code: %) must reference a data set of kind PHYSICAL (is %).', 
                            NEW.id, kind;
        END IF;
    RETURN NEW;
END;
$$;


--
-- Name: check_deletion_consistency_on_experiment_deletion(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION check_deletion_consistency_on_experiment_deletion() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  counter  INTEGER;
BEGIN
	IF (OLD.del_id IS NOT NULL OR NEW.del_id IS NULL) THEN
		RETURN NEW;
	END IF;
	
  -- check datasets
	SELECT count(*) INTO counter 
	  FROM data
	  WHERE data.expe_id = NEW.id AND data.del_id IS NULL;
	IF (counter > 0) THEN
	  RAISE EXCEPTION 'Experiment (Code: %) deletion failed because at least one of its data sets was not deleted.', NEW.code;
	END IF;
	-- check samples
	SELECT count(*) INTO counter 
	  FROM samples 
	  WHERE samples.expe_id = NEW.id AND samples.del_id IS NULL;
	IF (counter > 0) THEN
	  RAISE EXCEPTION 'Experiment (Code: %) deletion failed because at least one of its samples was not deleted.', NEW.code;
	END IF;
	RETURN NEW;
END;
$$;


--
-- Name: check_deletion_consistency_on_sample_deletion(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION check_deletion_consistency_on_sample_deletion() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  counter  INTEGER;
BEGIN
	IF (OLD.del_id IS NOT NULL OR NEW.del_id IS NULL) THEN
		RETURN NEW;
	END IF;

  -- all directly connected data sets need to be deleted
  -- check datasets
	SELECT count(*) INTO counter 
	  FROM data
	  WHERE data.samp_id = NEW.id AND data.del_id IS NULL;
	IF (counter > 0) THEN
	  RAISE EXCEPTION 'Sample (Code: %) deletion failed because at least one of its data sets was not deleted.', NEW.code;
	END IF;
  -- all components need to be deleted
	SELECT count(*) INTO counter 
	  FROM samples 
	  WHERE samples.samp_id_part_of = NEW.id AND samples.del_id IS NULL;
	IF (counter > 0) THEN
	  RAISE EXCEPTION 'Sample (Code: %) deletion failed because at least one of its component samples was not deleted.', NEW.code;
	END IF;
	RETURN NEW;
END;
$$;


--
-- Name: check_project_is_defined_for_experiment_level_samples(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION check_project_is_defined_for_experiment_level_samples() RETURNS trigger
    LANGUAGE plpgsql
    AS $$ BEGIN   IF (NEW.proj_id IS NULL AND NEW.expe_id IS NOT NULL) THEN     RAISE EXCEPTION 'Project has to be defined for experiment level samples';   END IF;   RETURN NEW; END; $$;


--
-- Name: content_copies_location_type_check(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION content_copies_location_type_check() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
   edms_address_type EDMS_ADDRESS_TYPE;
   index integer;
BEGIN

   select position(address_type in NEW.location_type), address_type into index, edms_address_type from external_data_management_systems
      where id = NEW.edms_id;

   if index != 1 then
      RAISE EXCEPTION 'Insert/Update to content_copies failed. Location type %, but edms.address_type %', NEW.location_type, edms_address_type;
   end if;

   RETURN NEW;

END;
$$;


--
-- Name: content_copies_uniqueness_check(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION content_copies_uniqueness_check() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  NEW.location_unique_check = NEW.data_id || ',' || 
                              NEW.edms_id || ',' ||
                              coalesce(NEW.path, '') || ',' || 
                              coalesce(NEW.git_commit_hash, '') || ',' || 
                              coalesce(NEW.git_repository_id, '') || ',' || 
                              coalesce(NEW.external_code, '');
  RETURN NEW;
END;
$$;


--
-- Name: controlled_vocabulary_check(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION controlled_vocabulary_check() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
   v_code  CODE;
BEGIN

   select code into v_code from data_types where id = NEW.daty_id;

   -- Check if the data is of type "CONTROLLEDVOCABULARY"
   if v_code = 'CONTROLLEDVOCABULARY' then
      if NEW.covo_id IS NULL then
         RAISE EXCEPTION 'Insert/Update of Property Type (Code: %) failed, as its Data Type is CONTROLLEDVOCABULARY, but it is not linked to a Controlled Vocabulary.', NEW.code;
      end if;
   end if;

   RETURN NEW;

END;
$$;


--
-- Name: data_all_tsvector_document_trigger(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION data_all_tsvector_document_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    NEW.tsvector_document := (escape_tsvector_string(NEW.data_set_kind) || ':1')::tsvector ||
            (escape_tsvector_string(NEW.code) || ':1')::tsvector ||
            ('/' || escape_tsvector_string(NEW.code) || ':1')::tsvector;
    RETURN NEW;
END
$$;


--
-- Name: data_exp_or_sample_link_check(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION data_exp_or_sample_link_check() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  space_id CODE;
  sample_code CODE;
BEGIN
  if NEW.expe_id IS NOT NULL then
    RETURN NEW;
  end if;
  if NEW.samp_id IS NULL then
    RAISE EXCEPTION 'Neither experiment nor sample is specified for data set %', NEW.code;
  end if;
  select s.id, s.code into space_id, sample_code from samples_all s where s.id = NEW.samp_id;
  if space_id is NULL then
    RAISE EXCEPTION 'Sample % is a shared sample.', sample_code;
  end if;
  RETURN NEW;
END;
$$;


--
-- Name: data_set_property_with_material_data_type_check(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION data_set_property_with_material_data_type_check() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
   v_type_id  CODE;
   v_type_id_prop  CODE;
BEGIN
   if NEW.mate_prop_id IS NOT NULL then
			-- find material type id of the property type 
			select pt.maty_prop_id into v_type_id_prop 
			  from data_set_type_property_types dstpt, property_types pt 
			 where NEW.dstpt_id = dstpt.id AND dstpt.prty_id = pt.id;
		
			if v_type_id_prop IS NOT NULL then
				-- find material type id of the material which consists the entity's property value
				select entity.maty_id into v_type_id 
				  from materials entity
				 where NEW.mate_prop_id = entity.id;
				if v_type_id != v_type_id_prop then
					RAISE EXCEPTION 'Insert/Update of property value referencing material (id: %) failed, as referenced material type is different than expected (id %, expected id: %).', 
												 NEW.mate_prop_id, v_type_id, v_type_id_prop;
				end if;
			end if;
   end if;
   RETURN NEW;
END;
$$;


--
-- Name: deletion_description(tech_id); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION deletion_description(del_id tech_id) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
  del_person VARCHAR;
  del_date VARCHAR;
  del_reason VARCHAR;
BEGIN
  SELECT p.last_name || ' ' || p.first_name || ' (' || p.email || ')', 
         to_char(d.registration_timestamp, 'YYYY-MM-DD HH:MM:SS'), d.reason 
    INTO del_person, del_date, del_reason FROM deletions d, persons p 
    WHERE d.pers_id_registerer = p.id AND d.id = del_id;
  RETURN 'deleted by ' || del_person || ' on ' || del_date || ' with reason: "' || del_reason || '"';
END;
$$;


--
-- Name: disable_project_level_samples(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION disable_project_level_samples() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF (NEW.proj_id IS NOT NULL) THEN
    RAISE EXCEPTION 'Project level samples are disabled';
  END IF;
  
  RETURN NEW;
END;
$$;


--
-- Name: escape_tsvector_string(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION escape_tsvector_string(value character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
BEGIN
    RETURN REPLACE(
            REPLACE(
                    REPLACE(
                            REPLACE(
                                    REPLACE(
                                            REPLACE(
                                                    REPLACE(
                                                            REPLACE(
                                                                    REPLACE(LOWER(value), '<', '\<'),
                                                                    '!', '\!'),
                                                            '*', '\*'),
                                                    '&', '\&'),
                                            '|', '\|'),
                                    ')', '\)'),
                            '(', '\('),
                    ':', '\:'),
            ' ', '\ ');
END
$$;


--
-- Name: experiment_property_with_material_data_type_check(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION experiment_property_with_material_data_type_check() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
   v_type_id  CODE;
   v_type_id_prop  CODE;
BEGIN
   if NEW.mate_prop_id IS NOT NULL then
			-- find material type id of the property type 
			select pt.maty_prop_id into v_type_id_prop 
			  from experiment_type_property_types etpt, property_types pt 
			 where NEW.etpt_id = etpt.id AND etpt.prty_id = pt.id;
		
			if v_type_id_prop IS NOT NULL then
				-- find material type id of the material which consists the entity's property value
				select entity.maty_id into v_type_id 
				  from materials entity
				 where NEW.mate_prop_id = entity.id;
				if v_type_id != v_type_id_prop then
					RAISE EXCEPTION 'Insert/Update of property value referencing material (id: %) failed, as referenced material type is different than expected (id %, expected id: %).', 
												 NEW.mate_prop_id, v_type_id, v_type_id_prop;
				end if;
			end if;
   end if;
   RETURN NEW;
END;
$$;


--
-- Name: experiments_all_tsvector_document_trigger(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION experiments_all_tsvector_document_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE proj_code VARCHAR;
        space_code VARCHAR;
BEGIN
    SELECT p.code, s.code INTO STRICT proj_code, space_code FROM projects p
                                                                     INNER JOIN spaces s ON p.space_id = s.id WHERE p.id = NEW.proj_id;
    NEW.tsvector_document := (escape_tsvector_string(NEW.perm_id) || ':1')::tsvector ||
            (escape_tsvector_string(NEW.code) || ':1')::tsvector ||
            (escape_tsvector_string('/' || space_code || '/' || proj_code || '/' || NEW.code) || ':1')::tsvector;
    RETURN NEW;
END
$$;


--
-- Name: external_data_storage_format_check(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION external_data_storage_format_check() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
   v_covo_code  CODE;
   data_code CODE;
BEGIN

   select code into v_covo_code from controlled_vocabularies
      where is_managed_internally = true and 
         id = (select covo_id from controlled_vocabulary_terms where id = NEW.cvte_id_stor_fmt);
   -- Check if the data storage format is a term of the controlled vocabulary "STORAGE_FORMAT"
   if v_covo_code != 'STORAGE_FORMAT' then
      select code into data_code from data_all where id = NEW.id; 
      RAISE EXCEPTION 'Insert/Update of Data (Code: %) failed, as its Storage Format is %, but is required to be STORAGE_FORMAT.', data_code, v_covo_code;
   end if;

   RETURN NEW;

END;
$$;


--
-- Name: material_property_with_material_data_type_check(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION material_property_with_material_data_type_check() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
   v_type_id  CODE;
   v_type_id_prop  CODE;
BEGIN
   if NEW.mate_prop_id IS NOT NULL then
			-- find material type id of the property type 
			select pt.maty_prop_id into v_type_id_prop 
			  from material_type_property_types etpt, property_types pt 
			 where NEW.mtpt_id = etpt.id AND etpt.prty_id = pt.id;
		
			if v_type_id_prop IS NOT NULL then
				-- find material type id of the material which consists the entity's property value
				select entity.maty_id into v_type_id 
				  from materials entity
				 where NEW.mate_prop_id = entity.id;
				if v_type_id != v_type_id_prop then
					RAISE EXCEPTION 'Insert/Update of property value referencing material (id: %) failed, as referenced material type is different than expected (id %, expected id: %).', 
							 NEW.mate_prop_id, v_type_id, v_type_id_prop;
				end if;
			end if;
   end if;
   RETURN NEW;
END;
$$;


--
-- Name: materials_tsvector_document_trigger(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION materials_tsvector_document_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE material_type_code VARCHAR;
BEGIN
    SELECT code INTO STRICT material_type_code FROM material_types WHERE id = NEW.maty_id;
    NEW.tsvector_document := (escape_tsvector_string(NEW.code) || ':1')::tsvector ||
            (escape_tsvector_string(NEW.code || ' (' || material_type_code || ')') || ':1')::tsvector;
    RETURN NEW;
END
$$;


--
-- Name: melt_data_set_for(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION melt_data_set_for() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    NEW.FROZEN_FOR_CHILDREN = 'f';
    NEW.FROZEN_FOR_PARENTS = 'f';
    NEW.FROZEN_FOR_COMPS = 'f';
    NEW.FROZEN_FOR_CONTS = 'f';
    return NEW;
end;
$$;


--
-- Name: melt_experiment_for(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION melt_experiment_for() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    NEW.FROZEN_FOR_SAMP = 'f';
    NEW.FROZEN_FOR_DATA = 'f';
    return NEW;
end;
$$;


--
-- Name: melt_project_for(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION melt_project_for() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    NEW.FROZEN_FOR_EXP = 'f';
    NEW.FROZEN_FOR_SAMP = 'f';
    return NEW;
end;
$$;


--
-- Name: melt_sample_for(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION melt_sample_for() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    NEW.FROZEN_FOR_COMP = 'f';
    NEW.FROZEN_FOR_CHILDREN = 'f';
    NEW.FROZEN_FOR_PARENTS = 'f';
    NEW.FROZEN_FOR_DATA = 'f';
    return NEW;
end;
$$;


--
-- Name: melt_space_for(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION melt_space_for() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    NEW.FROZEN_FOR_PROJ = 'f';
    NEW.FROZEN_FOR_SAMP = 'f';
    return NEW;
end;
$$;


--
-- Name: preserve_deletion_consistency_on_data_set_relationships(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION preserve_deletion_consistency_on_data_set_relationships() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  delid  TECH_ID;
BEGIN
	IF (NEW.del_id IS NOT NULL OR OLD.del_id IS NULL) THEN
		RETURN NEW;
	END IF;
	SELECT del_id INTO delid
		FROM DATA_ALL where id = NEW.data_id_parent;
	IF (delid IS NOT NULL) THEN
		NEW.del_id = delid;
	END IF;
	SELECT del_id INTO delid
		FROM DATA_ALL where id = NEW.data_id_child;
	IF (delid IS NOT NULL) THEN
		NEW.del_id = delid;
	END IF;
	RETURN NEW;
END;
$$;


--
-- Name: preserve_deletion_consistency_on_sample_relationships(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION preserve_deletion_consistency_on_sample_relationships() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  delid  TECH_ID;
BEGIN
	IF (NEW.del_id IS NOT NULL OR OLD.del_id IS NULL) THEN
		RETURN NEW;
	END IF;
	SELECT del_id INTO delid
		FROM SAMPLES_ALL where id = NEW.sample_id_parent;
	IF (delid IS NOT NULL) THEN
		NEW.del_id = delid;
	END IF;
	SELECT del_id INTO delid
		FROM SAMPLES_ALL where id = NEW.sample_id_child;
	IF (delid IS NOT NULL) THEN
		NEW.del_id = delid;
	END IF;
	RETURN NEW;
END;
$$;


--
-- Name: properties_tsvector_document_trigger(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION properties_tsvector_document_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE cvt RECORD;
BEGIN
    IF NEW.cvte_id IS NOT NULL THEN
        SELECT code, label INTO STRICT cvt FROM controlled_vocabulary_terms WHERE id = NEW.cvte_id;
        NEW.tsvector_document := to_tsvector('english', LOWER(cvt.code)) ||
                                 to_tsvector('english', coalesce(LOWER(cvt.label), ''));
    ELSE
        NEW.tsvector_document := to_tsvector('english', coalesce(LOWER(NEW.value), ''));
    END IF;
    RETURN NEW;
END
$$;


--
-- Name: raise_delete_from_data_set_exception(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_delete_from_data_set_exception() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    data_id TECH_ID;
BEGIN
    IF (TG_ARGV[0] = 'DATA SET CHILD') THEN
        data_id = old.data_id_parent;
    ELSEIF (TG_ARGV[0] = 'DATA SET PARENT') THEN
        data_id = old.data_id_child;
    ELSEIF (TG_ARGV[0] = 'DATA SET COMPONENT') THEN
        data_id = old.data_id_parent;
    ELSEIF (TG_ARGV[0] = 'DATA SET CONTAINER') THEN
        data_id = old.data_id_child;
    END IF;
    RAISE EXCEPTION 'Operation DELETE % is not allowed because data set % is frozen.', TG_ARGV[0], 
        (select code from data_all where id = data_id);
END;
$$;


--
-- Name: raise_delete_from_experiment_exception(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_delete_from_experiment_exception() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    RAISE EXCEPTION 'Operation DELETE % is not allowed because experiment % is frozen.', TG_ARGV[0], 
        (select code from experiments_all where id = old.expe_id);
END;
$$;


--
-- Name: raise_delete_from_project_exception(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_delete_from_project_exception() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    RAISE EXCEPTION 'Operation DELETE % is not allowed because project % is frozen.', TG_ARGV[0], 
        (select code from projects where id = old.proj_id);
END;
$$;


--
-- Name: raise_delete_from_sample_exception(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_delete_from_sample_exception() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    samp_id TECH_ID;
BEGIN
    IF (TG_ARGV[0] = 'SAMPLE CHILD') THEN
        samp_id = old.sample_id_parent;
    ELSEIF (TG_ARGV[0] = 'SAMPLE PARENT') THEN
        samp_id = old.sample_id_child;
    ELSEIF (TG_ARGV[0] = 'SAMPLE COMPONENT') THEN
        samp_id = old.samp_id_part_of;
    ELSE
        samp_id = old.samp_id;
    END IF;
    RAISE EXCEPTION 'Operation DELETE % is not allowed because sample % is frozen.', TG_ARGV[0], 
        (select code from samples_all where id = samp_id);
END;
$$;


--
-- Name: raise_delete_from_space_exception(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_delete_from_space_exception() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    RAISE EXCEPTION 'Operation DELETE % is not allowed because space % is frozen.', TG_ARGV[0], 
        (select code from spaces where id = old.space_id);
END;
$$;


--
-- Name: raise_exception_frozen_data_set(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_exception_frozen_data_set() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    ds_id   TECH_ID;
BEGIN
    IF (TG_OP = 'DELETE') THEN
        ds_id = OLD.ds_id;
    ELSEIF (TG_OP = 'INSERT' OR TG_OP = 'UPDATE') THEN
        ds_id = NEW.ds_id;
    END IF;

    RAISE EXCEPTION 'Operation % % is not allowed because data set % is frozen.', TG_OP, TG_ARGV[0],
        (select code from data_all where id = ds_id);
END;
$$;


--
-- Name: raise_exception_frozen_data_set_relationship(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_exception_frozen_data_set_relationship() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    parent_id           TECH_ID;
    child_id            TECH_ID;
    relationship_id     TECH_ID;
    relationship        CODE;
    parent_child_frozen BOOLEAN_CHAR;
    cont_comp_frozen    BOOLEAN_CHAR;
BEGIN
    IF (TG_OP = 'DELETE') THEN
        parent_id = OLD.data_id_parent;
        child_id = OLD.data_id_child;
        relationship_id = OLD.relationship_id;
        parent_child_frozen = OLD.parent_frozen OR OLD.child_frozen;
        cont_comp_frozen = OLD.cont_frozen OR OLD.comp_frozen;
    ELSEIF (TG_OP = 'INSERT') THEN
        parent_id = NEW.data_id_parent;
        child_id = NEW.data_id_child;
        relationship_id = NEW.relationship_id;
        parent_child_frozen = NEW.parent_frozen OR NEW.child_frozen;
        cont_comp_frozen = NEW.cont_frozen OR NEW.comp_frozen;
    END IF;
    SELECT code INTO relationship FROM relationship_types WHERE id = relationship_id;
    IF (relationship = 'PARENT_CHILD' AND parent_child_frozen) OR (relationship = 'CONTAINER_COMPONENT' AND cont_comp_frozen) THEN
       RAISE EXCEPTION 'Operation % % is not allowed because data set % or % is frozen.', TG_OP, relationship,
            (select code from data_all where id = parent_id),
            (select code from data_all where id = child_id);
    END IF;
    IF (TG_OP = 'DELETE') THEN
        RETURN OLD;
    ELSEIF (TG_OP = 'INSERT') THEN
        RETURN NEW;
    END IF;
END;
$$;


--
-- Name: raise_exception_frozen_data_set_sample_relationship(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_exception_frozen_data_set_sample_relationship() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    sample_id   TECH_ID;
    operation   TEXT;
BEGIN
    IF (NEW.samp_id IS NOT NULL AND NEW.samp_frozen) THEN
        sample_id = NEW.samp_id;
        operation = 'SET SAMPLE';
    ELSEIF (OLD.samp_id IS NOT NULL AND OLD.samp_frozen) THEN
        sample_id = OLD.samp_id;
        operation = 'REMOVE SAMPLE';
    END IF;

    RAISE EXCEPTION 'Operation % is not allowed because sample % is frozen for data set %.', operation,
        (select code from samples_all where id = sample_id), NEW.code;
END;
$$;


--
-- Name: raise_exception_frozen_entity_by_code(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_exception_frozen_entity_by_code() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    RAISE EXCEPTION 'Operation % is not allowed because % % is frozen.', TG_ARGV[0], TG_ARGV[1], OLD.code;
END;
$$;


--
-- Name: raise_exception_frozen_experiment(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_exception_frozen_experiment() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    experiment_id   TECH_ID;
BEGIN
    IF (TG_OP = 'DELETE') THEN
        experiment_id = OLD.expe_id;
    ELSEIF (TG_OP = 'INSERT' OR TG_OP = 'UPDATE') THEN
        experiment_id = NEW.expe_id;
    END IF;

    RAISE EXCEPTION 'Operation % % is not allowed because experiment % is frozen.', TG_OP, TG_ARGV[0],
        (select code from experiments_all where id = experiment_id);
END;
$$;


--
-- Name: raise_exception_frozen_experiment_relationship(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_exception_frozen_experiment_relationship() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    experiment_id   TECH_ID;
    operation       TEXT;
BEGIN
    IF (NEW.expe_id IS NOT NULL AND NEW.expe_frozen) THEN
        experiment_id = NEW.expe_id;
        operation = 'SET EXPERIMENT';
    ELSEIF (OLD.expe_id IS NOT NULL AND OLD.expe_frozen) THEN
        experiment_id = OLD.expe_id;
        operation = 'REMOVE EXPERIMENT';
    END IF;

    RAISE EXCEPTION 'Operation % is not allowed because experiment % is frozen for % %.', operation,
        (select code from experiments_all where id = experiment_id), TG_ARGV[0], NEW.code;
END;
$$;


--
-- Name: raise_exception_frozen_project(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_exception_frozen_project() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    project_id   TECH_ID;
BEGIN
    IF (TG_OP = 'DELETE') THEN
        project_id = OLD.proj_id;
    ELSEIF (TG_OP = 'INSERT' OR TG_OP = 'UPDATE') THEN
        project_id = NEW.proj_id;
    END IF;

    RAISE EXCEPTION 'Operation % % is not allowed because project % is frozen.', TG_OP, TG_ARGV[0],
        (select code from projects where id = project_id);
END;
$$;


--
-- Name: raise_exception_frozen_project_relationship(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_exception_frozen_project_relationship() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    project_id   TECH_ID;
    operation    TEXT;
BEGIN
    IF (NEW.proj_id IS NOT NULL AND NEW.proj_frozen) THEN
        project_id = NEW.proj_id;
        operation = 'SET PROJECT';
    ELSEIF (OLD.proj_id IS NOT NULL AND OLD.proj_frozen) THEN
        project_id = OLD.proj_id;
        operation = 'REMOVE PROJECT';
    END IF;

    RAISE EXCEPTION 'Operation % is not allowed because project % is frozen for % %.', operation,
        (select code from projects where id = project_id), TG_ARGV[0], NEW.code;
END;
$$;


--
-- Name: raise_exception_frozen_sample(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_exception_frozen_sample() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    sample_id   TECH_ID;
BEGIN
    IF (TG_OP = 'DELETE') THEN
        sample_id = OLD.samp_id;
    ELSEIF (TG_OP = 'INSERT' OR TG_OP = 'UPDATE') THEN
        sample_id = NEW.samp_id;
    END IF;

    RAISE EXCEPTION 'Operation % % is not allowed because sample % is frozen.', TG_OP, TG_ARGV[0],
        (select code from samples_all where id = sample_id);
END;
$$;


--
-- Name: raise_exception_frozen_sample_container_relationship(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_exception_frozen_sample_container_relationship() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    sample_id   TECH_ID;
    operation   TEXT;
BEGIN
    IF (NEW.samp_id_part_of IS NOT NULL AND NEW.CONT_FROZEN) THEN
        sample_id = NEW.samp_id_part_of;
        operation = 'SET CONTAINER';
    ELSEIF (OLD.samp_id_part_of IS NOT NULL AND OLD.CONT_FROZEN) THEN
        sample_id = OLD.samp_id_part_of;
        operation = 'REMOVE CONTAINER';
    END IF;

    RAISE EXCEPTION 'Operation % is not allowed because sample % is frozen for sample %.', operation,
        (select code from samples_all where id = sample_id), NEW.code;
END;
$$;


--
-- Name: raise_exception_frozen_sample_relationship(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_exception_frozen_sample_relationship() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    parent_id   TECH_ID;
    child_id    TECH_ID;
BEGIN
    IF (TG_OP = 'DELETE') THEN
        parent_id = OLD.sample_id_parent;
        child_id = OLD.sample_id_child;
    ELSEIF (TG_OP = 'INSERT') THEN
        parent_id = NEW.sample_id_parent;
        child_id = NEW.sample_id_child;
    END IF;
    RAISE EXCEPTION 'Operation % is not allowed because sample % or % is frozen.', TG_OP, 
        (select code from samples_all where id = parent_id),
        (select code from samples_all where id = child_id);
END;
$$;


--
-- Name: raise_exception_frozen_space_relationship(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION raise_exception_frozen_space_relationship() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    space_id   TECH_ID;
    operation  TEXT;
BEGIN
    IF (NEW.space_id IS NOT NULL AND NEW.space_frozen) THEN
        space_id = NEW.space_id;
        operation = 'SET SPACE';
    ELSEIF (OLD.space_id IS NOT NULL AND OLD.space_frozen) THEN
        space_id = OLD.space_id;
        operation = 'REMOVE SPACE';
    END IF;

    RAISE EXCEPTION 'Operation % is not allowed because space % is frozen for % %.', operation,
        (select code from spaces where id = space_id), TG_ARGV[0], NEW.code;
END;
$$;


--
-- Name: rename_sequence(character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION rename_sequence(old_name character varying, new_name character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
  CURR_SEQ_VAL   INTEGER;
BEGIN
  SELECT INTO CURR_SEQ_VAL NEXTVAL(OLD_NAME);
  EXECUTE 'CREATE SEQUENCE ' || NEW_NAME || ' START WITH ' || CURR_SEQ_VAL;
  EXECUTE 'DROP SEQUENCE ' || OLD_NAME;
  RETURN CURR_SEQ_VAL;
END;
$$;


--
-- Name: sample_fill_code_unique_check(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION sample_fill_code_unique_check() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  NEW.code_unique_check = NEW.code || ',' || coalesce(NEW.samp_id_part_of, -1) || ',' || coalesce(NEW.proj_id, -1) || ',' || coalesce(NEW.space_id, -1);
  RETURN NEW;
END;
$$;


--
-- Name: sample_fill_subcode_unique_check(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION sample_fill_subcode_unique_check() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    unique_subcode  BOOLEAN_CHAR;
BEGIN
    SELECT is_subcode_unique into unique_subcode FROM sample_types WHERE id = NEW.saty_id;
    
    IF (unique_subcode) THEN
    NEW.subcode_unique_check = NEW.code || ',' || coalesce(NEW.saty_id, -1) || ',' || coalesce(NEW.proj_id, -1) || ',' || coalesce(NEW.space_id, -1);
    ELSE
    NEW.subcode_unique_check = NULL;
  END IF;
  
  RETURN NEW;
END;
$$;


--
-- Name: sample_property_with_material_data_type_check(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION sample_property_with_material_data_type_check() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
   v_type_id  CODE;
   v_type_id_prop  CODE;
BEGIN
   if NEW.mate_prop_id IS NOT NULL then
			-- find material type id of the property type 
			select pt.maty_prop_id into v_type_id_prop 
			  from sample_type_property_types etpt, property_types pt 
			 where NEW.stpt_id = etpt.id AND etpt.prty_id = pt.id;
		
			if v_type_id_prop IS NOT NULL then
				-- find material type id of the material which consists the entity's property value
				select entity.maty_id into v_type_id 
				  from materials entity
				 where NEW.mate_prop_id = entity.id;
				if v_type_id != v_type_id_prop then
					RAISE EXCEPTION 'Insert/Update of property value referencing material (id: %) failed, as referenced material type is different than expected (id %, expected id: %).', 
												 NEW.mate_prop_id, v_type_id, v_type_id_prop;
				end if;
			end if;
   end if;
   RETURN NEW;
END;
$$;


--
-- Name: sample_type_fill_subcode_unique_check(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION sample_type_fill_subcode_unique_check() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF (NEW.is_subcode_unique::boolean <> OLD.is_subcode_unique::boolean) THEN
      UPDATE samples_all SET subcode_unique_check = subcode_unique_check WHERE saty_id = NEW.id;
  END IF;
    RETURN NEW;
END;
$$;


--
-- Name: samples_all_tsvector_document_trigger(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION samples_all_tsvector_document_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE proj_code VARCHAR;
    space_code VARCHAR;
    container_code VARCHAR;
    identifier VARCHAR := '/';
BEGIN
    IF NEW.space_id IS NOT NULL THEN
        SELECT code INTO STRICT space_code FROM spaces WHERE id = NEW.space_id;
        identifier := identifier || space_code || '/';
    END IF;

    IF NEW.proj_id IS NOT NULL THEN
        IF NEW.space_id IS NOT NULL THEN
            SELECT code INTO STRICT proj_code FROM projects WHERE id = NEW.proj_id;
        ELSE
            SELECT p.code, s.code INTO STRICT proj_code, space_code FROM projects p
                INNER JOIN spaces s ON p.space_id = s.id WHERE id = NEW.proj_id;
            identifier := identifier || space_code || '/';
        END IF;

        identifier := identifier || proj_code || '/';
    END IF;

    IF NEW.samp_id_part_of IS NOT NULL THEN
        SELECT code INTO STRICT container_code FROM samples_all WHERE id = NEW.samp_id_part_of;
        identifier := identifier || container_code || ':' || NEW.code;
    ELSE
        identifier := identifier || NEW.code;
    END IF;

    NEW.sample_identifier := identifier;
    NEW.tsvector_document := (escape_tsvector_string(NEW.perm_id) || ':1')::tsvector ||
            (escape_tsvector_string(NEW.code) || ':1')::tsvector ||
            (escape_tsvector_string(identifier) || ':1')::tsvector;
    RETURN NEW;
END
$$;


--
-- Name: attachment_content_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE attachment_content_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


SET default_tablespace = '';

--
-- Name: attachment_contents; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE attachment_contents (
    id tech_id NOT NULL,
    value file NOT NULL
);


--
-- Name: attachment_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE attachment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: attachments; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE attachments (
    id tech_id NOT NULL,
    expe_id tech_id,
    samp_id tech_id,
    proj_id tech_id,
    exac_id tech_id NOT NULL,
    file_name file_name NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    version integer NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    title title_100,
    description description_2000,
    proj_frozen boolean_char DEFAULT false NOT NULL,
    expe_frozen boolean_char DEFAULT false NOT NULL,
    samp_frozen boolean_char DEFAULT false NOT NULL,
    CONSTRAINT atta_arc_ck CHECK ((((expe_id IS NOT NULL) AND (proj_id IS NULL) AND (samp_id IS NULL)) OR ((expe_id IS NULL) AND (proj_id IS NOT NULL) AND (samp_id IS NULL)) OR ((expe_id IS NULL) AND (proj_id IS NULL) AND (samp_id IS NOT NULL))))
);


--
-- Name: authorization_group_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE authorization_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: authorization_group_persons; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE authorization_group_persons (
    ag_id tech_id NOT NULL,
    pers_id tech_id NOT NULL
);


--
-- Name: authorization_groups; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE authorization_groups (
    id tech_id NOT NULL,
    code code NOT NULL,
    description description_2000,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP
);


--
-- Name: code_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: content_copies; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE content_copies (
    id tech_id NOT NULL,
    location_type location_type NOT NULL,
    data_id tech_id NOT NULL,
    edms_id tech_id NOT NULL,
    external_code text_value,
    path text_value,
    git_commit_hash text_value,
    git_repository_id text_value,
    location_unique_check text_value NOT NULL,
    pers_id_registerer tech_id,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    data_frozen boolean_char DEFAULT false NOT NULL
);


--
-- Name: content_copies_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE content_copies_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: controlled_vocabularies; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE controlled_vocabularies (
    id tech_id NOT NULL,
    code code NOT NULL,
    description description_2000,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    is_managed_internally boolean_char DEFAULT false NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    is_chosen_from_list boolean_char DEFAULT true NOT NULL,
    source_uri character varying(250)
);


--
-- Name: controlled_vocabulary_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE controlled_vocabulary_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: controlled_vocabulary_terms; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE controlled_vocabulary_terms (
    id tech_id NOT NULL,
    code object_name NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    covo_id tech_id NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    label column_label,
    description description_2000,
    ordinal ordinal_int NOT NULL,
    is_official boolean_char DEFAULT true NOT NULL,
    CONSTRAINT cvte_ck CHECK (((ordinal)::bigint > 0))
);


--
-- Name: core_plugin_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE core_plugin_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: core_plugins; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE core_plugins (
    id tech_id NOT NULL,
    name character varying(200) NOT NULL,
    version integer NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    master_reg_script text_value
);


--
-- Name: cvte_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE cvte_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: data_all; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE data_all (
    id tech_id NOT NULL,
    code code,
    data_set_kind data_set_kind DEFAULT 'PHYSICAL'::character varying NOT NULL,
    dsty_id tech_id NOT NULL,
    dast_id tech_id NOT NULL,
    expe_id tech_id,
    data_producer_code code,
    production_timestamp time_stamp,
    samp_id tech_id,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pers_id_registerer tech_id,
    is_valid boolean_char DEFAULT true,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    access_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    is_derived boolean_char NOT NULL,
    del_id tech_id,
    orig_del tech_id,
    pers_id_modifier tech_id,
    version integer DEFAULT 0,
    frozen boolean_char DEFAULT false NOT NULL,
    frozen_for_children boolean_char DEFAULT false NOT NULL,
    frozen_for_parents boolean_char DEFAULT false NOT NULL,
    frozen_for_comps boolean_char DEFAULT false NOT NULL,
    frozen_for_conts boolean_char DEFAULT false NOT NULL,
    expe_frozen boolean_char DEFAULT false NOT NULL,
    samp_frozen boolean_char DEFAULT false NOT NULL,
    tsvector_document tsvector NOT NULL,
    CONSTRAINT data_ck CHECK (((expe_id IS NOT NULL) OR (samp_id IS NOT NULL)))
);


--
-- Name: data; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW data AS
 SELECT data_all.id,
    data_all.code,
    data_all.dsty_id,
    data_all.dast_id,
    data_all.expe_id,
    data_all.expe_frozen,
    data_all.data_producer_code,
    data_all.production_timestamp,
    data_all.samp_id,
    data_all.samp_frozen,
    data_all.registration_timestamp,
    data_all.access_timestamp,
    data_all.pers_id_registerer,
    data_all.pers_id_modifier,
    data_all.is_valid,
    data_all.modification_timestamp,
    data_all.is_derived,
    data_all.del_id,
    data_all.orig_del,
    data_all.version,
    data_all.data_set_kind,
    data_all.frozen,
    data_all.frozen_for_children,
    data_all.frozen_for_parents,
    data_all.frozen_for_comps,
    data_all.frozen_for_conts,
    data_all.tsvector_document
   FROM data_all
  WHERE (data_all.del_id IS NULL);


--
-- Name: data_deleted; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW data_deleted AS
 SELECT data_all.id,
    data_all.code,
    data_all.dsty_id,
    data_all.dast_id,
    data_all.expe_id,
    data_all.data_producer_code,
    data_all.production_timestamp,
    data_all.samp_id,
    data_all.registration_timestamp,
    data_all.access_timestamp,
    data_all.pers_id_registerer,
    data_all.pers_id_modifier,
    data_all.is_valid,
    data_all.modification_timestamp,
    data_all.is_derived,
    data_all.del_id,
    data_all.orig_del,
    data_all.version,
    data_all.data_set_kind
   FROM data_all
  WHERE (data_all.del_id IS NOT NULL);


--
-- Name: data_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE data_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: data_set_copies_history; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE data_set_copies_history (
    id tech_id NOT NULL,
    cc_id tech_id NOT NULL,
    data_id tech_id NOT NULL,
    external_code text_value,
    path text_value,
    git_commit_hash text_value,
    git_repository_id text_value,
    edms_id tech_id NOT NULL,
    edms_code code,
    edms_label text_value,
    edms_address text_value,
    pers_id_author tech_id,
    valid_from_timestamp time_stamp NOT NULL,
    valid_until_timestamp time_stamp
);


--
-- Name: data_set_copies_history_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE data_set_copies_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: data_set_properties_history; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE data_set_properties_history (
    id tech_id NOT NULL,
    ds_id tech_id NOT NULL,
    dstpt_id tech_id NOT NULL,
    value text_value,
    vocabulary_term identifier,
    material identifier,
    sample identifier,
    pers_id_author tech_id NOT NULL,
    valid_from_timestamp time_stamp NOT NULL,
    valid_until_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT dsprh_ck CHECK ((((value IS NOT NULL) AND (vocabulary_term IS NULL) AND (material IS NULL) AND (sample IS NULL)) OR ((value IS NULL) AND (vocabulary_term IS NOT NULL) AND (material IS NULL) AND (sample IS NULL)) OR ((value IS NULL) AND (vocabulary_term IS NULL) AND (material IS NOT NULL) AND (sample IS NULL)) OR ((value IS NULL) AND (vocabulary_term IS NULL) AND (material IS NULL) AND (sample IS NOT NULL))))
);


--
-- Name: data_set_relationships_history; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE data_set_relationships_history (
    id tech_id NOT NULL,
    main_data_id tech_id NOT NULL,
    relation_type text_value,
    ordinal integer,
    expe_id tech_id,
    samp_id tech_id,
    data_id tech_id,
    entity_perm_id text_value,
    pers_id_author tech_id,
    valid_from_timestamp time_stamp NOT NULL,
    valid_until_timestamp time_stamp
);


--
-- Name: data_set_history_view; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW data_set_history_view AS
 SELECT (3 * (data_set_relationships_history.id)::bigint) AS id,
    data_set_relationships_history.main_data_id,
    data_set_relationships_history.relation_type,
    data_set_relationships_history.ordinal,
    data_set_relationships_history.expe_id,
    data_set_relationships_history.samp_id,
    data_set_relationships_history.data_id,
    data_set_relationships_history.entity_perm_id,
    NULL::bigint AS dstpt_id,
    NULL::text AS value,
    NULL::character varying AS vocabulary_term,
    NULL::character varying AS material,
    NULL::character varying AS sample,
    NULL::text AS external_code,
    NULL::text AS path,
    NULL::text AS git_commit_hash,
    NULL::text AS git_repository_id,
    (NULL::bigint)::tech_id AS edms_id,
    NULL::text AS edms_code,
    NULL::text AS edms_label,
    NULL::text AS edms_address,
    data_set_relationships_history.pers_id_author,
    data_set_relationships_history.valid_from_timestamp,
    data_set_relationships_history.valid_until_timestamp
   FROM data_set_relationships_history
  WHERE (data_set_relationships_history.valid_until_timestamp IS NOT NULL)
UNION
 SELECT ((3 * (data_set_properties_history.id)::bigint) + 1) AS id,
    data_set_properties_history.ds_id AS main_data_id,
    NULL::text AS relation_type,
    NULL::integer AS ordinal,
    NULL::bigint AS expe_id,
    NULL::bigint AS samp_id,
    NULL::bigint AS data_id,
    NULL::text AS entity_perm_id,
    data_set_properties_history.dstpt_id,
    data_set_properties_history.value,
    data_set_properties_history.vocabulary_term,
    data_set_properties_history.material,
    data_set_properties_history.sample,
    NULL::text AS external_code,
    NULL::text AS path,
    NULL::text AS git_commit_hash,
    NULL::text AS git_repository_id,
    NULL::bigint AS edms_id,
    NULL::text AS edms_code,
    NULL::text AS edms_label,
    NULL::text AS edms_address,
    data_set_properties_history.pers_id_author,
    data_set_properties_history.valid_from_timestamp,
    data_set_properties_history.valid_until_timestamp
   FROM data_set_properties_history
UNION
 SELECT ((3 * (data_set_copies_history.id)::bigint) + 2) AS id,
    data_set_copies_history.data_id AS main_data_id,
    NULL::text AS relation_type,
    NULL::integer AS ordinal,
    NULL::bigint AS expe_id,
    NULL::bigint AS samp_id,
    NULL::bigint AS data_id,
    NULL::text AS entity_perm_id,
    NULL::bigint AS dstpt_id,
    NULL::text AS value,
    NULL::character varying AS vocabulary_term,
    NULL::character varying AS material,
    NULL::character varying AS sample,
    data_set_copies_history.external_code,
    data_set_copies_history.path,
    data_set_copies_history.git_commit_hash,
    data_set_copies_history.git_repository_id,
    data_set_copies_history.edms_id,
    data_set_copies_history.edms_code,
    data_set_copies_history.edms_label,
    data_set_copies_history.edms_address,
    data_set_copies_history.pers_id_author,
    data_set_copies_history.valid_from_timestamp,
    data_set_copies_history.valid_until_timestamp
   FROM data_set_copies_history
  WHERE (data_set_copies_history.valid_until_timestamp IS NOT NULL);


--
-- Name: data_set_properties; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE data_set_properties (
    id tech_id NOT NULL,
    ds_id tech_id NOT NULL,
    dstpt_id tech_id NOT NULL,
    value text_value,
    cvte_id tech_id,
    mate_prop_id tech_id,
    samp_prop_id tech_id,
    pers_id_registerer tech_id NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pers_id_author tech_id NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    dase_frozen boolean_char DEFAULT false NOT NULL,
    tsvector_document tsvector NOT NULL,
    CONSTRAINT dspr_ck CHECK ((((value IS NOT NULL) AND (cvte_id IS NULL) AND (mate_prop_id IS NULL) AND (samp_prop_id IS NULL)) OR ((value IS NULL) AND (cvte_id IS NOT NULL) AND (mate_prop_id IS NULL) AND (samp_prop_id IS NULL)) OR ((value IS NULL) AND (cvte_id IS NULL) AND (mate_prop_id IS NOT NULL) AND (samp_prop_id IS NULL)) OR ((value IS NULL) AND (cvte_id IS NULL) AND (mate_prop_id IS NULL) AND (samp_prop_id IS NOT NULL))))
);


--
-- Name: data_set_property_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE data_set_property_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: data_set_relationship_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE data_set_relationship_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: data_set_relationships_all; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE data_set_relationships_all (
    data_id_parent tech_id NOT NULL,
    data_id_child tech_id NOT NULL,
    relationship_id tech_id NOT NULL,
    ordinal integer,
    del_id tech_id,
    pers_id_author tech_id,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    parent_frozen boolean_char DEFAULT false NOT NULL,
    child_frozen boolean_char DEFAULT false NOT NULL,
    comp_frozen boolean_char DEFAULT false NOT NULL,
    cont_frozen boolean_char DEFAULT false NOT NULL
);


--
-- Name: data_set_relationships; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW data_set_relationships AS
 SELECT data_set_relationships_all.data_id_parent,
    data_set_relationships_all.parent_frozen,
    data_set_relationships_all.cont_frozen,
    data_set_relationships_all.data_id_child,
    data_set_relationships_all.child_frozen,
    data_set_relationships_all.comp_frozen,
    data_set_relationships_all.relationship_id,
    data_set_relationships_all.ordinal,
    data_set_relationships_all.del_id,
    data_set_relationships_all.pers_id_author,
    data_set_relationships_all.registration_timestamp,
    data_set_relationships_all.modification_timestamp
   FROM data_set_relationships_all
  WHERE (data_set_relationships_all.del_id IS NULL);


--
-- Name: data_set_relationships_history_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE data_set_relationships_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: data_set_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE data_set_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: data_set_type_property_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE data_set_type_property_types (
    id tech_id NOT NULL,
    dsty_id tech_id NOT NULL,
    prty_id tech_id NOT NULL,
    is_mandatory boolean_char DEFAULT false NOT NULL,
    is_managed_internally boolean_char DEFAULT false NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    ordinal ordinal_int NOT NULL,
    section description_2000,
    script_id tech_id,
    is_shown_edit boolean_char DEFAULT true NOT NULL,
    show_raw_value boolean_char DEFAULT false NOT NULL
);


--
-- Name: data_set_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE data_set_types (
    id tech_id NOT NULL,
    code code NOT NULL,
    description description_2000,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    main_ds_pattern character varying(300),
    main_ds_path character varying(1000),
    deletion_disallow boolean_char DEFAULT false,
    validation_script_id tech_id
);


--
-- Name: data_store_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE data_store_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: data_store_service_data_set_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE data_store_service_data_set_types (
    data_store_service_id tech_id NOT NULL,
    data_set_type_id tech_id NOT NULL
);


--
-- Name: data_store_services; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE data_store_services (
    id tech_id NOT NULL,
    key character varying(256) NOT NULL,
    label character varying(256) NOT NULL,
    kind data_store_service_kind NOT NULL,
    data_store_id tech_id NOT NULL,
    reporting_plugin_type data_store_service_reporting_plugin_type
);


--
-- Name: data_store_services_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE data_store_services_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: data_stores; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE data_stores (
    id tech_id NOT NULL,
    uuid code NOT NULL,
    code code NOT NULL,
    download_url character varying(1024) NOT NULL,
    remote_url character varying(250) NOT NULL,
    session_token character varying(50) NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    is_archiver_configured boolean_char DEFAULT false NOT NULL,
    data_source_definitions text_value
);


--
-- Name: data_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE data_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: data_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE data_types (
    id tech_id NOT NULL,
    code code NOT NULL,
    description description_2000 NOT NULL
);


--
-- Name: database_instance_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE database_instance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: database_version_logs; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE database_version_logs (
    db_version character varying(4) NOT NULL,
    module_name character varying(250),
    run_status character varying(10),
    run_status_timestamp timestamp without time zone,
    module_code bytea,
    run_exception bytea
);


--
-- Name: deletion_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE deletion_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: deletions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE deletions (
    id tech_id NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    reason description_2000 NOT NULL
);


--
-- Name: dstpt_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE dstpt_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: entity_operations_log; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE entity_operations_log (
    id tech_id NOT NULL,
    registration_id tech_id NOT NULL
);


--
-- Name: entity_operations_log_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE entity_operations_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: etpt_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE etpt_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: event_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE event_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: events; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE events (
    id tech_id NOT NULL,
    event_type event_type NOT NULL,
    description text_value,
    reason description_2000,
    pers_id_registerer tech_id NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    entity_type character varying(80) NOT NULL,
    identifiers text_value NOT NULL,
    content text_value,
    exac_id tech_id,
    CONSTRAINT evnt_et_enum_ck CHECK (((entity_type)::text = ANY ((ARRAY['ATTACHMENT'::character varying, 'DATASET'::character varying, 'EXPERIMENT'::character varying, 'SPACE'::character varying, 'MATERIAL'::character varying, 'PROJECT'::character varying, 'PROPERTY_TYPE'::character varying, 'SAMPLE'::character varying, 'VOCABULARY'::character varying, 'AUTHORIZATION_GROUP'::character varying, 'METAPROJECT'::character varying])::text[])))
);


--
-- Name: experiment_code_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE experiment_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: experiment_properties_history; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE experiment_properties_history (
    id tech_id NOT NULL,
    expe_id tech_id NOT NULL,
    etpt_id tech_id NOT NULL,
    value text_value,
    vocabulary_term identifier,
    material identifier,
    sample identifier,
    pers_id_author tech_id NOT NULL,
    valid_from_timestamp time_stamp NOT NULL,
    valid_until_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT exprh_ck CHECK ((((value IS NOT NULL) AND (vocabulary_term IS NULL) AND (material IS NULL) AND (sample IS NULL)) OR ((value IS NULL) AND (vocabulary_term IS NOT NULL) AND (material IS NULL) AND (sample IS NULL)) OR ((value IS NULL) AND (vocabulary_term IS NULL) AND (material IS NOT NULL) AND (sample IS NULL)) OR ((value IS NULL) AND (vocabulary_term IS NULL) AND (material IS NULL) AND (sample IS NOT NULL))))
);


--
-- Name: experiment_relationships_history; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE experiment_relationships_history (
    id tech_id NOT NULL,
    main_expe_id tech_id NOT NULL,
    relation_type text_value,
    samp_id tech_id,
    data_id tech_id,
    entity_perm_id text_value,
    pers_id_author tech_id,
    valid_from_timestamp time_stamp NOT NULL,
    valid_until_timestamp time_stamp,
    proj_id tech_id
);


--
-- Name: experiment_history_view; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW experiment_history_view AS
 SELECT (2 * (experiment_relationships_history.id)::bigint) AS id,
    experiment_relationships_history.main_expe_id,
    experiment_relationships_history.relation_type,
    experiment_relationships_history.proj_id,
    experiment_relationships_history.samp_id,
    experiment_relationships_history.data_id,
    experiment_relationships_history.entity_perm_id,
    NULL::bigint AS etpt_id,
    NULL::text AS value,
    NULL::character varying AS vocabulary_term,
    NULL::character varying AS material,
    NULL::character varying AS sample,
    experiment_relationships_history.pers_id_author,
    experiment_relationships_history.valid_from_timestamp,
    experiment_relationships_history.valid_until_timestamp
   FROM experiment_relationships_history
  WHERE (experiment_relationships_history.valid_until_timestamp IS NOT NULL)
UNION
 SELECT ((2 * (experiment_properties_history.id)::bigint) + 1) AS id,
    experiment_properties_history.expe_id AS main_expe_id,
    NULL::text AS relation_type,
    NULL::bigint AS proj_id,
    NULL::bigint AS samp_id,
    NULL::bigint AS data_id,
    NULL::text AS entity_perm_id,
    experiment_properties_history.etpt_id,
    experiment_properties_history.value,
    experiment_properties_history.vocabulary_term,
    experiment_properties_history.material,
    experiment_properties_history.sample,
    experiment_properties_history.pers_id_author,
    experiment_properties_history.valid_from_timestamp,
    experiment_properties_history.valid_until_timestamp
   FROM experiment_properties_history;


--
-- Name: experiment_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE experiment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: experiment_properties; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE experiment_properties (
    id tech_id NOT NULL,
    expe_id tech_id NOT NULL,
    etpt_id tech_id NOT NULL,
    value text_value,
    cvte_id tech_id,
    mate_prop_id tech_id,
    samp_prop_id tech_id,
    pers_id_registerer tech_id NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pers_id_author tech_id NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    expe_frozen boolean_char DEFAULT false NOT NULL,
    tsvector_document tsvector NOT NULL,
    CONSTRAINT expr_ck CHECK ((((value IS NOT NULL) AND (cvte_id IS NULL) AND (mate_prop_id IS NULL) AND (samp_prop_id IS NULL)) OR ((value IS NULL) AND (cvte_id IS NOT NULL) AND (mate_prop_id IS NULL) AND (samp_prop_id IS NULL)) OR ((value IS NULL) AND (cvte_id IS NULL) AND (mate_prop_id IS NOT NULL) AND (samp_prop_id IS NULL)) OR ((value IS NULL) AND (cvte_id IS NULL) AND (mate_prop_id IS NULL) AND (samp_prop_id IS NOT NULL))))
);


--
-- Name: experiment_property_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE experiment_property_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: experiment_relationships_history_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE experiment_relationships_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: experiment_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE experiment_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: experiment_type_property_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE experiment_type_property_types (
    id tech_id NOT NULL,
    exty_id tech_id NOT NULL,
    prty_id tech_id NOT NULL,
    is_mandatory boolean_char DEFAULT false NOT NULL,
    is_managed_internally boolean_char DEFAULT false NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    ordinal ordinal_int NOT NULL,
    section description_2000,
    script_id tech_id,
    is_shown_edit boolean_char DEFAULT true NOT NULL,
    show_raw_value boolean_char DEFAULT false NOT NULL
);


--
-- Name: experiment_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE experiment_types (
    id tech_id NOT NULL,
    code code NOT NULL,
    description description_2000,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    validation_script_id tech_id
);


--
-- Name: experiments_all; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE experiments_all (
    id tech_id NOT NULL,
    perm_id code NOT NULL,
    code code NOT NULL,
    exty_id tech_id NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    proj_id tech_id NOT NULL,
    del_id tech_id,
    orig_del tech_id,
    is_public boolean_char DEFAULT false NOT NULL,
    pers_id_modifier tech_id,
    version integer DEFAULT 0,
    frozen boolean_char DEFAULT false NOT NULL,
    frozen_for_samp boolean_char DEFAULT false NOT NULL,
    frozen_for_data boolean_char DEFAULT false NOT NULL,
    proj_frozen boolean_char DEFAULT false NOT NULL,
    tsvector_document tsvector NOT NULL
);


--
-- Name: experiments; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW experiments AS
 SELECT experiments_all.id,
    experiments_all.perm_id,
    experiments_all.code,
    experiments_all.exty_id,
    experiments_all.pers_id_registerer,
    experiments_all.pers_id_modifier,
    experiments_all.registration_timestamp,
    experiments_all.modification_timestamp,
    experiments_all.proj_id,
    experiments_all.proj_frozen,
    experiments_all.del_id,
    experiments_all.orig_del,
    experiments_all.is_public,
    experiments_all.version,
    experiments_all.frozen,
    experiments_all.frozen_for_samp,
    experiments_all.frozen_for_data,
    experiments_all.tsvector_document
   FROM experiments_all
  WHERE (experiments_all.del_id IS NULL);


--
-- Name: experiments_deleted; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW experiments_deleted AS
 SELECT experiments_all.id,
    experiments_all.perm_id,
    experiments_all.code,
    experiments_all.exty_id,
    experiments_all.pers_id_registerer,
    experiments_all.pers_id_modifier,
    experiments_all.registration_timestamp,
    experiments_all.modification_timestamp,
    experiments_all.proj_id,
    experiments_all.del_id,
    experiments_all.orig_del,
    experiments_all.is_public,
    experiments_all.version
   FROM experiments_all
  WHERE (experiments_all.del_id IS NOT NULL);


--
-- Name: external_data; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE external_data (
    id tech_id NOT NULL,
    share_id code,
    size ordinal_int,
    location character varying(1024) NOT NULL,
    ffty_id tech_id NOT NULL,
    loty_id tech_id NOT NULL,
    cvte_id_stor_fmt tech_id NOT NULL,
    is_complete boolean_char_or_unknown DEFAULT 'U'::bpchar NOT NULL,
    cvte_id_store tech_id,
    status archiving_status DEFAULT 'AVAILABLE'::character varying NOT NULL,
    present_in_archive boolean_char DEFAULT false,
    speed_hint integer DEFAULT '-50'::integer NOT NULL,
    storage_confirmation boolean_char DEFAULT false NOT NULL,
    h5_folders boolean_char NOT NULL,
    h5ar_folders boolean_char NOT NULL,
    archiving_requested boolean_char DEFAULT false NOT NULL
);


--
-- Name: external_data_management_system_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE external_data_management_system_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: external_data_management_systems; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE external_data_management_systems (
    id tech_id NOT NULL,
    code code NOT NULL,
    label text_value,
    address text_value NOT NULL,
    address_type edms_address_type NOT NULL
);


--
-- Name: file_format_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE file_format_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: file_format_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE file_format_types (
    id tech_id NOT NULL,
    code code NOT NULL,
    description description_2000
);


--
-- Name: filter_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE filter_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: filters; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE filters (
    id tech_id NOT NULL,
    name character varying(200) NOT NULL,
    description description_2000,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    expression text NOT NULL,
    is_public boolean NOT NULL,
    grid_id character varying(200) NOT NULL
);


--
-- Name: grid_custom_columns; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE grid_custom_columns (
    id tech_id NOT NULL,
    code character varying(200) NOT NULL,
    label column_label NOT NULL,
    description description_2000,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    expression grid_expression NOT NULL,
    is_public boolean NOT NULL,
    grid_id grid_id NOT NULL
);


--
-- Name: grid_custom_columns_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE grid_custom_columns_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: link_data; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE link_data (
    id tech_id NOT NULL,
    data_frozen boolean_char DEFAULT false NOT NULL
);


--
-- Name: locator_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE locator_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: locator_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE locator_types (
    id tech_id NOT NULL,
    code code NOT NULL,
    description description_2000
);


--
-- Name: material_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE material_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: material_properties; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE material_properties (
    id tech_id NOT NULL,
    mate_id tech_id NOT NULL,
    mtpt_id tech_id NOT NULL,
    value text_value,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pers_id_author tech_id NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    pers_id_registerer tech_id NOT NULL,
    cvte_id tech_id,
    mate_prop_id tech_id,
    tsvector_document tsvector NOT NULL,
    CONSTRAINT mapr_ck CHECK ((((value IS NOT NULL) AND (cvte_id IS NULL) AND (mate_prop_id IS NULL)) OR ((value IS NULL) AND (cvte_id IS NOT NULL) AND (mate_prop_id IS NULL)) OR ((value IS NULL) AND (cvte_id IS NULL) AND (mate_prop_id IS NOT NULL))))
);


--
-- Name: material_properties_history; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE material_properties_history (
    id tech_id NOT NULL,
    mate_id tech_id NOT NULL,
    mtpt_id tech_id NOT NULL,
    value text_value,
    vocabulary_term identifier,
    material identifier,
    pers_id_author tech_id NOT NULL,
    valid_from_timestamp time_stamp NOT NULL,
    valid_until_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT maprh_ck CHECK ((((value IS NOT NULL) AND (vocabulary_term IS NULL) AND (material IS NULL)) OR ((value IS NULL) AND (vocabulary_term IS NOT NULL) AND (material IS NULL)) OR ((value IS NULL) AND (vocabulary_term IS NULL) AND (material IS NOT NULL))))
);


--
-- Name: material_property_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE material_property_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: material_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE material_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: material_type_property_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE material_type_property_types (
    id tech_id NOT NULL,
    maty_id tech_id NOT NULL,
    prty_id tech_id NOT NULL,
    is_mandatory boolean_char DEFAULT false NOT NULL,
    is_managed_internally boolean_char DEFAULT false NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    ordinal ordinal_int NOT NULL,
    section description_2000,
    script_id tech_id,
    is_shown_edit boolean_char DEFAULT true NOT NULL,
    show_raw_value boolean_char DEFAULT false NOT NULL
);


--
-- Name: material_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE material_types (
    id tech_id NOT NULL,
    code code NOT NULL,
    description description_2000,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    validation_script_id tech_id
);


--
-- Name: materials; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE materials (
    id tech_id NOT NULL,
    code code NOT NULL,
    maty_id tech_id NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    tsvector_document tsvector NOT NULL
);


--
-- Name: metaproject_assignment_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE metaproject_assignment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: metaproject_assignments_all; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE metaproject_assignments_all (
    id tech_id NOT NULL,
    mepr_id tech_id NOT NULL,
    expe_id tech_id,
    samp_id tech_id,
    data_id tech_id,
    mate_id tech_id,
    del_id tech_id,
    creation_date time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT metaproject_assignments_all_check_nn CHECK ((((expe_id IS NOT NULL) AND (samp_id IS NULL) AND (data_id IS NULL) AND (mate_id IS NULL)) OR ((expe_id IS NULL) AND (samp_id IS NOT NULL) AND (data_id IS NULL) AND (mate_id IS NULL)) OR ((expe_id IS NULL) AND (samp_id IS NULL) AND (data_id IS NOT NULL) AND (mate_id IS NULL)) OR ((expe_id IS NULL) AND (samp_id IS NULL) AND (data_id IS NULL) AND (mate_id IS NOT NULL))))
);


--
-- Name: metaproject_assignments; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW metaproject_assignments AS
 SELECT metaproject_assignments_all.id,
    metaproject_assignments_all.mepr_id,
    metaproject_assignments_all.expe_id,
    metaproject_assignments_all.samp_id,
    metaproject_assignments_all.data_id,
    metaproject_assignments_all.mate_id,
    metaproject_assignments_all.del_id,
    metaproject_assignments_all.creation_date
   FROM metaproject_assignments_all
  WHERE (metaproject_assignments_all.del_id IS NULL);


--
-- Name: metaproject_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE metaproject_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: metaprojects; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE metaprojects (
    id tech_id NOT NULL,
    name code NOT NULL,
    description description_2000,
    owner tech_id NOT NULL,
    private boolean_char DEFAULT true NOT NULL,
    creation_date time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL
);


--
-- Name: mtpt_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE mtpt_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: operation_executions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE operation_executions (
    id tech_id NOT NULL,
    code code NOT NULL,
    state operation_execution_state DEFAULT 'NEW'::character varying NOT NULL,
    owner tech_id NOT NULL,
    description text_value,
    notification text_value,
    availability operation_execution_availability DEFAULT 'AVAILABLE'::character varying NOT NULL,
    availability_time bigint DEFAULT 1 NOT NULL,
    summary_operations text_value,
    summary_progress text_value,
    summary_error text_value,
    summary_results text_value,
    summary_availability operation_execution_availability DEFAULT 'AVAILABLE'::character varying NOT NULL,
    summary_availability_time bigint DEFAULT 1 NOT NULL,
    details_path character varying(1000),
    details_availability operation_execution_availability DEFAULT 'AVAILABLE'::character varying NOT NULL,
    details_availability_time bigint DEFAULT 1 NOT NULL,
    creation_date time_stamp_dfl NOT NULL,
    start_date time_stamp,
    finish_date time_stamp,
    CONSTRAINT operation_executions_state_finish_date_check CHECK (((((state)::text = ANY ((ARRAY['NEW'::character varying, 'SCHEDULED'::character varying, 'RUNNING'::character varying])::text[])) AND (finish_date IS NULL)) OR (((state)::text = ANY ((ARRAY['FINISHED'::character varying, 'FAILED'::character varying])::text[])) AND (finish_date IS NOT NULL)))),
    CONSTRAINT operation_executions_state_start_date_check CHECK (((((state)::text = ANY ((ARRAY['NEW'::character varying, 'SCHEDULED'::character varying])::text[])) AND (start_date IS NULL)) OR (((state)::text = ANY ((ARRAY['RUNNING'::character varying, 'FINISHED'::character varying, 'FAILED'::character varying])::text[])) AND (start_date IS NOT NULL))))
);


--
-- Name: operation_executions_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE operation_executions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: perm_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE perm_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: person_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE person_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: persons; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE persons (
    id tech_id NOT NULL,
    first_name character varying(30),
    last_name character varying(30),
    user_id user_id NOT NULL,
    email object_name,
    space_id tech_id,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pers_id_registerer tech_id,
    display_settings file,
    is_active boolean DEFAULT true
);


--
-- Name: post_registration_dataset_queue; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE post_registration_dataset_queue (
    id tech_id NOT NULL,
    ds_id tech_id NOT NULL
);


--
-- Name: post_registration_dataset_queue_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE post_registration_dataset_queue_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: project_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE project_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: project_relationships_history; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE project_relationships_history (
    id tech_id NOT NULL,
    main_proj_id tech_id NOT NULL,
    relation_type text_value,
    expe_id tech_id,
    space_id tech_id,
    entity_perm_id text_value,
    pers_id_author tech_id,
    valid_from_timestamp time_stamp NOT NULL,
    valid_until_timestamp time_stamp
);


--
-- Name: project_relationships_history_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE project_relationships_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: projects; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE projects (
    id tech_id NOT NULL,
    perm_id code NOT NULL,
    code code NOT NULL,
    space_id tech_id NOT NULL,
    pers_id_leader tech_id,
    description text_value,
    pers_id_registerer tech_id NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    pers_id_modifier tech_id,
    version integer DEFAULT 0,
    frozen boolean_char DEFAULT false NOT NULL,
    frozen_for_exp boolean_char DEFAULT false NOT NULL,
    frozen_for_samp boolean_char DEFAULT false NOT NULL,
    space_frozen boolean_char DEFAULT false NOT NULL
);


--
-- Name: property_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE property_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: property_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE property_types (
    id tech_id NOT NULL,
    code code NOT NULL,
    description description_2000 NOT NULL,
    label column_label NOT NULL,
    daty_id tech_id NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    covo_id tech_id,
    is_managed_internally boolean_char DEFAULT false NOT NULL,
    maty_prop_id tech_id,
    saty_prop_id tech_id,
    schema text_value,
    transformation text_value,
    meta_data jsonb
);


--
-- Name: queries; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE queries (
    id tech_id NOT NULL,
    name character varying(200) NOT NULL,
    description description_2000,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    expression text NOT NULL,
    is_public boolean NOT NULL,
    query_type query_type NOT NULL,
    entity_type_code code,
    db_key code DEFAULT '1'::character varying NOT NULL
);


--
-- Name: query_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE query_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: relationship_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE relationship_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: relationship_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE relationship_types (
    id tech_id NOT NULL,
    code code NOT NULL,
    label column_label,
    parent_label column_label,
    child_label column_label,
    description description_2000,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    is_managed_internally boolean_char DEFAULT false NOT NULL
);


--
-- Name: role_assignment_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE role_assignment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: role_assignments; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE role_assignments (
    id tech_id NOT NULL,
    role_code authorization_role NOT NULL,
    space_id tech_id,
    project_id tech_id,
    pers_id_grantee tech_id,
    ag_id_grantee tech_id,
    pers_id_registerer tech_id NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT roas_ag_pers_arc_ck CHECK ((((ag_id_grantee IS NOT NULL) AND (pers_id_grantee IS NULL)) OR ((ag_id_grantee IS NULL) AND (pers_id_grantee IS NOT NULL)))),
    CONSTRAINT roas_space_project_ck CHECK (((space_id IS NULL) OR (project_id IS NULL)))
);


--
-- Name: sample_code_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE sample_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: sample_properties_history; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE sample_properties_history (
    id tech_id NOT NULL,
    samp_id tech_id NOT NULL,
    stpt_id tech_id NOT NULL,
    value text_value,
    vocabulary_term identifier,
    material identifier,
    sample identifier,
    pers_id_author tech_id NOT NULL,
    valid_from_timestamp time_stamp NOT NULL,
    valid_until_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT saprh_ck CHECK ((((value IS NOT NULL) AND (vocabulary_term IS NULL) AND (material IS NULL) AND (sample IS NULL)) OR ((value IS NULL) AND (vocabulary_term IS NOT NULL) AND (material IS NULL) AND (sample IS NULL)) OR ((value IS NULL) AND (vocabulary_term IS NULL) AND (material IS NOT NULL) AND (sample IS NULL)) OR ((value IS NULL) AND (vocabulary_term IS NULL) AND (material IS NULL) AND (sample IS NOT NULL))))
);


--
-- Name: sample_relationships_history; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE sample_relationships_history (
    id tech_id NOT NULL,
    main_samp_id tech_id NOT NULL,
    relation_type text_value,
    expe_id tech_id,
    samp_id tech_id,
    data_id tech_id,
    entity_perm_id text_value,
    pers_id_author tech_id,
    valid_from_timestamp time_stamp NOT NULL,
    valid_until_timestamp time_stamp,
    space_id tech_id,
    proj_id tech_id,
    annotations jsonb
);


--
-- Name: sample_history_view; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW sample_history_view AS
 SELECT (2 * (sample_relationships_history.id)::bigint) AS id,
    sample_relationships_history.main_samp_id,
    sample_relationships_history.relation_type,
    sample_relationships_history.space_id,
    sample_relationships_history.expe_id,
    sample_relationships_history.samp_id,
    sample_relationships_history.proj_id,
    sample_relationships_history.data_id,
    sample_relationships_history.entity_perm_id,
    sample_relationships_history.annotations,
    NULL::bigint AS stpt_id,
    NULL::text AS value,
    NULL::character varying AS vocabulary_term,
    NULL::character varying AS material,
    NULL::character varying AS sample,
    sample_relationships_history.pers_id_author,
    sample_relationships_history.valid_from_timestamp,
    sample_relationships_history.valid_until_timestamp
   FROM sample_relationships_history
  WHERE (sample_relationships_history.valid_until_timestamp IS NOT NULL)
UNION
 SELECT ((2 * (sample_properties_history.id)::bigint) + 1) AS id,
    sample_properties_history.samp_id AS main_samp_id,
    NULL::text AS relation_type,
    NULL::bigint AS space_id,
    NULL::bigint AS expe_id,
    NULL::bigint AS samp_id,
    NULL::bigint AS proj_id,
    NULL::bigint AS data_id,
    NULL::text AS entity_perm_id,
    NULL::jsonb AS annotations,
    sample_properties_history.stpt_id,
    sample_properties_history.value,
    sample_properties_history.vocabulary_term,
    sample_properties_history.material,
    sample_properties_history.sample,
    sample_properties_history.pers_id_author,
    sample_properties_history.valid_from_timestamp,
    sample_properties_history.valid_until_timestamp
   FROM sample_properties_history;


--
-- Name: sample_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE sample_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: sample_properties; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE sample_properties (
    id tech_id NOT NULL,
    samp_id tech_id NOT NULL,
    stpt_id tech_id NOT NULL,
    value text_value,
    cvte_id tech_id,
    mate_prop_id tech_id,
    samp_prop_id tech_id,
    pers_id_registerer tech_id NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pers_id_author tech_id NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    samp_frozen boolean_char DEFAULT false NOT NULL,
    tsvector_document tsvector NOT NULL,
    CONSTRAINT sapr_ck CHECK ((((value IS NOT NULL) AND (cvte_id IS NULL) AND (mate_prop_id IS NULL) AND (samp_prop_id IS NULL)) OR ((value IS NULL) AND (cvte_id IS NOT NULL) AND (mate_prop_id IS NULL) AND (samp_prop_id IS NULL)) OR ((value IS NULL) AND (cvte_id IS NULL) AND (mate_prop_id IS NOT NULL) AND (samp_prop_id IS NULL)) OR ((value IS NULL) AND (cvte_id IS NULL) AND (mate_prop_id IS NULL) AND (samp_prop_id IS NOT NULL))))
);


--
-- Name: sample_property_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE sample_property_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: sample_relationship_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE sample_relationship_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: sample_relationships_all; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE sample_relationships_all (
    id tech_id NOT NULL,
    sample_id_parent tech_id NOT NULL,
    relationship_id tech_id NOT NULL,
    sample_id_child tech_id NOT NULL,
    del_id tech_id,
    pers_id_author tech_id,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    parent_frozen boolean_char DEFAULT false NOT NULL,
    child_frozen boolean_char DEFAULT false NOT NULL,
    child_annotations jsonb,
    parent_annotations jsonb
);


--
-- Name: sample_relationships; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW sample_relationships AS
 SELECT sample_relationships_all.id,
    sample_relationships_all.sample_id_parent,
    sample_relationships_all.parent_frozen,
    sample_relationships_all.relationship_id,
    sample_relationships_all.sample_id_child,
    sample_relationships_all.child_frozen,
    sample_relationships_all.del_id,
    sample_relationships_all.pers_id_author,
    sample_relationships_all.registration_timestamp,
    sample_relationships_all.modification_timestamp,
    sample_relationships_all.child_annotations,
    sample_relationships_all.parent_annotations
   FROM sample_relationships_all
  WHERE (sample_relationships_all.del_id IS NULL);


--
-- Name: sample_relationships_history_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE sample_relationships_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: sample_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE sample_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: sample_type_property_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE sample_type_property_types (
    id tech_id NOT NULL,
    saty_id tech_id NOT NULL,
    prty_id tech_id NOT NULL,
    is_mandatory boolean_char DEFAULT false NOT NULL,
    is_managed_internally boolean_char DEFAULT false NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    is_displayed boolean_char DEFAULT true NOT NULL,
    ordinal ordinal_int NOT NULL,
    section description_2000,
    script_id tech_id,
    is_shown_edit boolean_char DEFAULT true NOT NULL,
    show_raw_value boolean_char DEFAULT false NOT NULL
);


--
-- Name: sample_types; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE sample_types (
    id tech_id NOT NULL,
    code code NOT NULL,
    description description_2000,
    is_listable boolean_char DEFAULT true NOT NULL,
    generated_from_depth integer DEFAULT 0 NOT NULL,
    part_of_depth integer DEFAULT 0 NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    is_auto_generated_code boolean_char DEFAULT false NOT NULL,
    generated_code_prefix code DEFAULT 'S'::character varying NOT NULL,
    is_subcode_unique boolean_char DEFAULT false NOT NULL,
    inherit_properties boolean_char DEFAULT false NOT NULL,
    validation_script_id tech_id,
    show_parent_metadata boolean_char DEFAULT false NOT NULL
);


--
-- Name: samples_all; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE samples_all (
    id tech_id NOT NULL,
    perm_id code NOT NULL,
    sample_identifier sample_identifier,
    code code NOT NULL,
    expe_id tech_id,
    saty_id tech_id NOT NULL,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    modification_timestamp time_stamp DEFAULT CURRENT_TIMESTAMP,
    pers_id_registerer tech_id NOT NULL,
    del_id tech_id,
    orig_del tech_id,
    space_id tech_id,
    samp_id_part_of tech_id,
    pers_id_modifier tech_id,
    code_unique_check character varying(300),
    subcode_unique_check character varying(300),
    version integer DEFAULT 0,
    proj_id tech_id,
    frozen boolean_char DEFAULT false NOT NULL,
    frozen_for_comp boolean_char DEFAULT false NOT NULL,
    frozen_for_children boolean_char DEFAULT false NOT NULL,
    frozen_for_parents boolean_char DEFAULT false NOT NULL,
    frozen_for_data boolean_char DEFAULT false NOT NULL,
    space_frozen boolean_char DEFAULT false NOT NULL,
    proj_frozen boolean_char DEFAULT false NOT NULL,
    expe_frozen boolean_char DEFAULT false NOT NULL,
    cont_frozen boolean_char DEFAULT false NOT NULL,
    tsvector_document tsvector NOT NULL
);


--
-- Name: samples; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW samples AS
 SELECT samples_all.id,
    samples_all.perm_id,
    samples_all.code,
    samples_all.proj_id,
    samples_all.proj_frozen,
    samples_all.expe_id,
    samples_all.expe_frozen,
    samples_all.saty_id,
    samples_all.registration_timestamp,
    samples_all.modification_timestamp,
    samples_all.pers_id_registerer,
    samples_all.pers_id_modifier,
    samples_all.del_id,
    samples_all.orig_del,
    samples_all.space_id,
    samples_all.space_frozen,
    samples_all.samp_id_part_of,
    samples_all.cont_frozen,
    samples_all.version,
    samples_all.frozen,
    samples_all.frozen_for_comp,
    samples_all.frozen_for_children,
    samples_all.frozen_for_parents,
    samples_all.frozen_for_data,
    samples_all.tsvector_document,
    samples_all.sample_identifier
   FROM samples_all
  WHERE (samples_all.del_id IS NULL);


--
-- Name: samples_deleted; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW samples_deleted AS
 SELECT samples_all.id,
    samples_all.perm_id,
    samples_all.code,
    samples_all.expe_id,
    samples_all.saty_id,
    samples_all.registration_timestamp,
    samples_all.modification_timestamp,
    samples_all.pers_id_registerer,
    samples_all.pers_id_modifier,
    samples_all.del_id,
    samples_all.orig_del,
    samples_all.space_id,
    samples_all.proj_id,
    samples_all.samp_id_part_of,
    samples_all.version
   FROM samples_all
  WHERE (samples_all.del_id IS NOT NULL);


--
-- Name: script_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE script_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: scripts; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE scripts (
    id tech_id NOT NULL,
    name character varying(200) NOT NULL,
    script_type script_type NOT NULL,
    description description_2000,
    script text_value,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    entity_kind entity_kind,
    plugin_type plugin_type DEFAULT 'JYTHON'::character varying NOT NULL,
    is_available boolean_char DEFAULT true NOT NULL,
    CONSTRAINT script_nn_ck CHECK ((((plugin_type)::text = 'PREDEPLOYED'::text) OR (script IS NOT NULL)))
);


--
-- Name: semantic_annotation_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE semantic_annotation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: semantic_annotations; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE semantic_annotations (
    id tech_id NOT NULL,
    perm_id code NOT NULL,
    saty_id tech_id,
    stpt_id tech_id,
    prty_id tech_id,
    predicate_ontology_id text,
    predicate_ontology_version text,
    predicate_accession_id text,
    descriptor_ontology_id text,
    descriptor_ontology_version text,
    descriptor_accession_id text,
    creation_date time_stamp_dfl NOT NULL,
    CONSTRAINT semantic_annotations_ssp_ck CHECK ((((saty_id IS NOT NULL) AND (stpt_id IS NULL) AND (prty_id IS NULL)) OR ((saty_id IS NULL) AND (stpt_id IS NOT NULL) AND (prty_id IS NULL)) OR ((saty_id IS NULL) AND (stpt_id IS NULL) AND (prty_id IS NOT NULL))))
);


--
-- Name: space_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE space_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: spaces; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE spaces (
    id tech_id NOT NULL,
    code code NOT NULL,
    description description_2000,
    registration_timestamp time_stamp_dfl DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pers_id_registerer tech_id NOT NULL,
    frozen boolean_char DEFAULT false NOT NULL,
    frozen_for_proj boolean_char DEFAULT false NOT NULL,
    frozen_for_samp boolean_char DEFAULT false NOT NULL
);


--
-- Name: stpt_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE stpt_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Data for Name: attachment_contents; Type: TABLE DATA; Schema: public; Owner: -
--

COPY attachment_contents (id, value) FROM stdin;
\.


--
-- Data for Name: attachments; Type: TABLE DATA; Schema: public; Owner: -
--

COPY attachments (id, expe_id, samp_id, proj_id, exac_id, file_name, registration_timestamp, version, pers_id_registerer, title, description, proj_frozen, expe_frozen, samp_frozen) FROM stdin;
\.


--
-- Data for Name: authorization_group_persons; Type: TABLE DATA; Schema: public; Owner: -
--

COPY authorization_group_persons (ag_id, pers_id) FROM stdin;
\.


--
-- Data for Name: authorization_groups; Type: TABLE DATA; Schema: public; Owner: -
--

COPY authorization_groups (id, code, description, registration_timestamp, pers_id_registerer, modification_timestamp) FROM stdin;
\.


--
-- Data for Name: content_copies; Type: TABLE DATA; Schema: public; Owner: -
--

COPY content_copies (id, location_type, data_id, edms_id, external_code, path, git_commit_hash, git_repository_id, location_unique_check, pers_id_registerer, registration_timestamp, data_frozen) FROM stdin;
\.


--
-- Data for Name: controlled_vocabularies; Type: TABLE DATA; Schema: public; Owner: -
--

COPY controlled_vocabularies (id, code, description, registration_timestamp, pers_id_registerer, is_managed_internally, modification_timestamp, is_chosen_from_list, source_uri) FROM stdin;
1	STORAGE_FORMAT	The on-disk storage format of a data set	2020-09-30 09:00:55.015791+02	1	t	2020-09-30 09:00:55.015791+02	t	\N
2	AGILENT_KIT	\N	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.065+02	t	\N
3	ALIGNMENT_SOFTWARE	If an alignment is requested, which software package should be use?	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.073+02	t	\N
4	CASAVA_VERSION	Post analyzing software	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.085+02	t	\N
5	CLUSTER_GENERATION_KIT_VERSION	Version of the Cluster Generation Kit	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.092+02	t	\N
6	CLUSTER_STATION	Cluster Station	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.104+02	t	\N
7	CONTROL_LANE	\N	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.111+02	t	\N
8	END_TYPE	Sequencing method	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.123+02	t	\N
9	EXPERIMENT_DESIGN	General Intent	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.129+02	t	\N
10	INDEX1	Index 1 for Illumina Indexing	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.155+02	t	\N
11	INDEX2	Index 2 for Illumina Dual Indexing	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.235+02	t	\N
12	KIT	Illumina Kit used for preparation	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.246+02	t	\N
13	MACS_VERSION	Used MACS version for Peak Calling	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.258+02	t	\N
14	MISMATCH_IN_INDEX	Mismatch in Index allowed	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.262+02	t	\N
15	NANO_DROP	Device for measuring the total amount of genetic material contained in the probe	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.265+02	t	\N
16	NCBI_TAXONOMY	\N	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.273+02	t	http://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?id=$term$
17	PIPELINE_VERSION	With which pipeline version has the data been analyzed?	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.302+02	t	\N
18	SAMPLE_TYPE	Type of sample delivered by the customer	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.317+02	t	\N
19	SBS_SEQUENCING_KIT_VERSION	Version of the Sequencing by Synthesis (SBS) Kit	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.33+02	t	\N
20	SEQUENCER	Which Sequencer was used?	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.337+02	t	\N
21	SEQUENCING_APPLICATION	Type of experiment of the High Throughput Sequencing applications	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.341+02	t	\N
22	YES_NO	Just offers YES or NO	2020-09-30 09:01:07.087475+02	1	f	2020-09-30 09:01:11.347+02	t	\N
23	LSR_FORTESSA_PLATE_GEOMETRY	Plate geometries for the BD LSR Fortessa Flow Cytometer.	2020-09-30 09:01:15.647131+02	1	f	2020-09-30 09:01:19.461+02	t	\N
24	CYTOFLEX_S_PLATE_GEOMETRY	Plate geometries for the BC CytoFLEX S Flow Cytometer.	2020-09-30 09:01:15.647131+02	1	f	2020-09-30 09:01:19.466+02	t	\N
25	DS1_EXPERIMENTAL_READOUT	Experimental readout used	2020-09-30 09:02:18.076885+02	3	f	2020-09-30 09:02:18.077+02	t	\N
26	DS1_DETECTION	Protein detection system	2020-09-30 09:02:18.099713+02	3	f	2020-09-30 09:02:18.1+02	t	\N
27	DS1_TREATMENT_TYPE	Type of treatment of a biological sample.	2020-09-30 09:02:18.110371+02	3	f	2020-09-30 09:02:18.11+02	t	\N
28	DS1_CELL_TYPE	Cell type	2020-09-30 09:02:18.119458+02	3	f	2020-09-30 09:02:18.119+02	t	\N
29	DS1_ORGANISM	Organism	2020-09-30 09:02:18.130651+02	3	f	2020-09-30 09:02:18.13+02	t	\N
30	DS1_RNA_TYPE	Type of RNA in terms of function: mimic of RNAi or inhibitor of RNAi	2020-09-30 09:02:18.149309+02	3	f	2020-09-30 09:02:18.149+02	t	\N
31	DS1_ALIGNMENT_SOFTWARE	If an alignment is requested, which software package should be use?	2020-09-30 09:02:18.165227+02	3	f	2020-09-30 09:02:18.165+02	t	\N
32	DS1_SEQUENCER	Which Sequencer was used?	2020-09-30 09:02:18.178742+02	3	f	2020-09-30 09:02:18.178+02	t	\N
\.


--
-- Data for Name: controlled_vocabulary_terms; Type: TABLE DATA; Schema: public; Owner: -
--

COPY controlled_vocabulary_terms (id, code, registration_timestamp, covo_id, pers_id_registerer, label, description, ordinal, is_official) FROM stdin;
1	PROPRIETARY	2020-09-30 09:00:55.015791+02	1	1	\N	\N	1	t
2	BDS_DIRECTORY	2020-09-30 09:00:55.015791+02	1	1	\N	\N	2	t
3	AGILENT_DNA_KIT_1000	2020-09-30 09:01:11.065+02	2	1	\N	\N	1	t
4	AGILENT_HIGH_SENSITIVITY_DNA_KIT	2020-09-30 09:01:11.066+02	2	1	\N	\N	2	t
5	NOT_NEEDED	2020-09-30 09:01:11.073+02	3	1	\N	\N	1	t
6	ELAND	2020-09-30 09:01:11.074+02	3	1	\N	\N	2	t
7	MAQ	2020-09-30 09:01:11.074+02	3	1	\N	\N	3	t
8	BWA	2020-09-30 09:01:11.074+02	3	1	\N	\N	4	t
9	NOVOALIGN	2020-09-30 09:01:11.074+02	3	1	\N	\N	5	t
10	BOWTIE	2020-09-30 09:01:11.075+02	3	1	\N	\N	6	t
11	1.8	2020-09-30 09:01:11.086+02	4	1	\N	\N	1	t
12	1.7	2020-09-30 09:01:11.086+02	4	1	\N	\N	2	t
13	TRUSEQ_CBOT_HS_V3	2020-09-30 09:01:11.092+02	5	1	TruSeq cBot-HS v3	\N	1	t
14	TRUSEQ_CBOT_HS_V2.5	2020-09-30 09:01:11.092+02	5	1	TruSeq cBot-HS v2.5	\N	2	t
15	TRUSEQ_CBOT_GA_V2	2020-09-30 09:01:11.093+02	5	1	TrueSeq cBot-GA v2	\N	3	t
16	TRUSEQ_CS_GA_V5	2020-09-30 09:01:11.093+02	5	1	TrueSeq CS-GA v5	\N	4	t
17	V5	2020-09-30 09:01:11.094+02	5	1	\N	\N	5	t
18	V4	2020-09-30 09:01:11.094+02	5	1	\N	\N	6	t
19	V2	2020-09-30 09:01:11.095+02	5	1	\N	\N	7	t
20	CBOT	2020-09-30 09:01:11.104+02	6	1	cBot	\N	1	t
21	CBOT2	2020-09-30 09:01:11.105+02	6	1	cBot2	Second cBot	2	t
22	1	2020-09-30 09:01:11.111+02	7	1	\N	\N	1	t
23	2	2020-09-30 09:01:11.112+02	7	1	\N	\N	2	t
24	3	2020-09-30 09:01:11.112+02	7	1	\N	\N	3	t
25	4	2020-09-30 09:01:11.112+02	7	1	\N	\N	4	t
26	5	2020-09-30 09:01:11.112+02	7	1	\N	\N	5	t
27	6	2020-09-30 09:01:11.113+02	7	1	\N	\N	6	t
28	7	2020-09-30 09:01:11.113+02	7	1	\N	\N	7	t
29	8	2020-09-30 09:01:11.113+02	7	1	\N	\N	8	t
30	NONE	2020-09-30 09:01:11.113+02	7	1	\N	\N	9	t
31	0	2020-09-30 09:01:11.114+02	7	1	\N	\N	10	t
32	SINGLE_READ	2020-09-30 09:01:11.123+02	8	1	\N	\N	1	t
33	PAIRED_END	2020-09-30 09:01:11.123+02	8	1	\N	\N	2	t
34	BINDING_SITE_IDENTIFICATION	2020-09-30 09:01:11.129+02	9	1	Binding Site Identification	\N	1	t
35	CHROMATIN_MARKS	2020-09-30 09:01:11.13+02	9	1	Chromatin Marks	\N	2	t
36	COMPARATIVE_GENOMIC_HYBRIDIZATION	2020-09-30 09:01:11.13+02	9	1	Comparative Genomic Hybridization	\N	3	t
37	DIFFERENTIAL_EXPRESSION	2020-09-30 09:01:11.13+02	9	1	Differential Expression	\N	4	t
38	DIFFERENTIAL_SPLICING	2020-09-30 09:01:11.13+02	9	1	Differential Splicing	\N	5	t
39	EXPRESSION	2020-09-30 09:01:11.131+02	9	1	Expression	\N	6	t
40	SEQUENCE_ENRICHMENT	2020-09-30 09:01:11.131+02	9	1	Sequence Enrichment	\N	7	t
41	TRANSCRIPT_IDENTIFICATION	2020-09-30 09:01:11.131+02	9	1	Transcript Identification	\N	8	t
42	OTHER	2020-09-30 09:01:11.131+02	9	1	Other	\N	9	t
43	NONE	2020-09-30 09:01:11.155+02	10	1	 None	No Index	1	t
44	ATCACGA	2020-09-30 09:01:11.155+02	10	1	Index1 ATCACGA	Illumina, Nextera or Scriptseq	2	t
45	CGATGTA	2020-09-30 09:01:11.155+02	10	1	Index2 CGATGTA	Illumina, Nextera or Scriptseq	3	t
46	TTAGGCA	2020-09-30 09:01:11.156+02	10	1	Index3 TTAGGCA	Illumina, Nextera or Scriptseq	4	t
47	TGACCAA	2020-09-30 09:01:11.156+02	10	1	Index4 TGACCAA	Illumina, Nextera or Scriptseq	5	t
48	ACAGTGA	2020-09-30 09:01:11.156+02	10	1	Index5 ACAGTGA	Illumina, Nextera or Scriptseq	6	t
49	GCCAATA	2020-09-30 09:01:11.156+02	10	1	Index6 GCCAATA	Illumina, Nextera or Scriptseq	7	t
50	CAGATCA	2020-09-30 09:01:11.157+02	10	1	Index7 CAGATCA	Illumina, Nextera or Scriptseq	8	t
51	ACTTGAA	2020-09-30 09:01:11.157+02	10	1	Index8 ACTTGAA	Illumina, Nextera or Scriptseq	9	t
52	GATCAGA	2020-09-30 09:01:11.157+02	10	1	Index9 GATCAGA	Illumina, Nextera or Scriptseq	10	t
53	TAGCTTA	2020-09-30 09:01:11.157+02	10	1	Index10 TAGCTTA	Illumina, Nextera or Scriptseq	11	t
54	GGCTACA	2020-09-30 09:01:11.157+02	10	1	Index11 GGCTACA	Illumina, Nextera or Scriptseq	12	t
55	CTTGTAA	2020-09-30 09:01:11.158+02	10	1	Index12 CTTGTAA	Illumina, Nextera or Scriptseq	13	t
56	AGATACA	2020-09-30 09:01:11.158+02	10	1	Index13 AGATAC	Illumina, Nextera or Scriptseq	14	t
57	AGTTCCG	2020-09-30 09:01:11.158+02	10	1	Index14 AGTTCCG	Illumina, Nextera or Scriptseq	15	t
58	ATGTCAG	2020-09-30 09:01:11.158+02	10	1	Index15 ATGTCAG	Illumina, Nextera or Scriptseq	16	t
59	CCGTCCC	2020-09-30 09:01:11.159+02	10	1	Index16 CCGTCCC	Illumina, Nextera or Scriptseq	17	t
60	GTCCGCA	2020-09-30 09:01:11.159+02	10	1	Index18 GTCCGCA	Illumina, Nextera or Scriptseq	18	t
61	GTGAAAC	2020-09-30 09:01:11.159+02	10	1	Index19 GTGAAAC	Illumina, Nextera or Scriptseq	19	t
62	GTGGCCT	2020-09-30 09:01:11.159+02	10	1	Index20 GTGGCCT	Illumina, Nextera or Scriptseq	20	t
63	GTTTCGG	2020-09-30 09:01:11.16+02	10	1	Index21 GTTTCGG	Illumina, Nextera or Scriptseq	21	t
64	CGTACGT	2020-09-30 09:01:11.16+02	10	1	Index22 CGTACGT	Illumina, Nextera or Scriptseq	22	t
65	GAGTGGA	2020-09-30 09:01:11.16+02	10	1	Index23 GAGTGGA	Illumina, Nextera or Scriptseq	23	t
66	ACTGATA	2020-09-30 09:01:11.16+02	10	1	Index25 ACTGATA	Illumina, Nextera or Scriptseq	24	t
67	ATTCCTT	2020-09-30 09:01:11.161+02	10	1	Index27 ATTCCTT	Illumina, Nextera or Scriptseq	25	t
68	TAAGGCGA	2020-09-30 09:01:11.161+02	10	1	Index1 (i7) N701 TAAGGCGA	Nextera DNA	26	t
69	CGTACTAG	2020-09-30 09:01:11.161+02	10	1	Index1 (i7) N702 CGTACTAG	Nextera DNA	27	t
70	AGGCAGAA	2020-09-30 09:01:11.161+02	10	1	Index1 (i7) N703 AGGCAGAA	Nextera DNA	28	t
71	TCCTGAGC	2020-09-30 09:01:11.161+02	10	1	Index1 (i7) N704 TCCTGAGC	Nextera DNA	29	t
72	GGACTCCT	2020-09-30 09:01:11.162+02	10	1	Index1 (i7) N705 GGACTCCT	Nextera DNA	30	t
73	TAGGCATG	2020-09-30 09:01:11.162+02	10	1	Index1 (i7) N706 TAGGCATG	Nextera DNA	31	t
74	CTCTCTAC	2020-09-30 09:01:11.162+02	10	1	Index1 (i7) N707 CTCTCTAC	Nextera DNA	32	t
75	CAGAGAGG	2020-09-30 09:01:11.162+02	10	1	Index1 (i7) N708 CAGAGAGG	Nextera DNA	33	t
76	GCTACGCT	2020-09-30 09:01:11.163+02	10	1	Index1 (i7) N709 GCTACGCT	Nextera DNA	34	t
77	CGAGGCTG	2020-09-30 09:01:11.163+02	10	1	Index1 (i7) N710 CGAGGCTG	Nextera DNA	35	t
78	AAGAGGCA	2020-09-30 09:01:11.163+02	10	1	Index1 (i7) N711 AAGAGGCA	Nextera DNA	36	t
79	GTAGAGGA	2020-09-30 09:01:11.163+02	10	1	Index1 (i7) N712 GTAGAGGA	Nextera DNA	37	t
80	AAGACTA	2020-09-30 09:01:11.164+02	10	1	02 AAGACT	\N	38	t
81	ACTTCAA	2020-09-30 09:01:11.164+02	10	1	10 ACTTCA	\N	39	t
82	AGGTTGA	2020-09-30 09:01:11.164+02	10	1	17 AGGTTG	\N	40	t
83	TTCGTCA	2020-09-30 09:01:11.164+02	10	1	17 TTCGTCA	\N	41	t
84	AGCATAA	2020-09-30 09:01:11.164+02	10	1	20 AGCATAA	\N	42	t
85	ATACGCA	2020-09-30 09:01:11.165+02	10	1	20 ATACGC	\N	43	t
86	CAGATGA	2020-09-30 09:01:11.165+02	10	1	28 CAGATG	\N	44	t
87	CCGAATA	2020-09-30 09:01:11.165+02	10	1	34 CCGAAT	\N	45	t
88	CGCTCGA	2020-09-30 09:01:11.165+02	10	1	43 CGCTCG	\N	46	t
89	CGTATTA	2020-09-30 09:01:11.166+02	10	1	45 CGTATT	\N	47	t
90	CCATGAA	2020-09-30 09:01:11.166+02	10	1	50 CCATGAA	\N	48	t
91	CTGACCA	2020-09-30 09:01:11.166+02	10	1	50 CTGACC	\N	49	t
92	GAAGCCA	2020-09-30 09:01:11.166+02	10	1	52 GAAGCC	\N	50	t
93	NOINDEX	2020-09-30 09:01:11.166+02	10	1	\N	\N	51	t
94	GCTGAAA	2020-09-30 09:01:11.167+02	10	1	59 GCTGAA	\N	52	t
95	GTCGCGA	2020-09-30 09:01:11.167+02	10	1	64 GTCGCG	\N	53	t
96	TAAGATA	2020-09-30 09:01:11.167+02	10	1	65 TAAGAT	\N	54	t
97	GCGCTGA	2020-09-30 09:01:11.167+02	10	1	66 GCGCTGA	\N	55	t
98	TATCGTA	2020-09-30 09:01:11.167+02	10	1	66 TATCGT	\N	56	t
99	TCCTACA	2020-09-30 09:01:11.168+02	10	1	68 TCCTAC	\N	57	t
100	TCTATAA	2020-09-30 09:01:11.168+02	10	1	70 TCTATA	\N	58	t
101	TTACTTA	2020-09-30 09:01:11.168+02	10	1	74 TTACTT	\N	59	t
102	TTCCGAA	2020-09-30 09:01:11.168+02	10	1	75 TTCCGA	\N	60	t
103	ATGTCAA	2020-09-30 09:01:11.169+02	10	1	DNA Adapter 15	\N	61	t
104	CCGTCCA	2020-09-30 09:01:11.169+02	10	1	DNA Adapter 16	\N	62	t
105	GTAGAGA	2020-09-30 09:01:11.169+02	10	1	DNA Adapter 17	\N	63	t
106	GTGAAAA	2020-09-30 09:01:11.169+02	10	1	DNA Adapter 19	\N	64	t
107	GTGGCCA	2020-09-30 09:01:11.17+02	10	1	DNA Adapter 20	\N	65	t
108	GTTTCGA	2020-09-30 09:01:11.17+02	10	1	DNA Adapter 21	\N	66	t
109	CGTACGA	2020-09-30 09:01:11.17+02	10	1	DNA Adapter 22	\N	67	t
110	GGTAGCA	2020-09-30 09:01:11.17+02	10	1	DNA Adapter 24	\N	68	t
111	ATGAGCA	2020-09-30 09:01:11.171+02	10	1	DNA Adapter 26	\N	69	t
112	ATTCCTA	2020-09-30 09:01:11.171+02	10	1	DNA Adapter 27	\N	70	t
113	CAAAAGA	2020-09-30 09:01:11.171+02	10	1	DNA Adapter 28	\N	71	t
114	CAACTAA	2020-09-30 09:01:11.171+02	10	1	DNA Adapter 29	\N	72	t
115	CACCGGA	2020-09-30 09:01:11.172+02	10	1	DNA Adapter 30	\N	73	t
116	CACGATA	2020-09-30 09:01:11.172+02	10	1	DNA Adapter 31	\N	74	t
117	CACTCAA	2020-09-30 09:01:11.172+02	10	1	DNA Adapter 32	\N	75	t
118	CAGGCGA	2020-09-30 09:01:11.172+02	10	1	DNA Adapter 33	\N	76	t
119	CATGGCA	2020-09-30 09:01:11.172+02	10	1	DNA Adapter 34	\N	77	t
120	CATTTTA	2020-09-30 09:01:11.173+02	10	1	DNA Adapter 35	\N	78	t
121	CCAACAA	2020-09-30 09:01:11.173+02	10	1	DNA Adapter 36	\N	79	t
122	CGGAATA	2020-09-30 09:01:11.173+02	10	1	DNA Adapter 37	\N	80	t
123	CTAGCTA	2020-09-30 09:01:11.173+02	10	1	DNA Adapter 38	\N	81	t
124	CTATACA	2020-09-30 09:01:11.173+02	10	1	DNA Adapter 39	\N	82	t
125	CTCAGAA	2020-09-30 09:01:11.174+02	10	1	DNA Adapter 40	\N	83	t
126	GACGACA	2020-09-30 09:01:11.174+02	10	1	DNA Adapter 41	\N	84	t
127	TAATCGA	2020-09-30 09:01:11.174+02	10	1	DNA Adapter 42	\N	85	t
128	TACAGCA	2020-09-30 09:01:11.174+02	10	1	DNA Adapter 43	\N	86	t
129	TATAATA	2020-09-30 09:01:11.174+02	10	1	DNA Adapter 44	\N	87	t
130	TCATTCA	2020-09-30 09:01:11.174+02	10	1	DNA Adapter 45	\N	88	t
131	TCCCGAA	2020-09-30 09:01:11.175+02	10	1	DNA Adapter 46	\N	89	t
132	TCGAAGA	2020-09-30 09:01:11.175+02	10	1	DNA Adapter 47	\N	90	t
133	TCGGCAA	2020-09-30 09:01:11.175+02	10	1	DNA Adapter 48	\N	91	t
134	AGTCAAC	2020-09-30 09:01:11.175+02	10	1	Index13 AGTCAAC	\N	92	t
135	AATGCGA	2020-09-30 09:01:11.175+02	10	1	Lib AATGCGA	\N	93	t
136	NONE	2020-09-30 09:01:11.236+02	11	1	None	No Index	1	t
137	TAGATCGC	2020-09-30 09:01:11.236+02	11	1	Index2 (i5) N501 TAGATCGC	Nextera DNA	2	t
138	CTCTCTAT	2020-09-30 09:01:11.236+02	11	1	Index2 (i5) N502 CTCTCTAT	Nextera DNA	3	t
139	TATCCTCT	2020-09-30 09:01:11.236+02	11	1	Index2 (i5) N503 TATCCTCT	Nextera DNA	4	t
140	AGAGTAGA	2020-09-30 09:01:11.236+02	11	1	Index2 (i5) N504 AGAGTAGA	Nextera DNA	5	t
141	GTAAGGAG	2020-09-30 09:01:11.236+02	11	1	Index2 (i5) N505 GTAAGGAG	Nextera DNA	6	t
142	ACTGCATA	2020-09-30 09:01:11.237+02	11	1	Index2 (i5) N506 ACTGCATA	Nextera DNA	7	t
143	AAGGAGTA	2020-09-30 09:01:11.237+02	11	1	Index2 (i5) N507 AAGGAGTA	Nextera DNA	8	t
144	CTAAGCCT	2020-09-30 09:01:11.237+02	11	1	Index2 (i5) N508 CTAAGCCT	Nextera DNA	9	t
145	NOINDEX	2020-09-30 09:01:11.237+02	11	1	\N	\N	10	t
146	CHIP_SEQ_SAMPLE_PREP	2020-09-30 09:01:11.246+02	12	1	ChIP-Seq Sample Preparation Kit	\N	1	t
147	NEBNEXT_DNA_SAMPLE_PREP_MASTER_MIX_SET1	2020-09-30 09:01:11.246+02	12	1	NEB Genomic DNA Sample Preparation Kit	\N	2	t
148	NEB_CHIP_SEQ_SAMPLE_PREPARATION_KIT	2020-09-30 09:01:11.247+02	12	1	NEB_ChIP_Seq_Sample_Preparation_Kit	\N	3	t
149	GENOMICDNA_SAMPLE_PREP	2020-09-30 09:01:11.247+02	12	1	Illumina Genomic DNA Sample Preparation Kit	\N	4	t
150	PAIRED_END_DNA_SAMPLE_PREP	2020-09-30 09:01:11.247+02	12	1	Paired End DNA Sample Prep Oligo Kit	\N	5	t
151	MRNA_SEQ_SAMPLE_PREP	2020-09-30 09:01:11.247+02	12	1	mRNA-Seq Sample Preparation Kit	\N	6	t
152	RIBOZERO_SCRIPTSEQ_MRNA-SEQ_KIT	2020-09-30 09:01:11.247+02	12	1	RiboZero ScriptSeq mRNA-Seq_Epicentre-kit	\N	7	t
153	POLYA_SCRIPTSEQ_MRNA-SEQ_KIT	2020-09-30 09:01:11.248+02	12	1	PolyA(Beads) ScriptSeq mRNA-Seq_Epicentre-kit	\N	8	t
154	NEXTERA_DNA_SAMPLE_PREP_KITS	2020-09-30 09:01:11.248+02	12	1	Nextera Genomic DNA Sample Preparation Kit BufferLMW(Epicentre)	\N	9	t
155	NEXTERA_DNA_SAMPLE_PREP_KIT_BUFFER_HMW	2020-09-30 09:01:11.248+02	12	1	Nextera Genomic DNA Sample Preparation Kit BufferHMW(Epicentre)	\N	10	t
156	AGILENT_SURESELECT_ENRICHMENTSYSTEM	2020-09-30 09:01:11.248+02	12	1	Agilent_SureSelect_EnrichmentSystem	\N	11	t
157	TRUSEQRNA_SAMPLE_PREP_KIT	2020-09-30 09:01:11.248+02	12	1	TruSeq_RNA_SamplePrepKit_Illumina	\N	12	t
158	TRUESEQ_CHIP_SAMPLE_PREP_KIT	2020-09-30 09:01:11.248+02	12	1	\N	\N	13	t
159	TRUSEQ_DNA_SAMPLE_PREP_KIT	2020-09-30 09:01:11.248+02	12	1	TruSeq_DNA_SamplePrepKit_Illumina	\N	14	t
160	NONE	2020-09-30 09:01:11.249+02	12	1	None (Already prepared)	\N	15	t
161	1.4.0RC2	2020-09-30 09:01:11.258+02	13	1	macs14 1.4.0rc2 20110214 (Valentine)	\N	1	t
162	1.3.7.1	2020-09-30 09:01:11.258+02	13	1	macs 1.3.7.1 (Oktoberfest, bug fixed #1)	\N	2	t
163	NONE	2020-09-30 09:01:11.262+02	14	1	\N	\N	1	t
164	ONE	2020-09-30 09:01:11.262+02	14	1	\N	\N	2	t
165	CONCND3300	2020-09-30 09:01:11.266+02	15	1	Conc Nano Drop 3300	\N	1	t
166	CONCND1000	2020-09-30 09:01:11.266+02	15	1	Conc Nano Drop 1000	\N	2	t
167	CONCND2000	2020-09-30 09:01:11.266+02	15	1	Conc Nano Drop 2000	\N	3	t
168	10090	2020-09-30 09:01:11.273+02	16	1	Mus musculus	Genbank common name: house mouse\\ Inherited blast name: rodents	1	t
169	9606	2020-09-30 09:01:11.273+02	16	1	Homo sapiens	Genbank common name: human\\ Inherited blast name: primates	2	t
170	7227	2020-09-30 09:01:11.274+02	16	1	Drosophila melanogaster	Genbank common name: fruit fly\\ Inherited blast name: flies	3	t
171	6239	2020-09-30 09:01:11.274+02	16	1	Caenorhabditis elegans	Inherited blast name: nematodes	4	t
172	4932	2020-09-30 09:01:11.274+02	16	1	Saccharomyces cerevisiae	Genbank common name: baker's yeast\\ Inherited blast name: ascomycetes	5	t
173	10116	2020-09-30 09:01:11.274+02	16	1	Rattus norvegicus	Genbank common name: Norway rat\\ Inherited blast name: rodents	6	t
174	6669	2020-09-30 09:01:11.274+02	16	1	Daphnia pulex	Genbank common name: common water flea\\ Inherited blast name: crustaceans	7	t
175	562	2020-09-30 09:01:11.275+02	16	1	Escherichia coli	Inherited blast name: enterobacteria	8	t
176	623	2020-09-30 09:01:11.275+02	16	1	Shigella flexneri	Inherited blast name: enterobacteria	9	t
177	10847	2020-09-30 09:01:11.275+02	16	1	Enterobacteria phage phiX174	Inherited blast name: viruses	10	t
178	190650	2020-09-30 09:01:11.275+02	16	1	Caulobacter crescentus CB15	Inherited blast name: a-proteobacteria	11	t
179	8113	2020-09-30 09:01:11.276+02	16	1	Cichlidae	Genbank common name: cichlids\\ Inherited blast name: bony fishes	12	t
180	481459	2020-09-30 09:01:11.276+02	16	1	Gasterosteus aculeatus aculeatus	Genbank common name: three-spined stickleback\\ Inherited blast name: bony fishes	13	t
181	282301	2020-09-30 09:01:11.276+02	16	1	Macrostomum lignano	Inherited blast name: flatworms	14	t
182	99287	2020-09-30 09:01:11.276+02	16	1	Salmonella enterica subsp. enterica serovar Typhimurium str. LT2	Inherited blast name: enterobacteria	15	t
183	4896	2020-09-30 09:01:11.277+02	16	1	Schizosaccharomyces pombe	Genbank common name: fission yeast\\ Inherited blast name: ascomycetes	16	t
184	4897	2020-09-30 09:01:11.277+02	16	1	Schizosaccharomyces japonicus	Inherited blast name: ascomycetes	17	t
185	7955	2020-09-30 09:01:11.277+02	16	1	Danio rerio	Genbank common name: zebrafish\\ Inherited blast name: bony fishes	18	t
186	3702	2020-09-30 09:01:11.277+02	16	1	Arabidopsis thaliana	Genbank common name: thale cress\\ Inherited blast name: eudicots	19	t
187	225322	2020-09-30 09:01:11.277+02	16	1	Pasteuria ramosa	Bacterium which infects Daphnia\\ Pasteuria ramosa Metchnikoff 1888 (Approved Lists 1980) emend. Starr et al. 1986\\ Ebert D, Rainey P, Embley TM, Scholz D. Development, life\\ cycle, ultrastructure and phylogenetic position of Pasteuria ramosa Metchnikoff 1888: rediscovery of an obligate \\ endoparasite of Daphnia magna Straus. Philos Trans R Soc \\ Lond Ser B. 1996;351:1689.	20	t
188	9913	2020-09-30 09:01:11.278+02	16	1	Bos taurus	Genbank common name: cattle\\ Inherited blast name: even-toed ungulates	21	t
189	9823	2020-09-30 09:01:11.278+02	16	1	Sus scrofa	Genbank common name: pig\\ Inherited blast name: even-toed ungulates	22	t
190	9940	2020-09-30 09:01:11.278+02	16	1	Ovis aries	Genbank common name: sheep\\ Inherited blast name: even-toed ungulates	23	t
191	9925	2020-09-30 09:01:11.278+02	16	1	Capra hircus	Genbank common name: goat\\ Inherited blast name: even-toed ungulates	24	t
192	8153	2020-09-30 09:01:11.279+02	16	1	Haplochromis burtoni	Common name: cichlid fish	25	t
193	61818	2020-09-30 09:01:11.279+02	16	1	Amphilophus (nicaraguan)	Common name: bony fish	26	t
194	35525	2020-09-30 09:01:11.279+02	16	1	Daphnia Magna	Common name: water flea	27	t
195	4081	2020-09-30 09:01:11.279+02	16	1	Solanum lycopersicum (tomato)	Common Name: tomato	28	t
196	13068	2020-09-30 09:01:11.28+02	16	1	Forficula auricularia (earwig)	Common name: earwig	29	t
197	3569	2020-09-30 09:01:11.28+02	16	1	Dianthus	Genbank common name: clove pink	30	t
198	3573	2020-09-30 09:01:11.28+02	16	1	Silene	Genbank common name: campions\\ Inherited blast name: eudicots	31	t
199	32644	2020-09-30 09:01:11.28+02	16	1	unidentified	Inherited blast name: unclassified	32	t
200	0000	2020-09-30 09:01:11.28+02	16	1	OTHER	\N	33	t
201	1.13.48	2020-09-30 09:01:11.303+02	17	1	RTA 1.13.48	\N	1	t
202	1.12.4.2	2020-09-30 09:01:11.303+02	17	1	RTA 1.12.4.2 (HiSeq 2000)	Real Time Analysis in combination with HCS 1.4.8	2	t
203	1.12	2020-09-30 09:01:11.303+02	17	1	RTA 1.12	Real Time Analysis 1.12 HiSeq 2000	3	t
204	1.9	2020-09-30 09:01:11.303+02	17	1	RTA 1.9 (GA IIx)	Real Time Analysis 1.9	4	t
205	RTA_1.8	2020-09-30 09:01:11.303+02	17	1	RTA 1.8	Real Time Analysis 1.8	5	t
206	RTA_1.6	2020-09-30 09:01:11.304+02	17	1	RTA 1.6	Real Time Analysis 1.6	6	t
207	RTA_1.5	2020-09-30 09:01:11.304+02	17	1	RTA 1.5	\N	7	t
208	RTA_1.4.15.0	2020-09-30 09:01:11.304+02	17	1	RTA 1.4.15.0	\N	8	t
209	1.5	2020-09-30 09:01:11.304+02	17	1	\N	\N	9	t
210	1.4	2020-09-30 09:01:11.304+02	17	1	\N	\N	10	t
211	1.3.2	2020-09-30 09:01:11.305+02	17	1	\N	\N	11	t
212	1.0	2020-09-30 09:01:11.305+02	17	1	\N	\N	12	t
213	PRE_1.0	2020-09-30 09:01:11.305+02	17	1	\N	Before Pipeline Version 1.0	13	t
214	NONE	2020-09-30 09:01:11.305+02	17	1	\N	\N	14	t
215	PROCESSED_DNA_LIBRARY	2020-09-30 09:01:11.317+02	18	1	\N	\N	1	t
216	POOLED_SAMPLE	2020-09-30 09:01:11.317+02	18	1	\N	\N	2	t
217	GENOMIC_DNA	2020-09-30 09:01:11.318+02	18	1	\N	\N	3	t
218	SMALL_RNA	2020-09-30 09:01:11.318+02	18	1	\N	\N	4	t
219	TOTAL_RNA	2020-09-30 09:01:11.318+02	18	1	\N	\N	5	t
220	CHIP	2020-09-30 09:01:11.318+02	18	1	\N	\N	6	t
221	VIRAL	2020-09-30 09:01:11.318+02	18	1	\N	\N	7	t
222	SYNTHETIC	2020-09-30 09:01:11.318+02	18	1	\N	\N	8	t
223	FRAGMENTED_GENOMIC_DNA	2020-09-30 09:01:11.319+02	18	1	\N	\N	9	t
224	MRNA	2020-09-30 09:01:11.319+02	18	1	\N	\N	10	t
225	OTHER	2020-09-30 09:01:11.319+02	18	1	\N	\N	11	t
226	BISULFITE_CHIP	2020-09-30 09:01:11.319+02	18	1	\N	\N	12	t
227	NON-GENOMIC	2020-09-30 09:01:11.319+02	18	1	\N	\N	13	t
228	BISULFITE_TREATED	2020-09-30 09:01:11.319+02	18	1	\N	\N	14	t
229	TRUSEQ_V5	2020-09-30 09:01:11.33+02	19	1	TruSeq v5	\N	1	t
230	V5	2020-09-30 09:01:11.33+02	19	1	\N	\N	2	t
231	V4	2020-09-30 09:01:11.331+02	19	1	\N	\N	3	t
232	V3	2020-09-30 09:01:11.331+02	19	1	\N	\N	4	t
233	SBS_HS_V3	2020-09-30 09:01:11.331+02	19	1	TruSeq SBS HS v3	\N	5	t
234	M00721	2020-09-30 09:01:11.337+02	20	1	MiSeq	\N	1	t
235	SN792	2020-09-30 09:01:11.337+02	20	1	HiSeq 2000	\N	2	t
236	SMALL_RNA_SEQ	2020-09-30 09:01:11.341+02	21	1	\N	\N	1	t
237	RNA_SEQ	2020-09-30 09:01:11.342+02	21	1	\N	\N	2	t
238	GENOMIC_DNA_SEQ	2020-09-30 09:01:11.342+02	21	1	\N	\N	3	t
239	CHIP_SEQ	2020-09-30 09:01:11.342+02	21	1	\N	\N	4	t
240	YES	2020-09-30 09:01:11.347+02	22	1	\N	\N	1	t
241	NO	2020-09-30 09:01:11.348+02	22	1	\N	\N	2	t
242	96_WELLS_8X12	2020-09-30 09:01:19.462+02	23	1	\N	\N	1	t
243	384_WELLS_16X24	2020-09-30 09:01:19.462+02	23	1	\N	\N	2	t
244	96_WELLS_8X12	2020-09-30 09:01:19.466+02	24	1	\N	\N	1	t
245	FLOW_CYTOMETRY	2020-09-30 09:02:18.077+02	25	3	flow citometry	\N	1	t
246	GROWTH	2020-09-30 09:02:18.078+02	25	3	growth	\N	2	t
247	RT_QPCR	2020-09-30 09:02:18.078+02	25	3	RT-qPCR	\N	3	t
248	SORTING	2020-09-30 09:02:18.078+02	25	3	cell sorting	\N	4	t
249	WESTERN_BLOTTING	2020-09-30 09:02:18.078+02	25	3	western blotting	\N	5	t
250	FLUORESCENCE	2020-09-30 09:02:18.101+02	26	3	fluorescent probe	The antibody is conjugated with a fluorescent probe	1	t
251	HRP	2020-09-30 09:02:18.101+02	26	3	horseradish peroxydase	The antibody is conjugated with the horseradish peroxydase	2	t
252	FIBROBLAST	2020-09-30 09:02:18.119+02	28	3	fibroblast	\N	1	t
253	NEURON	2020-09-30 09:02:18.12+02	28	3	neuron	\N	2	t
254	BACTERIA	2020-09-30 09:02:18.131+02	29	3	Bacteria	\N	1	t
255	BUDDING_YEAST	2020-09-30 09:02:18.131+02	29	3	Saccharomyces cerevisiae	\N	2	t
256	DROSOPHILA_MELANOGASTER	2020-09-30 09:02:18.131+02	29	3	Drosophila melanogaster	\N	3	t
257	MAMMALIAN	2020-09-30 09:02:18.131+02	29	3	mammalian	\N	4	t
258	INHIBITOR	2020-09-30 09:02:18.149+02	30	3	inhibitor	\N	1	t
259	MIMIC	2020-09-30 09:02:18.149+02	30	3	mimic	\N	2	t
260	BOWTIE	2020-09-30 09:02:18.165+02	31	3	\N	\N	1	t
261	BWA	2020-09-30 09:02:18.165+02	31	3	\N	\N	2	t
262	ELAND	2020-09-30 09:02:18.165+02	31	3	\N	\N	3	t
263	MAQ	2020-09-30 09:02:18.166+02	31	3	\N	\N	4	t
264	NOT_NEEDED	2020-09-30 09:02:18.166+02	31	3	\N	\N	5	t
265	NOVOALIGN	2020-09-30 09:02:18.166+02	31	3	\N	\N	6	t
266	M00721	2020-09-30 09:02:18.179+02	32	3	MiSeq	\N	1	t
267	SN792	2020-09-30 09:02:18.179+02	32	3	HiSeq 2000	\N	2	t
\.


--
-- Data for Name: core_plugins; Type: TABLE DATA; Schema: public; Owner: -
--

COPY core_plugins (id, name, version, registration_timestamp, master_reg_script) FROM stdin;
1	search-store	1	2020-09-30 09:01:02.808526+02	#\n# Copyright 2014 ETH Zuerich, Scientific IT Services\n#\n# Licensed under the Apache License, Version 2.0 (the "License");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an "AS IS" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# MasterDataRegistrationTransaction Class\nfrom ch.ethz.sis.openbis.generic.server.asapi.v3 import ApplicationServerApi\nfrom ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\nfrom ch.ethz.sis.openbis.generic.asapi.v3.dto.service.id import CustomASServiceCode\nfrom ch.ethz.sis.openbis.generic.asapi.v3.dto.service import CustomASServiceExecutionOptions\nfrom ch.systemsx.cisd.openbis.generic.server.jython.api.v1.impl import MasterDataRegistrationHelper\nimport sys\n\nhelper = MasterDataRegistrationHelper(sys.path)\napi = CommonServiceProvider.getApplicationContext().getBean(ApplicationServerApi.INTERNAL_SERVICE_NAME)\nsessionToken = api.loginAsSystem()\nprops = CustomASServiceExecutionOptions().withParameter('xls', helper.listXlsByteArrays())\\\n    .withParameter('xls_name', 'SEARCH-STORE').withParameter('update_mode', 'IGNORE_EXISTING')\\\n    .withParameter('scripts', helper.getAllScripts())\nresult = api.executeCustomASService(sessionToken, CustomASServiceCode("xls-import-api"), props);\nprint("======================== master-data xls ingestion result ========================")\nprint(result)\nprint("======================== master-data xls ingestion result ========================")\n
2	illumina-ngs	2	2020-09-30 09:01:07.087475+02	# -*- coding: utf-8 -*-\nimport ch.systemsx.cisd.openbis.generic.server.jython.api.v1.DataType as DataType\n\nprint ("Importing Master Data...")\n\ntr = service.transaction()\n\n\nfile_type_FASTQ_PHRED_64 = tr.getOrCreateNewFileFormatType('FASTQ_PHRED_64')\nfile_type_FASTQ_PHRED_64.setDescription('FastQ Format with PHRED+64 quality values (as deliverd by Illumina GA Pipeline >= 1.3)')\n   \nprint "Imported 7 File Formats"     \nvocabulary_AGILENT_KIT = tr.getOrCreateNewVocabulary('AGILENT_KIT')\nvocabulary_AGILENT_KIT.setDescription(None)\nvocabulary_AGILENT_KIT.setUrlTemplate(None)\nvocabulary_AGILENT_KIT.setManagedInternally(False)\nvocabulary_AGILENT_KIT.setChosenFromList(True)\n          \nvocabulary_term_AGILENT_KIT_AGILENT_DNA_KIT_1000 = tr.createNewVocabularyTerm('AGILENT_DNA_KIT_1000')\nvocabulary_term_AGILENT_KIT_AGILENT_DNA_KIT_1000.setDescription(None)\nvocabulary_term_AGILENT_KIT_AGILENT_DNA_KIT_1000.setLabel(None)\nvocabulary_term_AGILENT_KIT_AGILENT_DNA_KIT_1000.setOrdinal(1)\nvocabulary_AGILENT_KIT.addTerm(vocabulary_term_AGILENT_KIT_AGILENT_DNA_KIT_1000)\n          \nvocabulary_term_AGILENT_KIT_AGILENT_HIGH_SENSITIVITY_DNA_KIT = tr.createNewVocabularyTerm('AGILENT_HIGH_SENSITIVITY_DNA_KIT')\nvocabulary_term_AGILENT_KIT_AGILENT_HIGH_SENSITIVITY_DNA_KIT.setDescription(None)\nvocabulary_term_AGILENT_KIT_AGILENT_HIGH_SENSITIVITY_DNA_KIT.setLabel(None)\nvocabulary_term_AGILENT_KIT_AGILENT_HIGH_SENSITIVITY_DNA_KIT.setOrdinal(2)\nvocabulary_AGILENT_KIT.addTerm(vocabulary_term_AGILENT_KIT_AGILENT_HIGH_SENSITIVITY_DNA_KIT)\n    \nvocabulary_ALIGNMENT_SOFTWARE = tr.getOrCreateNewVocabulary('ALIGNMENT_SOFTWARE')\nvocabulary_ALIGNMENT_SOFTWARE.setDescription('If an alignment is requested, which software package should be use?')\nvocabulary_ALIGNMENT_SOFTWARE.setUrlTemplate(None)\nvocabulary_ALIGNMENT_SOFTWARE.setManagedInternally(False)\nvocabulary_ALIGNMENT_SOFTWARE.setChosenFromList(True)\n          \nvocabulary_term_ALIGNMENT_SOFTWARE_NOT_NEEDED = tr.createNewVocabularyTerm('NOT_NEEDED')\nvocabulary_term_ALIGNMENT_SOFTWARE_NOT_NEEDED.setDescription(None)\nvocabulary_term_ALIGNMENT_SOFTWARE_NOT_NEEDED.setLabel(None)\nvocabulary_term_ALIGNMENT_SOFTWARE_NOT_NEEDED.setOrdinal(1)\nvocabulary_ALIGNMENT_SOFTWARE.addTerm(vocabulary_term_ALIGNMENT_SOFTWARE_NOT_NEEDED)\n          \nvocabulary_term_ALIGNMENT_SOFTWARE_ELAND = tr.createNewVocabularyTerm('ELAND')\nvocabulary_term_ALIGNMENT_SOFTWARE_ELAND.setDescription(None)\nvocabulary_term_ALIGNMENT_SOFTWARE_ELAND.setLabel(None)\nvocabulary_term_ALIGNMENT_SOFTWARE_ELAND.setOrdinal(2)\nvocabulary_ALIGNMENT_SOFTWARE.addTerm(vocabulary_term_ALIGNMENT_SOFTWARE_ELAND)\n          \nvocabulary_term_ALIGNMENT_SOFTWARE_MAQ = tr.createNewVocabularyTerm('MAQ')\nvocabulary_term_ALIGNMENT_SOFTWARE_MAQ.setDescription(None)\nvocabulary_term_ALIGNMENT_SOFTWARE_MAQ.setLabel(None)\nvocabulary_term_ALIGNMENT_SOFTWARE_MAQ.setOrdinal(3)\nvocabulary_ALIGNMENT_SOFTWARE.addTerm(vocabulary_term_ALIGNMENT_SOFTWARE_MAQ)\n          \nvocabulary_term_ALIGNMENT_SOFTWARE_BWA = tr.createNewVocabularyTerm('BWA')\nvocabulary_term_ALIGNMENT_SOFTWARE_BWA.setDescription(None)\nvocabulary_term_ALIGNMENT_SOFTWARE_BWA.setLabel(None)\nvocabulary_term_ALIGNMENT_SOFTWARE_BWA.setOrdinal(4)\nvocabulary_ALIGNMENT_SOFTWARE.addTerm(vocabulary_term_ALIGNMENT_SOFTWARE_BWA)\n          \nvocabulary_term_ALIGNMENT_SOFTWARE_NOVOALIGN = tr.createNewVocabularyTerm('NOVOALIGN')\nvocabulary_term_ALIGNMENT_SOFTWARE_NOVOALIGN.setDescription(None)\nvocabulary_term_ALIGNMENT_SOFTWARE_NOVOALIGN.setLabel(None)\nvocabulary_term_ALIGNMENT_SOFTWARE_NOVOALIGN.setOrdinal(6)\nvocabulary_ALIGNMENT_SOFTWARE.addTerm(vocabulary_term_ALIGNMENT_SOFTWARE_NOVOALIGN)\n          \nvocabulary_term_ALIGNMENT_SOFTWARE_BOWTIE = tr.createNewVocabularyTerm('BOWTIE')\nvocabulary_term_ALIGNMENT_SOFTWARE_BOWTIE.setDescription(None)\nvocabulary_term_ALIGNMENT_SOFTWARE_BOWTIE.setLabel(None)\nvocabulary_term_ALIGNMENT_SOFTWARE_BOWTIE.setOrdinal(7)\nvocabulary_ALIGNMENT_SOFTWARE.addTerm(vocabulary_term_ALIGNMENT_SOFTWARE_BOWTIE)\n    \nvocabulary_CASAVA_VERSION = tr.getOrCreateNewVocabulary('CASAVA_VERSION')\nvocabulary_CASAVA_VERSION.setDescription('Post analyzing software')\nvocabulary_CASAVA_VERSION.setUrlTemplate(None)\nvocabulary_CASAVA_VERSION.setManagedInternally(False)\nvocabulary_CASAVA_VERSION.setChosenFromList(True)\n          \nvocabulary_term_CASAVA_VERSION_18 = tr.createNewVocabularyTerm('1.8')\nvocabulary_term_CASAVA_VERSION_18.setDescription(None)\nvocabulary_term_CASAVA_VERSION_18.setLabel(None)\nvocabulary_term_CASAVA_VERSION_18.setOrdinal(1)\nvocabulary_CASAVA_VERSION.addTerm(vocabulary_term_CASAVA_VERSION_18)\n          \nvocabulary_term_CASAVA_VERSION_17 = tr.createNewVocabularyTerm('1.7')\nvocabulary_term_CASAVA_VERSION_17.setDescription(None)\nvocabulary_term_CASAVA_VERSION_17.setLabel(None)\nvocabulary_term_CASAVA_VERSION_17.setOrdinal(2)\nvocabulary_CASAVA_VERSION.addTerm(vocabulary_term_CASAVA_VERSION_17)\n    \nvocabulary_CLUSTER_GENERATION_KIT_VERSION = tr.getOrCreateNewVocabulary('CLUSTER_GENERATION_KIT_VERSION')\nvocabulary_CLUSTER_GENERATION_KIT_VERSION.setDescription('Version of the Cluster Generation Kit')\nvocabulary_CLUSTER_GENERATION_KIT_VERSION.setUrlTemplate(None)\nvocabulary_CLUSTER_GENERATION_KIT_VERSION.setManagedInternally(False)\nvocabulary_CLUSTER_GENERATION_KIT_VERSION.setChosenFromList(True)\n          \nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CBOT_HS_V3 = tr.createNewVocabularyTerm('TRUSEQ_CBOT_HS_V3')\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CBOT_HS_V3.setDescription(None)\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CBOT_HS_V3.setLabel('TruSeq cBot-HS v3')\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CBOT_HS_V3.setOrdinal(1)\nvocabulary_CLUSTER_GENERATION_KIT_VERSION.addTerm(vocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CBOT_HS_V3)\n          \nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CBOT_HS_V25 = tr.createNewVocabularyTerm('TRUSEQ_CBOT_HS_V2.5')\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CBOT_HS_V25.setDescription(None)\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CBOT_HS_V25.setLabel('TruSeq cBot-HS v2.5')\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CBOT_HS_V25.setOrdinal(2)\nvocabulary_CLUSTER_GENERATION_KIT_VERSION.addTerm(vocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CBOT_HS_V25)\n          \nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CBOT_GA_V2 = tr.createNewVocabularyTerm('TRUSEQ_CBOT_GA_V2')\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CBOT_GA_V2.setDescription(None)\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CBOT_GA_V2.setLabel('TrueSeq cBot-GA v2')\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CBOT_GA_V2.setOrdinal(3)\nvocabulary_CLUSTER_GENERATION_KIT_VERSION.addTerm(vocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CBOT_GA_V2)\n          \nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CS_GA_V5 = tr.createNewVocabularyTerm('TRUSEQ_CS_GA_V5')\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CS_GA_V5.setDescription(None)\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CS_GA_V5.setLabel('TrueSeq CS-GA v5')\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CS_GA_V5.setOrdinal(4)\nvocabulary_CLUSTER_GENERATION_KIT_VERSION.addTerm(vocabulary_term_CLUSTER_GENERATION_KIT_VERSION_TRUSEQ_CS_GA_V5)\n          \nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_V5 = tr.createNewVocabularyTerm('V5')\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_V5.setDescription(None)\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_V5.setLabel(None)\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_V5.setOrdinal(5)\nvocabulary_CLUSTER_GENERATION_KIT_VERSION.addTerm(vocabulary_term_CLUSTER_GENERATION_KIT_VERSION_V5)\n          \nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_V4 = tr.createNewVocabularyTerm('V4')\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_V4.setDescription(None)\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_V4.setLabel(None)\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_V4.setOrdinal(6)\nvocabulary_CLUSTER_GENERATION_KIT_VERSION.addTerm(vocabulary_term_CLUSTER_GENERATION_KIT_VERSION_V4)\n          \nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_V2 = tr.createNewVocabularyTerm('V2')\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_V2.setDescription(None)\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_V2.setLabel(None)\nvocabulary_term_CLUSTER_GENERATION_KIT_VERSION_V2.setOrdinal(7)\nvocabulary_CLUSTER_GENERATION_KIT_VERSION.addTerm(vocabulary_term_CLUSTER_GENERATION_KIT_VERSION_V2)\n    \nvocabulary_CLUSTER_STATION = tr.getOrCreateNewVocabulary('CLUSTER_STATION')\nvocabulary_CLUSTER_STATION.setDescription('Cluster Station')\nvocabulary_CLUSTER_STATION.setUrlTemplate(None)\nvocabulary_CLUSTER_STATION.setManagedInternally(False)\nvocabulary_CLUSTER_STATION.setChosenFromList(True)\n          \nvocabulary_term_CLUSTER_STATION_CBOT = tr.createNewVocabularyTerm('CBOT')\nvocabulary_term_CLUSTER_STATION_CBOT.setDescription(None)\nvocabulary_term_CLUSTER_STATION_CBOT.setLabel('cBot')\nvocabulary_term_CLUSTER_STATION_CBOT.setOrdinal(1)\nvocabulary_CLUSTER_STATION.addTerm(vocabulary_term_CLUSTER_STATION_CBOT)\n          \nvocabulary_term_CLUSTER_STATION_CBOT2 = tr.createNewVocabularyTerm('CBOT2')\nvocabulary_term_CLUSTER_STATION_CBOT2.setDescription('Second cBot')\nvocabulary_term_CLUSTER_STATION_CBOT2.setLabel('cBot2')\nvocabulary_term_CLUSTER_STATION_CBOT2.setOrdinal(2)\nvocabulary_CLUSTER_STATION.addTerm(vocabulary_term_CLUSTER_STATION_CBOT2)\n    \nvocabulary_CONTROL_LANE = tr.getOrCreateNewVocabulary('CONTROL_LANE')\nvocabulary_CONTROL_LANE.setDescription(None)\nvocabulary_CONTROL_LANE.setUrlTemplate(None)\nvocabulary_CONTROL_LANE.setManagedInternally(False)\nvocabulary_CONTROL_LANE.setChosenFromList(True)\n          \nvocabulary_term_CONTROL_LANE_1 = tr.createNewVocabularyTerm('1')\nvocabulary_term_CONTROL_LANE_1.setDescription(None)\nvocabulary_term_CONTROL_LANE_1.setLabel(None)\nvocabulary_term_CONTROL_LANE_1.setOrdinal(1)\nvocabulary_CONTROL_LANE.addTerm(vocabulary_term_CONTROL_LANE_1)\n          \nvocabulary_term_CONTROL_LANE_2 = tr.createNewVocabularyTerm('2')\nvocabulary_term_CONTROL_LANE_2.setDescription(None)\nvocabulary_term_CONTROL_LANE_2.setLabel(None)\nvocabulary_term_CONTROL_LANE_2.setOrdinal(2)\nvocabulary_CONTROL_LANE.addTerm(vocabulary_term_CONTROL_LANE_2)\n          \nvocabulary_term_CONTROL_LANE_3 = tr.createNewVocabularyTerm('3')\nvocabulary_term_CONTROL_LANE_3.setDescription(None)\nvocabulary_term_CONTROL_LANE_3.setLabel(None)\nvocabulary_term_CONTROL_LANE_3.setOrdinal(3)\nvocabulary_CONTROL_LANE.addTerm(vocabulary_term_CONTROL_LANE_3)\n          \nvocabulary_term_CONTROL_LANE_4 = tr.createNewVocabularyTerm('4')\nvocabulary_term_CONTROL_LANE_4.setDescription(None)\nvocabulary_term_CONTROL_LANE_4.setLabel(None)\nvocabulary_term_CONTROL_LANE_4.setOrdinal(4)\nvocabulary_CONTROL_LANE.addTerm(vocabulary_term_CONTROL_LANE_4)\n          \nvocabulary_term_CONTROL_LANE_5 = tr.createNewVocabularyTerm('5')\nvocabulary_term_CONTROL_LANE_5.setDescription(None)\nvocabulary_term_CONTROL_LANE_5.setLabel(None)\nvocabulary_term_CONTROL_LANE_5.setOrdinal(5)\nvocabulary_CONTROL_LANE.addTerm(vocabulary_term_CONTROL_LANE_5)\n          \nvocabulary_term_CONTROL_LANE_6 = tr.createNewVocabularyTerm('6')\nvocabulary_term_CONTROL_LANE_6.setDescription(None)\nvocabulary_term_CONTROL_LANE_6.setLabel(None)\nvocabulary_term_CONTROL_LANE_6.setOrdinal(6)\nvocabulary_CONTROL_LANE.addTerm(vocabulary_term_CONTROL_LANE_6)\n          \nvocabulary_term_CONTROL_LANE_7 = tr.createNewVocabularyTerm('7')\nvocabulary_term_CONTROL_LANE_7.setDescription(None)\nvocabulary_term_CONTROL_LANE_7.setLabel(None)\nvocabulary_term_CONTROL_LANE_7.setOrdinal(7)\nvocabulary_CONTROL_LANE.addTerm(vocabulary_term_CONTROL_LANE_7)\n          \nvocabulary_term_CONTROL_LANE_8 = tr.createNewVocabularyTerm('8')\nvocabulary_term_CONTROL_LANE_8.setDescription(None)\nvocabulary_term_CONTROL_LANE_8.setLabel(None)\nvocabulary_term_CONTROL_LANE_8.setOrdinal(8)\nvocabulary_CONTROL_LANE.addTerm(vocabulary_term_CONTROL_LANE_8)\n          \nvocabulary_term_CONTROL_LANE_NONE = tr.createNewVocabularyTerm('NONE')\nvocabulary_term_CONTROL_LANE_NONE.setDescription(None)\nvocabulary_term_CONTROL_LANE_NONE.setLabel(None)\nvocabulary_term_CONTROL_LANE_NONE.setOrdinal(9)\nvocabulary_CONTROL_LANE.addTerm(vocabulary_term_CONTROL_LANE_NONE)\n          \nvocabulary_term_CONTROL_LANE_0 = tr.createNewVocabularyTerm('0')\nvocabulary_term_CONTROL_LANE_0.setDescription(None)\nvocabulary_term_CONTROL_LANE_0.setLabel(None)\nvocabulary_term_CONTROL_LANE_0.setOrdinal(10)\nvocabulary_CONTROL_LANE.addTerm(vocabulary_term_CONTROL_LANE_0)\n    \nvocabulary_END_TYPE = tr.getOrCreateNewVocabulary('END_TYPE')\nvocabulary_END_TYPE.setDescription('Sequencing method')\nvocabulary_END_TYPE.setUrlTemplate(None)\nvocabulary_END_TYPE.setManagedInternally(False)\nvocabulary_END_TYPE.setChosenFromList(True)\n          \nvocabulary_term_END_TYPE_SINGLE_READ = tr.createNewVocabularyTerm('SINGLE_READ')\nvocabulary_term_END_TYPE_SINGLE_READ.setDescription(None)\nvocabulary_term_END_TYPE_SINGLE_READ.setLabel(None)\nvocabulary_term_END_TYPE_SINGLE_READ.setOrdinal(1)\nvocabulary_END_TYPE.addTerm(vocabulary_term_END_TYPE_SINGLE_READ)\n          \nvocabulary_term_END_TYPE_PAIRED_END = tr.createNewVocabularyTerm('PAIRED_END')\nvocabulary_term_END_TYPE_PAIRED_END.setDescription(None)\nvocabulary_term_END_TYPE_PAIRED_END.setLabel(None)\nvocabulary_term_END_TYPE_PAIRED_END.setOrdinal(2)\nvocabulary_END_TYPE.addTerm(vocabulary_term_END_TYPE_PAIRED_END)\n    \nvocabulary_EXPERIMENT_DESIGN = tr.getOrCreateNewVocabulary('EXPERIMENT_DESIGN')\nvocabulary_EXPERIMENT_DESIGN.setDescription('General Intent')\nvocabulary_EXPERIMENT_DESIGN.setUrlTemplate(None)\nvocabulary_EXPERIMENT_DESIGN.setManagedInternally(False)\nvocabulary_EXPERIMENT_DESIGN.setChosenFromList(True)\n          \nvocabulary_term_EXPERIMENT_DESIGN_BINDING_SITE_IDENTIFICATION = tr.createNewVocabularyTerm('BINDING_SITE_IDENTIFICATION')\nvocabulary_term_EXPERIMENT_DESIGN_BINDING_SITE_IDENTIFICATION.setDescription(None)\nvocabulary_term_EXPERIMENT_DESIGN_BINDING_SITE_IDENTIFICATION.setLabel('Binding Site Identification')\nvocabulary_term_EXPERIMENT_DESIGN_BINDING_SITE_IDENTIFICATION.setOrdinal(1)\nvocabulary_EXPERIMENT_DESIGN.addTerm(vocabulary_term_EXPERIMENT_DESIGN_BINDING_SITE_IDENTIFICATION)\n          \nvocabulary_term_EXPERIMENT_DESIGN_CHROMATIN_MARKS = tr.createNewVocabularyTerm('CHROMATIN_MARKS')\nvocabulary_term_EXPERIMENT_DESIGN_CHROMATIN_MARKS.setDescription(None)\nvocabulary_term_EXPERIMENT_DESIGN_CHROMATIN_MARKS.setLabel('Chromatin Marks')\nvocabulary_term_EXPERIMENT_DESIGN_CHROMATIN_MARKS.setOrdinal(2)\nvocabulary_EXPERIMENT_DESIGN.addTerm(vocabulary_term_EXPERIMENT_DESIGN_CHROMATIN_MARKS)\n          \nvocabulary_term_EXPERIMENT_DESIGN_COMPARATIVE_GENOMIC_HYBRIDIZATION = tr.createNewVocabularyTerm('COMPARATIVE_GENOMIC_HYBRIDIZATION')\nvocabulary_term_EXPERIMENT_DESIGN_COMPARATIVE_GENOMIC_HYBRIDIZATION.setDescription(None)\nvocabulary_term_EXPERIMENT_DESIGN_COMPARATIVE_GENOMIC_HYBRIDIZATION.setLabel('Comparative Genomic Hybridization')\nvocabulary_term_EXPERIMENT_DESIGN_COMPARATIVE_GENOMIC_HYBRIDIZATION.setOrdinal(3)\nvocabulary_EXPERIMENT_DESIGN.addTerm(vocabulary_term_EXPERIMENT_DESIGN_COMPARATIVE_GENOMIC_HYBRIDIZATION)\n          \nvocabulary_term_EXPERIMENT_DESIGN_DIFFERENTIAL_EXPRESSION = tr.createNewVocabularyTerm('DIFFERENTIAL_EXPRESSION')\nvocabulary_term_EXPERIMENT_DESIGN_DIFFERENTIAL_EXPRESSION.setDescription(None)\nvocabulary_term_EXPERIMENT_DESIGN_DIFFERENTIAL_EXPRESSION.setLabel('Differential Expression')\nvocabulary_term_EXPERIMENT_DESIGN_DIFFERENTIAL_EXPRESSION.setOrdinal(4)\nvocabulary_EXPERIMENT_DESIGN.addTerm(vocabulary_term_EXPERIMENT_DESIGN_DIFFERENTIAL_EXPRESSION)\n          \nvocabulary_term_EXPERIMENT_DESIGN_DIFFERENTIAL_SPLICING = tr.createNewVocabularyTerm('DIFFERENTIAL_SPLICING')\nvocabulary_term_EXPERIMENT_DESIGN_DIFFERENTIAL_SPLICING.setDescription(None)\nvocabulary_term_EXPERIMENT_DESIGN_DIFFERENTIAL_SPLICING.setLabel('Differential Splicing')\nvocabulary_term_EXPERIMENT_DESIGN_DIFFERENTIAL_SPLICING.setOrdinal(5)\nvocabulary_EXPERIMENT_DESIGN.addTerm(vocabulary_term_EXPERIMENT_DESIGN_DIFFERENTIAL_SPLICING)\n          \nvocabulary_term_EXPERIMENT_DESIGN_EXPRESSION = tr.createNewVocabularyTerm('EXPRESSION')\nvocabulary_term_EXPERIMENT_DESIGN_EXPRESSION.setDescription(None)\nvocabulary_term_EXPERIMENT_DESIGN_EXPRESSION.setLabel('Expression')\nvocabulary_term_EXPERIMENT_DESIGN_EXPRESSION.setOrdinal(6)\nvocabulary_EXPERIMENT_DESIGN.addTerm(vocabulary_term_EXPERIMENT_DESIGN_EXPRESSION)\n          \nvocabulary_term_EXPERIMENT_DESIGN_SEQUENCE_ENRICHMENT = tr.createNewVocabularyTerm('SEQUENCE_ENRICHMENT')\nvocabulary_term_EXPERIMENT_DESIGN_SEQUENCE_ENRICHMENT.setDescription(None)\nvocabulary_term_EXPERIMENT_DESIGN_SEQUENCE_ENRICHMENT.setLabel('Sequence Enrichment')\nvocabulary_term_EXPERIMENT_DESIGN_SEQUENCE_ENRICHMENT.setOrdinal(7)\nvocabulary_EXPERIMENT_DESIGN.addTerm(vocabulary_term_EXPERIMENT_DESIGN_SEQUENCE_ENRICHMENT)\n          \nvocabulary_term_EXPERIMENT_DESIGN_TRANSCRIPT_IDENTIFICATION = tr.createNewVocabularyTerm('TRANSCRIPT_IDENTIFICATION')\nvocabulary_term_EXPERIMENT_DESIGN_TRANSCRIPT_IDENTIFICATION.setDescription(None)\nvocabulary_term_EXPERIMENT_DESIGN_TRANSCRIPT_IDENTIFICATION.setLabel('Transcript Identification')\nvocabulary_term_EXPERIMENT_DESIGN_TRANSCRIPT_IDENTIFICATION.setOrdinal(8)\nvocabulary_EXPERIMENT_DESIGN.addTerm(vocabulary_term_EXPERIMENT_DESIGN_TRANSCRIPT_IDENTIFICATION)\n          \nvocabulary_term_EXPERIMENT_DESIGN_OTHER = tr.createNewVocabularyTerm('OTHER')\nvocabulary_term_EXPERIMENT_DESIGN_OTHER.setDescription(None)\nvocabulary_term_EXPERIMENT_DESIGN_OTHER.setLabel('Other')\nvocabulary_term_EXPERIMENT_DESIGN_OTHER.setOrdinal(9)\nvocabulary_EXPERIMENT_DESIGN.addTerm(vocabulary_term_EXPERIMENT_DESIGN_OTHER)\n    \nvocabulary_INDEX1 = tr.getOrCreateNewVocabulary('INDEX1')\nvocabulary_INDEX1.setDescription('Index 1 for Illumina Indexing')\nvocabulary_INDEX1.setUrlTemplate(None)\nvocabulary_INDEX1.setManagedInternally(False)\nvocabulary_INDEX1.setChosenFromList(True)\n          \nvocabulary_term_INDEX1_NONE = tr.createNewVocabularyTerm('NONE')\nvocabulary_term_INDEX1_NONE.setDescription('No Index')\nvocabulary_term_INDEX1_NONE.setLabel(' None')\nvocabulary_term_INDEX1_NONE.setOrdinal(1)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_NONE)\n          \nvocabulary_term_INDEX1_ATCACGA = tr.createNewVocabularyTerm('ATCACGA')\nvocabulary_term_INDEX1_ATCACGA.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_ATCACGA.setLabel('Index1 ATCACGA')\nvocabulary_term_INDEX1_ATCACGA.setOrdinal(2)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_ATCACGA)\n          \nvocabulary_term_INDEX1_CGATGTA = tr.createNewVocabularyTerm('CGATGTA')\nvocabulary_term_INDEX1_CGATGTA.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_CGATGTA.setLabel('Index2 CGATGTA')\nvocabulary_term_INDEX1_CGATGTA.setOrdinal(3)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CGATGTA)\n          \nvocabulary_term_INDEX1_TTAGGCA = tr.createNewVocabularyTerm('TTAGGCA')\nvocabulary_term_INDEX1_TTAGGCA.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_TTAGGCA.setLabel('Index3 TTAGGCA')\nvocabulary_term_INDEX1_TTAGGCA.setOrdinal(4)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TTAGGCA)\n          \nvocabulary_term_INDEX1_TGACCAA = tr.createNewVocabularyTerm('TGACCAA')\nvocabulary_term_INDEX1_TGACCAA.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_TGACCAA.setLabel('Index4 TGACCAA')\nvocabulary_term_INDEX1_TGACCAA.setOrdinal(5)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TGACCAA)\n          \nvocabulary_term_INDEX1_ACAGTGA = tr.createNewVocabularyTerm('ACAGTGA')\nvocabulary_term_INDEX1_ACAGTGA.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_ACAGTGA.setLabel('Index5 ACAGTGA')\nvocabulary_term_INDEX1_ACAGTGA.setOrdinal(6)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_ACAGTGA)\n          \nvocabulary_term_INDEX1_GCCAATA = tr.createNewVocabularyTerm('GCCAATA')\nvocabulary_term_INDEX1_GCCAATA.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_GCCAATA.setLabel('Index6 GCCAATA')\nvocabulary_term_INDEX1_GCCAATA.setOrdinal(7)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GCCAATA)\n          \nvocabulary_term_INDEX1_CAGATCA = tr.createNewVocabularyTerm('CAGATCA')\nvocabulary_term_INDEX1_CAGATCA.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_CAGATCA.setLabel('Index7 CAGATCA')\nvocabulary_term_INDEX1_CAGATCA.setOrdinal(8)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CAGATCA)\n          \nvocabulary_term_INDEX1_ACTTGAA = tr.createNewVocabularyTerm('ACTTGAA')\nvocabulary_term_INDEX1_ACTTGAA.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_ACTTGAA.setLabel('Index8 ACTTGAA')\nvocabulary_term_INDEX1_ACTTGAA.setOrdinal(9)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_ACTTGAA)\n          \nvocabulary_term_INDEX1_GATCAGA = tr.createNewVocabularyTerm('GATCAGA')\nvocabulary_term_INDEX1_GATCAGA.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_GATCAGA.setLabel('Index9 GATCAGA')\nvocabulary_term_INDEX1_GATCAGA.setOrdinal(10)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GATCAGA)\n          \nvocabulary_term_INDEX1_TAGCTTA = tr.createNewVocabularyTerm('TAGCTTA')\nvocabulary_term_INDEX1_TAGCTTA.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_TAGCTTA.setLabel('Index10 TAGCTTA')\nvocabulary_term_INDEX1_TAGCTTA.setOrdinal(11)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TAGCTTA)\n          \nvocabulary_term_INDEX1_GGCTACA = tr.createNewVocabularyTerm('GGCTACA')\nvocabulary_term_INDEX1_GGCTACA.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_GGCTACA.setLabel('Index11 GGCTACA')\nvocabulary_term_INDEX1_GGCTACA.setOrdinal(12)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GGCTACA)\n          \nvocabulary_term_INDEX1_CTTGTAA = tr.createNewVocabularyTerm('CTTGTAA')\nvocabulary_term_INDEX1_CTTGTAA.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_CTTGTAA.setLabel('Index12 CTTGTAA')\nvocabulary_term_INDEX1_CTTGTAA.setOrdinal(13)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CTTGTAA)\n          \nvocabulary_term_INDEX1_AGATACA = tr.createNewVocabularyTerm('AGATACA')\nvocabulary_term_INDEX1_AGATACA.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_AGATACA.setLabel('Index13 AGATAC')\nvocabulary_term_INDEX1_AGATACA.setOrdinal(14)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_AGATACA)\n          \nvocabulary_term_INDEX1_AGTTCCG = tr.createNewVocabularyTerm('AGTTCCG')\nvocabulary_term_INDEX1_AGTTCCG.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_AGTTCCG.setLabel('Index14 AGTTCCG')\nvocabulary_term_INDEX1_AGTTCCG.setOrdinal(15)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_AGTTCCG)\n          \nvocabulary_term_INDEX1_ATGTCAG = tr.createNewVocabularyTerm('ATGTCAG')\nvocabulary_term_INDEX1_ATGTCAG.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_ATGTCAG.setLabel('Index15 ATGTCAG')\nvocabulary_term_INDEX1_ATGTCAG.setOrdinal(16)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_ATGTCAG)\n          \nvocabulary_term_INDEX1_CCGTCCC = tr.createNewVocabularyTerm('CCGTCCC')\nvocabulary_term_INDEX1_CCGTCCC.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_CCGTCCC.setLabel('Index16 CCGTCCC')\nvocabulary_term_INDEX1_CCGTCCC.setOrdinal(17)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CCGTCCC)\n          \nvocabulary_term_INDEX1_GTCCGCA = tr.createNewVocabularyTerm('GTCCGCA')\nvocabulary_term_INDEX1_GTCCGCA.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_GTCCGCA.setLabel('Index18 GTCCGCA')\nvocabulary_term_INDEX1_GTCCGCA.setOrdinal(18)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GTCCGCA)\n          \nvocabulary_term_INDEX1_GTGAAAC = tr.createNewVocabularyTerm('GTGAAAC')\nvocabulary_term_INDEX1_GTGAAAC.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_GTGAAAC.setLabel('Index19 GTGAAAC')\nvocabulary_term_INDEX1_GTGAAAC.setOrdinal(19)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GTGAAAC)\n          \nvocabulary_term_INDEX1_GTGGCCT = tr.createNewVocabularyTerm('GTGGCCT')\nvocabulary_term_INDEX1_GTGGCCT.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_GTGGCCT.setLabel('Index20 GTGGCCT')\nvocabulary_term_INDEX1_GTGGCCT.setOrdinal(20)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GTGGCCT)\n          \nvocabulary_term_INDEX1_GTTTCGG = tr.createNewVocabularyTerm('GTTTCGG')\nvocabulary_term_INDEX1_GTTTCGG.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_GTTTCGG.setLabel('Index21 GTTTCGG')\nvocabulary_term_INDEX1_GTTTCGG.setOrdinal(21)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GTTTCGG)\n          \nvocabulary_term_INDEX1_CGTACGT = tr.createNewVocabularyTerm('CGTACGT')\nvocabulary_term_INDEX1_CGTACGT.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_CGTACGT.setLabel('Index22 CGTACGT')\nvocabulary_term_INDEX1_CGTACGT.setOrdinal(22)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CGTACGT)\n          \nvocabulary_term_INDEX1_GAGTGGA = tr.createNewVocabularyTerm('GAGTGGA')\nvocabulary_term_INDEX1_GAGTGGA.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_GAGTGGA.setLabel('Index23 GAGTGGA')\nvocabulary_term_INDEX1_GAGTGGA.setOrdinal(23)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GAGTGGA)\n          \nvocabulary_term_INDEX1_ACTGATA = tr.createNewVocabularyTerm('ACTGATA')\nvocabulary_term_INDEX1_ACTGATA.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_ACTGATA.setLabel('Index25 ACTGATA')\nvocabulary_term_INDEX1_ACTGATA.setOrdinal(24)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_ACTGATA)\n          \nvocabulary_term_INDEX1_ATTCCTT = tr.createNewVocabularyTerm('ATTCCTT')\nvocabulary_term_INDEX1_ATTCCTT.setDescription('Illumina, Nextera or Scriptseq')\nvocabulary_term_INDEX1_ATTCCTT.setLabel('Index27 ATTCCTT')\nvocabulary_term_INDEX1_ATTCCTT.setOrdinal(25)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_ATTCCTT)\n          \nvocabulary_term_INDEX1_TAAGGCGA = tr.createNewVocabularyTerm('TAAGGCGA')\nvocabulary_term_INDEX1_TAAGGCGA.setDescription('Nextera DNA')\nvocabulary_term_INDEX1_TAAGGCGA.setLabel('Index1 (i7) N701 TAAGGCGA')\nvocabulary_term_INDEX1_TAAGGCGA.setOrdinal(26)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TAAGGCGA)\n          \nvocabulary_term_INDEX1_CGTACTAG = tr.createNewVocabularyTerm('CGTACTAG')\nvocabulary_term_INDEX1_CGTACTAG.setDescription('Nextera DNA')\nvocabulary_term_INDEX1_CGTACTAG.setLabel('Index1 (i7) N702 CGTACTAG')\nvocabulary_term_INDEX1_CGTACTAG.setOrdinal(27)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CGTACTAG)\n          \nvocabulary_term_INDEX1_AGGCAGAA = tr.createNewVocabularyTerm('AGGCAGAA')\nvocabulary_term_INDEX1_AGGCAGAA.setDescription('Nextera DNA')\nvocabulary_term_INDEX1_AGGCAGAA.setLabel('Index1 (i7) N703 AGGCAGAA')\nvocabulary_term_INDEX1_AGGCAGAA.setOrdinal(28)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_AGGCAGAA)\n          \nvocabulary_term_INDEX1_TCCTGAGC = tr.createNewVocabularyTerm('TCCTGAGC')\nvocabulary_term_INDEX1_TCCTGAGC.setDescription('Nextera DNA')\nvocabulary_term_INDEX1_TCCTGAGC.setLabel('Index1 (i7) N704 TCCTGAGC')\nvocabulary_term_INDEX1_TCCTGAGC.setOrdinal(29)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TCCTGAGC)\n          \nvocabulary_term_INDEX1_GGACTCCT = tr.createNewVocabularyTerm('GGACTCCT')\nvocabulary_term_INDEX1_GGACTCCT.setDescription('Nextera DNA')\nvocabulary_term_INDEX1_GGACTCCT.setLabel('Index1 (i7) N705 GGACTCCT')\nvocabulary_term_INDEX1_GGACTCCT.setOrdinal(30)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GGACTCCT)\n          \nvocabulary_term_INDEX1_TAGGCATG = tr.createNewVocabularyTerm('TAGGCATG')\nvocabulary_term_INDEX1_TAGGCATG.setDescription('Nextera DNA')\nvocabulary_term_INDEX1_TAGGCATG.setLabel('Index1 (i7) N706 TAGGCATG')\nvocabulary_term_INDEX1_TAGGCATG.setOrdinal(31)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TAGGCATG)\n          \nvocabulary_term_INDEX1_CTCTCTAC = tr.createNewVocabularyTerm('CTCTCTAC')\nvocabulary_term_INDEX1_CTCTCTAC.setDescription('Nextera DNA')\nvocabulary_term_INDEX1_CTCTCTAC.setLabel('Index1 (i7) N707 CTCTCTAC')\nvocabulary_term_INDEX1_CTCTCTAC.setOrdinal(32)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CTCTCTAC)\n          \nvocabulary_term_INDEX1_CAGAGAGG = tr.createNewVocabularyTerm('CAGAGAGG')\nvocabulary_term_INDEX1_CAGAGAGG.setDescription('Nextera DNA')\nvocabulary_term_INDEX1_CAGAGAGG.setLabel('Index1 (i7) N708 CAGAGAGG')\nvocabulary_term_INDEX1_CAGAGAGG.setOrdinal(33)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CAGAGAGG)\n          \nvocabulary_term_INDEX1_GCTACGCT = tr.createNewVocabularyTerm('GCTACGCT')\nvocabulary_term_INDEX1_GCTACGCT.setDescription('Nextera DNA')\nvocabulary_term_INDEX1_GCTACGCT.setLabel('Index1 (i7) N709 GCTACGCT')\nvocabulary_term_INDEX1_GCTACGCT.setOrdinal(34)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GCTACGCT)\n          \nvocabulary_term_INDEX1_CGAGGCTG = tr.createNewVocabularyTerm('CGAGGCTG')\nvocabulary_term_INDEX1_CGAGGCTG.setDescription('Nextera DNA')\nvocabulary_term_INDEX1_CGAGGCTG.setLabel('Index1 (i7) N710 CGAGGCTG')\nvocabulary_term_INDEX1_CGAGGCTG.setOrdinal(35)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CGAGGCTG)\n          \nvocabulary_term_INDEX1_AAGAGGCA = tr.createNewVocabularyTerm('AAGAGGCA')\nvocabulary_term_INDEX1_AAGAGGCA.setDescription('Nextera DNA')\nvocabulary_term_INDEX1_AAGAGGCA.setLabel('Index1 (i7) N711 AAGAGGCA')\nvocabulary_term_INDEX1_AAGAGGCA.setOrdinal(36)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_AAGAGGCA)\n          \nvocabulary_term_INDEX1_GTAGAGGA = tr.createNewVocabularyTerm('GTAGAGGA')\nvocabulary_term_INDEX1_GTAGAGGA.setDescription('Nextera DNA')\nvocabulary_term_INDEX1_GTAGAGGA.setLabel('Index1 (i7) N712 GTAGAGGA')\nvocabulary_term_INDEX1_GTAGAGGA.setOrdinal(37)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GTAGAGGA)\n          \nvocabulary_term_INDEX1_AAGACTA = tr.createNewVocabularyTerm('AAGACTA')\nvocabulary_term_INDEX1_AAGACTA.setDescription(None)\nvocabulary_term_INDEX1_AAGACTA.setLabel('02 AAGACT')\nvocabulary_term_INDEX1_AAGACTA.setOrdinal(38)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_AAGACTA)\n          \nvocabulary_term_INDEX1_ACTTCAA = tr.createNewVocabularyTerm('ACTTCAA')\nvocabulary_term_INDEX1_ACTTCAA.setDescription(None)\nvocabulary_term_INDEX1_ACTTCAA.setLabel('10 ACTTCA')\nvocabulary_term_INDEX1_ACTTCAA.setOrdinal(39)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_ACTTCAA)\n          \nvocabulary_term_INDEX1_AGGTTGA = tr.createNewVocabularyTerm('AGGTTGA')\nvocabulary_term_INDEX1_AGGTTGA.setDescription(None)\nvocabulary_term_INDEX1_AGGTTGA.setLabel('17 AGGTTG')\nvocabulary_term_INDEX1_AGGTTGA.setOrdinal(40)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_AGGTTGA)\n          \nvocabulary_term_INDEX1_TTCGTCA = tr.createNewVocabularyTerm('TTCGTCA')\nvocabulary_term_INDEX1_TTCGTCA.setDescription(None)\nvocabulary_term_INDEX1_TTCGTCA.setLabel('17 TTCGTCA')\nvocabulary_term_INDEX1_TTCGTCA.setOrdinal(41)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TTCGTCA)\n          \nvocabulary_term_INDEX1_AGCATAA = tr.createNewVocabularyTerm('AGCATAA')\nvocabulary_term_INDEX1_AGCATAA.setDescription(None)\nvocabulary_term_INDEX1_AGCATAA.setLabel('20 AGCATAA')\nvocabulary_term_INDEX1_AGCATAA.setOrdinal(42)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_AGCATAA)\n          \nvocabulary_term_INDEX1_ATACGCA = tr.createNewVocabularyTerm('ATACGCA')\nvocabulary_term_INDEX1_ATACGCA.setDescription(None)\nvocabulary_term_INDEX1_ATACGCA.setLabel('20 ATACGC')\nvocabulary_term_INDEX1_ATACGCA.setOrdinal(43)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_ATACGCA)\n          \nvocabulary_term_INDEX1_CAGATGA = tr.createNewVocabularyTerm('CAGATGA')\nvocabulary_term_INDEX1_CAGATGA.setDescription(None)\nvocabulary_term_INDEX1_CAGATGA.setLabel('28 CAGATG')\nvocabulary_term_INDEX1_CAGATGA.setOrdinal(44)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CAGATGA)\n          \nvocabulary_term_INDEX1_CCGAATA = tr.createNewVocabularyTerm('CCGAATA')\nvocabulary_term_INDEX1_CCGAATA.setDescription(None)\nvocabulary_term_INDEX1_CCGAATA.setLabel('34 CCGAAT')\nvocabulary_term_INDEX1_CCGAATA.setOrdinal(45)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CCGAATA)\n          \nvocabulary_term_INDEX1_CGCTCGA = tr.createNewVocabularyTerm('CGCTCGA')\nvocabulary_term_INDEX1_CGCTCGA.setDescription(None)\nvocabulary_term_INDEX1_CGCTCGA.setLabel('43 CGCTCG')\nvocabulary_term_INDEX1_CGCTCGA.setOrdinal(46)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CGCTCGA)\n          \nvocabulary_term_INDEX1_CGTATTA = tr.createNewVocabularyTerm('CGTATTA')\nvocabulary_term_INDEX1_CGTATTA.setDescription(None)\nvocabulary_term_INDEX1_CGTATTA.setLabel('45 CGTATT')\nvocabulary_term_INDEX1_CGTATTA.setOrdinal(47)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CGTATTA)\n          \nvocabulary_term_INDEX1_CCATGAA = tr.createNewVocabularyTerm('CCATGAA')\nvocabulary_term_INDEX1_CCATGAA.setDescription(None)\nvocabulary_term_INDEX1_CCATGAA.setLabel('50 CCATGAA')\nvocabulary_term_INDEX1_CCATGAA.setOrdinal(48)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CCATGAA)\n          \nvocabulary_term_INDEX1_CTGACCA = tr.createNewVocabularyTerm('CTGACCA')\nvocabulary_term_INDEX1_CTGACCA.setDescription(None)\nvocabulary_term_INDEX1_CTGACCA.setLabel('50 CTGACC')\nvocabulary_term_INDEX1_CTGACCA.setOrdinal(49)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CTGACCA)\n          \nvocabulary_term_INDEX1_GAAGCCA = tr.createNewVocabularyTerm('GAAGCCA')\nvocabulary_term_INDEX1_GAAGCCA.setDescription(None)\nvocabulary_term_INDEX1_GAAGCCA.setLabel('52 GAAGCC')\nvocabulary_term_INDEX1_GAAGCCA.setOrdinal(50)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GAAGCCA)\n          \nvocabulary_term_INDEX1_NOINDEX = tr.createNewVocabularyTerm('NOINDEX')\nvocabulary_term_INDEX1_NOINDEX.setDescription(None)\nvocabulary_term_INDEX1_NOINDEX.setLabel(None)\nvocabulary_term_INDEX1_NOINDEX.setOrdinal(51)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_NOINDEX)\n          \nvocabulary_term_INDEX1_GCTGAAA = tr.createNewVocabularyTerm('GCTGAAA')\nvocabulary_term_INDEX1_GCTGAAA.setDescription(None)\nvocabulary_term_INDEX1_GCTGAAA.setLabel('59 GCTGAA')\nvocabulary_term_INDEX1_GCTGAAA.setOrdinal(52)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GCTGAAA)\n          \nvocabulary_term_INDEX1_GTCGCGA = tr.createNewVocabularyTerm('GTCGCGA')\nvocabulary_term_INDEX1_GTCGCGA.setDescription(None)\nvocabulary_term_INDEX1_GTCGCGA.setLabel('64 GTCGCG')\nvocabulary_term_INDEX1_GTCGCGA.setOrdinal(53)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GTCGCGA)\n          \nvocabulary_term_INDEX1_TAAGATA = tr.createNewVocabularyTerm('TAAGATA')\nvocabulary_term_INDEX1_TAAGATA.setDescription(None)\nvocabulary_term_INDEX1_TAAGATA.setLabel('65 TAAGAT')\nvocabulary_term_INDEX1_TAAGATA.setOrdinal(54)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TAAGATA)\n          \nvocabulary_term_INDEX1_GCGCTGA = tr.createNewVocabularyTerm('GCGCTGA')\nvocabulary_term_INDEX1_GCGCTGA.setDescription(None)\nvocabulary_term_INDEX1_GCGCTGA.setLabel('66 GCGCTGA')\nvocabulary_term_INDEX1_GCGCTGA.setOrdinal(55)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GCGCTGA)\n          \nvocabulary_term_INDEX1_TATCGTA = tr.createNewVocabularyTerm('TATCGTA')\nvocabulary_term_INDEX1_TATCGTA.setDescription(None)\nvocabulary_term_INDEX1_TATCGTA.setLabel('66 TATCGT')\nvocabulary_term_INDEX1_TATCGTA.setOrdinal(56)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TATCGTA)\n          \nvocabulary_term_INDEX1_TCCTACA = tr.createNewVocabularyTerm('TCCTACA')\nvocabulary_term_INDEX1_TCCTACA.setDescription(None)\nvocabulary_term_INDEX1_TCCTACA.setLabel('68 TCCTAC')\nvocabulary_term_INDEX1_TCCTACA.setOrdinal(57)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TCCTACA)\n          \nvocabulary_term_INDEX1_TCTATAA = tr.createNewVocabularyTerm('TCTATAA')\nvocabulary_term_INDEX1_TCTATAA.setDescription(None)\nvocabulary_term_INDEX1_TCTATAA.setLabel('70 TCTATA')\nvocabulary_term_INDEX1_TCTATAA.setOrdinal(58)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TCTATAA)\n          \nvocabulary_term_INDEX1_TTACTTA = tr.createNewVocabularyTerm('TTACTTA')\nvocabulary_term_INDEX1_TTACTTA.setDescription(None)\nvocabulary_term_INDEX1_TTACTTA.setLabel('74 TTACTT')\nvocabulary_term_INDEX1_TTACTTA.setOrdinal(59)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TTACTTA)\n          \nvocabulary_term_INDEX1_TTCCGAA = tr.createNewVocabularyTerm('TTCCGAA')\nvocabulary_term_INDEX1_TTCCGAA.setDescription(None)\nvocabulary_term_INDEX1_TTCCGAA.setLabel('75 TTCCGA')\nvocabulary_term_INDEX1_TTCCGAA.setOrdinal(60)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TTCCGAA)\n          \nvocabulary_term_INDEX1_ATGTCAA = tr.createNewVocabularyTerm('ATGTCAA')\nvocabulary_term_INDEX1_ATGTCAA.setDescription(None)\nvocabulary_term_INDEX1_ATGTCAA.setLabel('DNA Adapter 15')\nvocabulary_term_INDEX1_ATGTCAA.setOrdinal(61)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_ATGTCAA)\n          \nvocabulary_term_INDEX1_CCGTCCA = tr.createNewVocabularyTerm('CCGTCCA')\nvocabulary_term_INDEX1_CCGTCCA.setDescription(None)\nvocabulary_term_INDEX1_CCGTCCA.setLabel('DNA Adapter 16')\nvocabulary_term_INDEX1_CCGTCCA.setOrdinal(62)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CCGTCCA)\n          \nvocabulary_term_INDEX1_GTAGAGA = tr.createNewVocabularyTerm('GTAGAGA')\nvocabulary_term_INDEX1_GTAGAGA.setDescription(None)\nvocabulary_term_INDEX1_GTAGAGA.setLabel('DNA Adapter 17')\nvocabulary_term_INDEX1_GTAGAGA.setOrdinal(63)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GTAGAGA)\n          \nvocabulary_term_INDEX1_GTGAAAA = tr.createNewVocabularyTerm('GTGAAAA')\nvocabulary_term_INDEX1_GTGAAAA.setDescription(None)\nvocabulary_term_INDEX1_GTGAAAA.setLabel('DNA Adapter 19')\nvocabulary_term_INDEX1_GTGAAAA.setOrdinal(64)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GTGAAAA)\n          \nvocabulary_term_INDEX1_GTGGCCA = tr.createNewVocabularyTerm('GTGGCCA')\nvocabulary_term_INDEX1_GTGGCCA.setDescription(None)\nvocabulary_term_INDEX1_GTGGCCA.setLabel('DNA Adapter 20')\nvocabulary_term_INDEX1_GTGGCCA.setOrdinal(65)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GTGGCCA)\n          \nvocabulary_term_INDEX1_GTTTCGA = tr.createNewVocabularyTerm('GTTTCGA')\nvocabulary_term_INDEX1_GTTTCGA.setDescription(None)\nvocabulary_term_INDEX1_GTTTCGA.setLabel('DNA Adapter 21')\nvocabulary_term_INDEX1_GTTTCGA.setOrdinal(66)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GTTTCGA)\n          \nvocabulary_term_INDEX1_CGTACGA = tr.createNewVocabularyTerm('CGTACGA')\nvocabulary_term_INDEX1_CGTACGA.setDescription(None)\nvocabulary_term_INDEX1_CGTACGA.setLabel('DNA Adapter 22')\nvocabulary_term_INDEX1_CGTACGA.setOrdinal(67)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CGTACGA)\n          \nvocabulary_term_INDEX1_GGTAGCA = tr.createNewVocabularyTerm('GGTAGCA')\nvocabulary_term_INDEX1_GGTAGCA.setDescription(None)\nvocabulary_term_INDEX1_GGTAGCA.setLabel('DNA Adapter 24')\nvocabulary_term_INDEX1_GGTAGCA.setOrdinal(68)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GGTAGCA)\n          \nvocabulary_term_INDEX1_ATGAGCA = tr.createNewVocabularyTerm('ATGAGCA')\nvocabulary_term_INDEX1_ATGAGCA.setDescription(None)\nvocabulary_term_INDEX1_ATGAGCA.setLabel('DNA Adapter 26')\nvocabulary_term_INDEX1_ATGAGCA.setOrdinal(69)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_ATGAGCA)\n          \nvocabulary_term_INDEX1_ATTCCTA = tr.createNewVocabularyTerm('ATTCCTA')\nvocabulary_term_INDEX1_ATTCCTA.setDescription(None)\nvocabulary_term_INDEX1_ATTCCTA.setLabel('DNA Adapter 27')\nvocabulary_term_INDEX1_ATTCCTA.setOrdinal(70)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_ATTCCTA)\n          \nvocabulary_term_INDEX1_CAAAAGA = tr.createNewVocabularyTerm('CAAAAGA')\nvocabulary_term_INDEX1_CAAAAGA.setDescription(None)\nvocabulary_term_INDEX1_CAAAAGA.setLabel('DNA Adapter 28')\nvocabulary_term_INDEX1_CAAAAGA.setOrdinal(71)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CAAAAGA)\n          \nvocabulary_term_INDEX1_CAACTAA = tr.createNewVocabularyTerm('CAACTAA')\nvocabulary_term_INDEX1_CAACTAA.setDescription(None)\nvocabulary_term_INDEX1_CAACTAA.setLabel('DNA Adapter 29')\nvocabulary_term_INDEX1_CAACTAA.setOrdinal(72)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CAACTAA)\n          \nvocabulary_term_INDEX1_CACCGGA = tr.createNewVocabularyTerm('CACCGGA')\nvocabulary_term_INDEX1_CACCGGA.setDescription(None)\nvocabulary_term_INDEX1_CACCGGA.setLabel('DNA Adapter 30')\nvocabulary_term_INDEX1_CACCGGA.setOrdinal(73)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CACCGGA)\n          \nvocabulary_term_INDEX1_CACGATA = tr.createNewVocabularyTerm('CACGATA')\nvocabulary_term_INDEX1_CACGATA.setDescription(None)\nvocabulary_term_INDEX1_CACGATA.setLabel('DNA Adapter 31')\nvocabulary_term_INDEX1_CACGATA.setOrdinal(74)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CACGATA)\n          \nvocabulary_term_INDEX1_CACTCAA = tr.createNewVocabularyTerm('CACTCAA')\nvocabulary_term_INDEX1_CACTCAA.setDescription(None)\nvocabulary_term_INDEX1_CACTCAA.setLabel('DNA Adapter 32')\nvocabulary_term_INDEX1_CACTCAA.setOrdinal(75)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CACTCAA)\n          \nvocabulary_term_INDEX1_CAGGCGA = tr.createNewVocabularyTerm('CAGGCGA')\nvocabulary_term_INDEX1_CAGGCGA.setDescription(None)\nvocabulary_term_INDEX1_CAGGCGA.setLabel('DNA Adapter 33')\nvocabulary_term_INDEX1_CAGGCGA.setOrdinal(76)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CAGGCGA)\n          \nvocabulary_term_INDEX1_CATGGCA = tr.createNewVocabularyTerm('CATGGCA')\nvocabulary_term_INDEX1_CATGGCA.setDescription(None)\nvocabulary_term_INDEX1_CATGGCA.setLabel('DNA Adapter 34')\nvocabulary_term_INDEX1_CATGGCA.setOrdinal(77)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CATGGCA)\n          \nvocabulary_term_INDEX1_CATTTTA = tr.createNewVocabularyTerm('CATTTTA')\nvocabulary_term_INDEX1_CATTTTA.setDescription(None)\nvocabulary_term_INDEX1_CATTTTA.setLabel('DNA Adapter 35')\nvocabulary_term_INDEX1_CATTTTA.setOrdinal(78)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CATTTTA)\n          \nvocabulary_term_INDEX1_CCAACAA = tr.createNewVocabularyTerm('CCAACAA')\nvocabulary_term_INDEX1_CCAACAA.setDescription(None)\nvocabulary_term_INDEX1_CCAACAA.setLabel('DNA Adapter 36')\nvocabulary_term_INDEX1_CCAACAA.setOrdinal(79)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CCAACAA)\n          \nvocabulary_term_INDEX1_CGGAATA = tr.createNewVocabularyTerm('CGGAATA')\nvocabulary_term_INDEX1_CGGAATA.setDescription(None)\nvocabulary_term_INDEX1_CGGAATA.setLabel('DNA Adapter 37')\nvocabulary_term_INDEX1_CGGAATA.setOrdinal(80)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CGGAATA)\n          \nvocabulary_term_INDEX1_CTAGCTA = tr.createNewVocabularyTerm('CTAGCTA')\nvocabulary_term_INDEX1_CTAGCTA.setDescription(None)\nvocabulary_term_INDEX1_CTAGCTA.setLabel('DNA Adapter 38')\nvocabulary_term_INDEX1_CTAGCTA.setOrdinal(81)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CTAGCTA)\n          \nvocabulary_term_INDEX1_CTATACA = tr.createNewVocabularyTerm('CTATACA')\nvocabulary_term_INDEX1_CTATACA.setDescription(None)\nvocabulary_term_INDEX1_CTATACA.setLabel('DNA Adapter 39')\nvocabulary_term_INDEX1_CTATACA.setOrdinal(82)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CTATACA)\n          \nvocabulary_term_INDEX1_CTCAGAA = tr.createNewVocabularyTerm('CTCAGAA')\nvocabulary_term_INDEX1_CTCAGAA.setDescription(None)\nvocabulary_term_INDEX1_CTCAGAA.setLabel('DNA Adapter 40')\nvocabulary_term_INDEX1_CTCAGAA.setOrdinal(83)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_CTCAGAA)\n          \nvocabulary_term_INDEX1_GACGACA = tr.createNewVocabularyTerm('GACGACA')\nvocabulary_term_INDEX1_GACGACA.setDescription(None)\nvocabulary_term_INDEX1_GACGACA.setLabel('DNA Adapter 41')\nvocabulary_term_INDEX1_GACGACA.setOrdinal(84)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_GACGACA)\n          \nvocabulary_term_INDEX1_TAATCGA = tr.createNewVocabularyTerm('TAATCGA')\nvocabulary_term_INDEX1_TAATCGA.setDescription(None)\nvocabulary_term_INDEX1_TAATCGA.setLabel('DNA Adapter 42')\nvocabulary_term_INDEX1_TAATCGA.setOrdinal(85)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TAATCGA)\n          \nvocabulary_term_INDEX1_TACAGCA = tr.createNewVocabularyTerm('TACAGCA')\nvocabulary_term_INDEX1_TACAGCA.setDescription(None)\nvocabulary_term_INDEX1_TACAGCA.setLabel('DNA Adapter 43')\nvocabulary_term_INDEX1_TACAGCA.setOrdinal(86)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TACAGCA)\n          \nvocabulary_term_INDEX1_TATAATA = tr.createNewVocabularyTerm('TATAATA')\nvocabulary_term_INDEX1_TATAATA.setDescription(None)\nvocabulary_term_INDEX1_TATAATA.setLabel('DNA Adapter 44')\nvocabulary_term_INDEX1_TATAATA.setOrdinal(87)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TATAATA)\n          \nvocabulary_term_INDEX1_TCATTCA = tr.createNewVocabularyTerm('TCATTCA')\nvocabulary_term_INDEX1_TCATTCA.setDescription(None)\nvocabulary_term_INDEX1_TCATTCA.setLabel('DNA Adapter 45')\nvocabulary_term_INDEX1_TCATTCA.setOrdinal(88)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TCATTCA)\n          \nvocabulary_term_INDEX1_TCCCGAA = tr.createNewVocabularyTerm('TCCCGAA')\nvocabulary_term_INDEX1_TCCCGAA.setDescription(None)\nvocabulary_term_INDEX1_TCCCGAA.setLabel('DNA Adapter 46')\nvocabulary_term_INDEX1_TCCCGAA.setOrdinal(89)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TCCCGAA)\n          \nvocabulary_term_INDEX1_TCGAAGA = tr.createNewVocabularyTerm('TCGAAGA')\nvocabulary_term_INDEX1_TCGAAGA.setDescription(None)\nvocabulary_term_INDEX1_TCGAAGA.setLabel('DNA Adapter 47')\nvocabulary_term_INDEX1_TCGAAGA.setOrdinal(90)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TCGAAGA)\n          \nvocabulary_term_INDEX1_TCGGCAA = tr.createNewVocabularyTerm('TCGGCAA')\nvocabulary_term_INDEX1_TCGGCAA.setDescription(None)\nvocabulary_term_INDEX1_TCGGCAA.setLabel('DNA Adapter 48')\nvocabulary_term_INDEX1_TCGGCAA.setOrdinal(91)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_TCGGCAA)\n          \nvocabulary_term_INDEX1_AGTCAAC = tr.createNewVocabularyTerm('AGTCAAC')\nvocabulary_term_INDEX1_AGTCAAC.setDescription(None)\nvocabulary_term_INDEX1_AGTCAAC.setLabel('Index13 AGTCAAC')\nvocabulary_term_INDEX1_AGTCAAC.setOrdinal(92)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_AGTCAAC)\n          \nvocabulary_term_INDEX1_AATGCGA = tr.createNewVocabularyTerm('AATGCGA')\nvocabulary_term_INDEX1_AATGCGA.setDescription(None)\nvocabulary_term_INDEX1_AATGCGA.setLabel('Lib AATGCGA')\nvocabulary_term_INDEX1_AATGCGA.setOrdinal(93)\nvocabulary_INDEX1.addTerm(vocabulary_term_INDEX1_AATGCGA)\n    \nvocabulary_INDEX2 = tr.getOrCreateNewVocabulary('INDEX2')\nvocabulary_INDEX2.setDescription('Index 2 for Illumina Dual Indexing')\nvocabulary_INDEX2.setUrlTemplate(None)\nvocabulary_INDEX2.setManagedInternally(False)\nvocabulary_INDEX2.setChosenFromList(True)\n          \nvocabulary_term_INDEX2_NONE = tr.createNewVocabularyTerm('NONE')\nvocabulary_term_INDEX2_NONE.setDescription('No Index')\nvocabulary_term_INDEX2_NONE.setLabel('None')\nvocabulary_term_INDEX2_NONE.setOrdinal(1)\nvocabulary_INDEX2.addTerm(vocabulary_term_INDEX2_NONE)\n          \nvocabulary_term_INDEX2_TAGATCGC = tr.createNewVocabularyTerm('TAGATCGC')\nvocabulary_term_INDEX2_TAGATCGC.setDescription('Nextera DNA')\nvocabulary_term_INDEX2_TAGATCGC.setLabel('Index2 (i5) N501 TAGATCGC')\nvocabulary_term_INDEX2_TAGATCGC.setOrdinal(2)\nvocabulary_INDEX2.addTerm(vocabulary_term_INDEX2_TAGATCGC)\n          \nvocabulary_term_INDEX2_CTCTCTAT = tr.createNewVocabularyTerm('CTCTCTAT')\nvocabulary_term_INDEX2_CTCTCTAT.setDescription('Nextera DNA')\nvocabulary_term_INDEX2_CTCTCTAT.setLabel('Index2 (i5) N502 CTCTCTAT')\nvocabulary_term_INDEX2_CTCTCTAT.setOrdinal(3)\nvocabulary_INDEX2.addTerm(vocabulary_term_INDEX2_CTCTCTAT)\n          \nvocabulary_term_INDEX2_TATCCTCT = tr.createNewVocabularyTerm('TATCCTCT')\nvocabulary_term_INDEX2_TATCCTCT.setDescription('Nextera DNA')\nvocabulary_term_INDEX2_TATCCTCT.setLabel('Index2 (i5) N503 TATCCTCT')\nvocabulary_term_INDEX2_TATCCTCT.setOrdinal(4)\nvocabulary_INDEX2.addTerm(vocabulary_term_INDEX2_TATCCTCT)\n          \nvocabulary_term_INDEX2_AGAGTAGA = tr.createNewVocabularyTerm('AGAGTAGA')\nvocabulary_term_INDEX2_AGAGTAGA.setDescription('Nextera DNA')\nvocabulary_term_INDEX2_AGAGTAGA.setLabel('Index2 (i5) N504 AGAGTAGA')\nvocabulary_term_INDEX2_AGAGTAGA.setOrdinal(5)\nvocabulary_INDEX2.addTerm(vocabulary_term_INDEX2_AGAGTAGA)\n          \nvocabulary_term_INDEX2_GTAAGGAG = tr.createNewVocabularyTerm('GTAAGGAG')\nvocabulary_term_INDEX2_GTAAGGAG.setDescription('Nextera DNA')\nvocabulary_term_INDEX2_GTAAGGAG.setLabel('Index2 (i5) N505 GTAAGGAG')\nvocabulary_term_INDEX2_GTAAGGAG.setOrdinal(6)\nvocabulary_INDEX2.addTerm(vocabulary_term_INDEX2_GTAAGGAG)\n          \nvocabulary_term_INDEX2_ACTGCATA = tr.createNewVocabularyTerm('ACTGCATA')\nvocabulary_term_INDEX2_ACTGCATA.setDescription('Nextera DNA')\nvocabulary_term_INDEX2_ACTGCATA.setLabel('Index2 (i5) N506 ACTGCATA')\nvocabulary_term_INDEX2_ACTGCATA.setOrdinal(7)\nvocabulary_INDEX2.addTerm(vocabulary_term_INDEX2_ACTGCATA)\n          \nvocabulary_term_INDEX2_AAGGAGTA = tr.createNewVocabularyTerm('AAGGAGTA')\nvocabulary_term_INDEX2_AAGGAGTA.setDescription('Nextera DNA')\nvocabulary_term_INDEX2_AAGGAGTA.setLabel('Index2 (i5) N507 AAGGAGTA')\nvocabulary_term_INDEX2_AAGGAGTA.setOrdinal(8)\nvocabulary_INDEX2.addTerm(vocabulary_term_INDEX2_AAGGAGTA)\n          \nvocabulary_term_INDEX2_CTAAGCCT = tr.createNewVocabularyTerm('CTAAGCCT')\nvocabulary_term_INDEX2_CTAAGCCT.setDescription('Nextera DNA')\nvocabulary_term_INDEX2_CTAAGCCT.setLabel('Index2 (i5) N508 CTAAGCCT')\nvocabulary_term_INDEX2_CTAAGCCT.setOrdinal(9)\nvocabulary_INDEX2.addTerm(vocabulary_term_INDEX2_CTAAGCCT)\n          \nvocabulary_term_INDEX2_NOINDEX = tr.createNewVocabularyTerm('NOINDEX')\nvocabulary_term_INDEX2_NOINDEX.setDescription(None)\nvocabulary_term_INDEX2_NOINDEX.setLabel(None)\nvocabulary_term_INDEX2_NOINDEX.setOrdinal(10)\nvocabulary_INDEX2.addTerm(vocabulary_term_INDEX2_NOINDEX)\n    \nvocabulary_KIT = tr.getOrCreateNewVocabulary('KIT')\nvocabulary_KIT.setDescription('Illumina Kit used for preparation')\nvocabulary_KIT.setUrlTemplate(None)\nvocabulary_KIT.setManagedInternally(False)\nvocabulary_KIT.setChosenFromList(True)\n          \nvocabulary_term_KIT_CHIP_SEQ_SAMPLE_PREP = tr.createNewVocabularyTerm('CHIP_SEQ_SAMPLE_PREP')\nvocabulary_term_KIT_CHIP_SEQ_SAMPLE_PREP.setDescription(None)\nvocabulary_term_KIT_CHIP_SEQ_SAMPLE_PREP.setLabel('ChIP-Seq Sample Preparation Kit')\nvocabulary_term_KIT_CHIP_SEQ_SAMPLE_PREP.setOrdinal(1)\nvocabulary_KIT.addTerm(vocabulary_term_KIT_CHIP_SEQ_SAMPLE_PREP)\n          \nvocabulary_term_KIT_NEBNEXT_DNA_SAMPLE_PREP_MASTER_MIX_SET1 = tr.createNewVocabularyTerm('NEBNEXT_DNA_SAMPLE_PREP_MASTER_MIX_SET1')\nvocabulary_term_KIT_NEBNEXT_DNA_SAMPLE_PREP_MASTER_MIX_SET1.setDescription(None)\nvocabulary_term_KIT_NEBNEXT_DNA_SAMPLE_PREP_MASTER_MIX_SET1.setLabel('NEB Genomic DNA Sample Preparation Kit')\nvocabulary_term_KIT_NEBNEXT_DNA_SAMPLE_PREP_MASTER_MIX_SET1.setOrdinal(2)\nvocabulary_KIT.addTerm(vocabulary_term_KIT_NEBNEXT_DNA_SAMPLE_PREP_MASTER_MIX_SET1)\n          \nvocabulary_term_KIT_NEB_CHIP_SEQ_SAMPLE_PREPARATION_KIT = tr.createNewVocabularyTerm('NEB_CHIP_SEQ_SAMPLE_PREPARATION_KIT')\nvocabulary_term_KIT_NEB_CHIP_SEQ_SAMPLE_PREPARATION_KIT.setDescription(None)\nvocabulary_term_KIT_NEB_CHIP_SEQ_SAMPLE_PREPARATION_KIT.setLabel('NEB_ChIP_Seq_Sample_Preparation_Kit')\nvocabulary_term_KIT_NEB_CHIP_SEQ_SAMPLE_PREPARATION_KIT.setOrdinal(3)\nvocabulary_KIT.addTerm(vocabulary_term_KIT_NEB_CHIP_SEQ_SAMPLE_PREPARATION_KIT)\n          \nvocabulary_term_KIT_GENOMICDNA_SAMPLE_PREP = tr.createNewVocabularyTerm('GENOMICDNA_SAMPLE_PREP')\nvocabulary_term_KIT_GENOMICDNA_SAMPLE_PREP.setDescription(None)\nvocabulary_term_KIT_GENOMICDNA_SAMPLE_PREP.setLabel('Illumina Genomic DNA Sample Preparation Kit')\nvocabulary_term_KIT_GENOMICDNA_SAMPLE_PREP.setOrdinal(4)\nvocabulary_KIT.addTerm(vocabulary_term_KIT_GENOMICDNA_SAMPLE_PREP)\n          \nvocabulary_term_KIT_PAIRED_END_DNA_SAMPLE_PREP = tr.createNewVocabularyTerm('PAIRED_END_DNA_SAMPLE_PREP')\nvocabulary_term_KIT_PAIRED_END_DNA_SAMPLE_PREP.setDescription(None)\nvocabulary_term_KIT_PAIRED_END_DNA_SAMPLE_PREP.setLabel('Paired End DNA Sample Prep Oligo Kit')\nvocabulary_term_KIT_PAIRED_END_DNA_SAMPLE_PREP.setOrdinal(5)\nvocabulary_KIT.addTerm(vocabulary_term_KIT_PAIRED_END_DNA_SAMPLE_PREP)\n          \nvocabulary_term_KIT_MRNA_SEQ_SAMPLE_PREP = tr.createNewVocabularyTerm('MRNA_SEQ_SAMPLE_PREP')\nvocabulary_term_KIT_MRNA_SEQ_SAMPLE_PREP.setDescription(None)\nvocabulary_term_KIT_MRNA_SEQ_SAMPLE_PREP.setLabel('mRNA-Seq Sample Preparation Kit')\nvocabulary_term_KIT_MRNA_SEQ_SAMPLE_PREP.setOrdinal(6)\nvocabulary_KIT.addTerm(vocabulary_term_KIT_MRNA_SEQ_SAMPLE_PREP)\n          \nvocabulary_term_KIT_RIBOZERO_SCRIPTSEQ_MRNASEQ_KIT = tr.createNewVocabularyTerm('RIBOZERO_SCRIPTSEQ_MRNA-SEQ_KIT')\nvocabulary_term_KIT_RIBOZERO_SCRIPTSEQ_MRNASEQ_KIT.setDescription(None)\nvocabulary_term_KIT_RIBOZERO_SCRIPTSEQ_MRNASEQ_KIT.setLabel('RiboZero ScriptSeq mRNA-Seq_Epicentre-kit')\nvocabulary_term_KIT_RIBOZERO_SCRIPTSEQ_MRNASEQ_KIT.setOrdinal(7)\nvocabulary_KIT.addTerm(vocabulary_term_KIT_RIBOZERO_SCRIPTSEQ_MRNASEQ_KIT)\n          \nvocabulary_term_KIT_POLYA_SCRIPTSEQ_MRNASEQ_KIT = tr.createNewVocabularyTerm('POLYA_SCRIPTSEQ_MRNA-SEQ_KIT')\nvocabulary_term_KIT_POLYA_SCRIPTSEQ_MRNASEQ_KIT.setDescription(None)\nvocabulary_term_KIT_POLYA_SCRIPTSEQ_MRNASEQ_KIT.setLabel('PolyA(Beads) ScriptSeq mRNA-Seq_Epicentre-kit')\nvocabulary_term_KIT_POLYA_SCRIPTSEQ_MRNASEQ_KIT.setOrdinal(8)\nvocabulary_KIT.addTerm(vocabulary_term_KIT_POLYA_SCRIPTSEQ_MRNASEQ_KIT)\n          \nvocabulary_term_KIT_NEXTERA_DNA_SAMPLE_PREP_KITS = tr.createNewVocabularyTerm('NEXTERA_DNA_SAMPLE_PREP_KITS')\nvocabulary_term_KIT_NEXTERA_DNA_SAMPLE_PREP_KITS.setDescription(None)\nvocabulary_term_KIT_NEXTERA_DNA_SAMPLE_PREP_KITS.setLabel('Nextera Genomic DNA Sample Preparation Kit BufferLMW(Epicentre)')\nvocabulary_term_KIT_NEXTERA_DNA_SAMPLE_PREP_KITS.setOrdinal(9)\nvocabulary_KIT.addTerm(vocabulary_term_KIT_NEXTERA_DNA_SAMPLE_PREP_KITS)\n          \nvocabulary_term_KIT_NEXTERA_DNA_SAMPLE_PREP_KIT_BUFFER_HMW = tr.createNewVocabularyTerm('NEXTERA_DNA_SAMPLE_PREP_KIT_BUFFER_HMW')\nvocabulary_term_KIT_NEXTERA_DNA_SAMPLE_PREP_KIT_BUFFER_HMW.setDescription(None)\nvocabulary_term_KIT_NEXTERA_DNA_SAMPLE_PREP_KIT_BUFFER_HMW.setLabel('Nextera Genomic DNA Sample Preparation Kit BufferHMW(Epicentre)')\nvocabulary_term_KIT_NEXTERA_DNA_SAMPLE_PREP_KIT_BUFFER_HMW.setOrdinal(10)\nvocabulary_KIT.addTerm(vocabulary_term_KIT_NEXTERA_DNA_SAMPLE_PREP_KIT_BUFFER_HMW)\n          \nvocabulary_term_KIT_AGILENT_SURESELECT_ENRICHMENTSYSTEM = tr.createNewVocabularyTerm('AGILENT_SURESELECT_ENRICHMENTSYSTEM')\nvocabulary_term_KIT_AGILENT_SURESELECT_ENRICHMENTSYSTEM.setDescription(None)\nvocabulary_term_KIT_AGILENT_SURESELECT_ENRICHMENTSYSTEM.setLabel('Agilent_SureSelect_EnrichmentSystem')\nvocabulary_term_KIT_AGILENT_SURESELECT_ENRICHMENTSYSTEM.setOrdinal(11)\nvocabulary_KIT.addTerm(vocabulary_term_KIT_AGILENT_SURESELECT_ENRICHMENTSYSTEM)\n          \nvocabulary_term_KIT_TRUSEQRNA_SAMPLE_PREP_KIT = tr.createNewVocabularyTerm('TRUSEQRNA_SAMPLE_PREP_KIT')\nvocabulary_term_KIT_TRUSEQRNA_SAMPLE_PREP_KIT.setDescription(None)\nvocabulary_term_KIT_TRUSEQRNA_SAMPLE_PREP_KIT.setLabel('TruSeq_RNA_SamplePrepKit_Illumina')\nvocabulary_term_KIT_TRUSEQRNA_SAMPLE_PREP_KIT.setOrdinal(12)\nvocabulary_KIT.addTerm(vocabulary_term_KIT_TRUSEQRNA_SAMPLE_PREP_KIT)\n          \nvocabulary_term_KIT_TRUESEQ_CHIP_SAMPLE_PREP_KIT = tr.createNewVocabularyTerm('TRUESEQ_CHIP_SAMPLE_PREP_KIT')\nvocabulary_term_KIT_TRUESEQ_CHIP_SAMPLE_PREP_KIT.setDescription(None)\nvocabulary_term_KIT_TRUESEQ_CHIP_SAMPLE_PREP_KIT.setLabel(None)\nvocabulary_term_KIT_TRUESEQ_CHIP_SAMPLE_PREP_KIT.setOrdinal(13)\nvocabulary_KIT.addTerm(vocabulary_term_KIT_TRUESEQ_CHIP_SAMPLE_PREP_KIT)\n          \nvocabulary_term_KIT_TRUSEQ_DNA_SAMPLE_PREP_KIT = tr.createNewVocabularyTerm('TRUSEQ_DNA_SAMPLE_PREP_KIT')\nvocabulary_term_KIT_TRUSEQ_DNA_SAMPLE_PREP_KIT.setDescription(None)\nvocabulary_term_KIT_TRUSEQ_DNA_SAMPLE_PREP_KIT.setLabel('TruSeq_DNA_SamplePrepKit_Illumina')\nvocabulary_term_KIT_TRUSEQ_DNA_SAMPLE_PREP_KIT.setOrdinal(14)\nvocabulary_KIT.addTerm(vocabulary_term_KIT_TRUSEQ_DNA_SAMPLE_PREP_KIT)\n          \nvocabulary_term_KIT_NONE = tr.createNewVocabularyTerm('NONE')\nvocabulary_term_KIT_NONE.setDescription(None)\nvocabulary_term_KIT_NONE.setLabel('None (Already prepared)')\nvocabulary_term_KIT_NONE.setOrdinal(15)\nvocabulary_KIT.addTerm(vocabulary_term_KIT_NONE)\n    \nvocabulary_MACS_VERSION = tr.getOrCreateNewVocabulary('MACS_VERSION')\nvocabulary_MACS_VERSION.setDescription('Used MACS version for Peak Calling')\nvocabulary_MACS_VERSION.setUrlTemplate(None)\nvocabulary_MACS_VERSION.setManagedInternally(False)\nvocabulary_MACS_VERSION.setChosenFromList(True)\n          \nvocabulary_term_MACS_VERSION_140RC2 = tr.createNewVocabularyTerm('1.4.0RC2')\nvocabulary_term_MACS_VERSION_140RC2.setDescription(None)\nvocabulary_term_MACS_VERSION_140RC2.setLabel('macs14 1.4.0rc2 20110214 (Valentine)')\nvocabulary_term_MACS_VERSION_140RC2.setOrdinal(1)\nvocabulary_MACS_VERSION.addTerm(vocabulary_term_MACS_VERSION_140RC2)\n          \nvocabulary_term_MACS_VERSION_1371 = tr.createNewVocabularyTerm('1.3.7.1')\nvocabulary_term_MACS_VERSION_1371.setDescription(None)\nvocabulary_term_MACS_VERSION_1371.setLabel('macs 1.3.7.1 (Oktoberfest, bug fixed #1)')\nvocabulary_term_MACS_VERSION_1371.setOrdinal(2)\nvocabulary_MACS_VERSION.addTerm(vocabulary_term_MACS_VERSION_1371)\n    \nvocabulary_MISMATCH_IN_INDEX = tr.getOrCreateNewVocabulary('MISMATCH_IN_INDEX')\nvocabulary_MISMATCH_IN_INDEX.setDescription('Mismatch in Index allowed')\nvocabulary_MISMATCH_IN_INDEX.setUrlTemplate(None)\nvocabulary_MISMATCH_IN_INDEX.setManagedInternally(False)\nvocabulary_MISMATCH_IN_INDEX.setChosenFromList(True)\n          \nvocabulary_term_MISMATCH_IN_INDEX_NONE = tr.createNewVocabularyTerm('NONE')\nvocabulary_term_MISMATCH_IN_INDEX_NONE.setDescription(None)\nvocabulary_term_MISMATCH_IN_INDEX_NONE.setLabel(None)\nvocabulary_term_MISMATCH_IN_INDEX_NONE.setOrdinal(1)\nvocabulary_MISMATCH_IN_INDEX.addTerm(vocabulary_term_MISMATCH_IN_INDEX_NONE)\n          \nvocabulary_term_MISMATCH_IN_INDEX_ONE = tr.createNewVocabularyTerm('ONE')\nvocabulary_term_MISMATCH_IN_INDEX_ONE.setDescription(None)\nvocabulary_term_MISMATCH_IN_INDEX_ONE.setLabel(None)\nvocabulary_term_MISMATCH_IN_INDEX_ONE.setOrdinal(2)\nvocabulary_MISMATCH_IN_INDEX.addTerm(vocabulary_term_MISMATCH_IN_INDEX_ONE)\n    \nvocabulary_NANO_DROP = tr.getOrCreateNewVocabulary('NANO_DROP')\nvocabulary_NANO_DROP.setDescription('Device for measuring the total amount of genetic material contained in the probe')\nvocabulary_NANO_DROP.setUrlTemplate(None)\nvocabulary_NANO_DROP.setManagedInternally(False)\nvocabulary_NANO_DROP.setChosenFromList(True)\n          \nvocabulary_term_NANO_DROP_CONCND3300 = tr.createNewVocabularyTerm('CONCND3300')\nvocabulary_term_NANO_DROP_CONCND3300.setDescription(None)\nvocabulary_term_NANO_DROP_CONCND3300.setLabel('Conc Nano Drop 3300')\nvocabulary_term_NANO_DROP_CONCND3300.setOrdinal(1)\nvocabulary_NANO_DROP.addTerm(vocabulary_term_NANO_DROP_CONCND3300)\n          \nvocabulary_term_NANO_DROP_CONCND1000 = tr.createNewVocabularyTerm('CONCND1000')\nvocabulary_term_NANO_DROP_CONCND1000.setDescription(None)\nvocabulary_term_NANO_DROP_CONCND1000.setLabel('Conc Nano Drop 1000')\nvocabulary_term_NANO_DROP_CONCND1000.setOrdinal(2)\nvocabulary_NANO_DROP.addTerm(vocabulary_term_NANO_DROP_CONCND1000)\n          \nvocabulary_term_NANO_DROP_CONCND2000 = tr.createNewVocabularyTerm('CONCND2000')\nvocabulary_term_NANO_DROP_CONCND2000.setDescription(None)\nvocabulary_term_NANO_DROP_CONCND2000.setLabel('Conc Nano Drop 2000')\nvocabulary_term_NANO_DROP_CONCND2000.setOrdinal(3)\nvocabulary_NANO_DROP.addTerm(vocabulary_term_NANO_DROP_CONCND2000)\n    \nvocabulary_NCBI_TAXONOMY = tr.getOrCreateNewVocabulary('NCBI_TAXONOMY')\nvocabulary_NCBI_TAXONOMY.setDescription(None)\nvocabulary_NCBI_TAXONOMY.setUrlTemplate('http://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?id=$term$')\nvocabulary_NCBI_TAXONOMY.setManagedInternally(False)\nvocabulary_NCBI_TAXONOMY.setChosenFromList(True)\n          \nvocabulary_term_NCBI_TAXONOMY_10090 = tr.createNewVocabularyTerm('10090')\nvocabulary_term_NCBI_TAXONOMY_10090.setDescription('Genbank common name: house mouse\\ Inherited blast name: rodents')\nvocabulary_term_NCBI_TAXONOMY_10090.setLabel('Mus musculus')\nvocabulary_term_NCBI_TAXONOMY_10090.setOrdinal(1)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_10090)\n          \nvocabulary_term_NCBI_TAXONOMY_9606 = tr.createNewVocabularyTerm('9606')\nvocabulary_term_NCBI_TAXONOMY_9606.setDescription('Genbank common name: human\\ Inherited blast name: primates')\nvocabulary_term_NCBI_TAXONOMY_9606.setLabel('Homo sapiens')\nvocabulary_term_NCBI_TAXONOMY_9606.setOrdinal(2)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_9606)\n          \nvocabulary_term_NCBI_TAXONOMY_7227 = tr.createNewVocabularyTerm('7227')\nvocabulary_term_NCBI_TAXONOMY_7227.setDescription('Genbank common name: fruit fly\\ Inherited blast name: flies')\nvocabulary_term_NCBI_TAXONOMY_7227.setLabel('Drosophila melanogaster')\nvocabulary_term_NCBI_TAXONOMY_7227.setOrdinal(3)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_7227)\n          \nvocabulary_term_NCBI_TAXONOMY_6239 = tr.createNewVocabularyTerm('6239')\nvocabulary_term_NCBI_TAXONOMY_6239.setDescription('Inherited blast name: nematodes')\nvocabulary_term_NCBI_TAXONOMY_6239.setLabel('Caenorhabditis elegans')\nvocabulary_term_NCBI_TAXONOMY_6239.setOrdinal(4)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_6239)\n          \nvocabulary_term_NCBI_TAXONOMY_4932 = tr.createNewVocabularyTerm('4932')\nvocabulary_term_NCBI_TAXONOMY_4932.setDescription('Genbank common name: baker\\'s yeast\\ Inherited blast name: ascomycetes')\nvocabulary_term_NCBI_TAXONOMY_4932.setLabel('Saccharomyces cerevisiae')\nvocabulary_term_NCBI_TAXONOMY_4932.setOrdinal(5)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_4932)\n          \nvocabulary_term_NCBI_TAXONOMY_10116 = tr.createNewVocabularyTerm('10116')\nvocabulary_term_NCBI_TAXONOMY_10116.setDescription('Genbank common name: Norway rat\\ Inherited blast name: rodents')\nvocabulary_term_NCBI_TAXONOMY_10116.setLabel('Rattus norvegicus')\nvocabulary_term_NCBI_TAXONOMY_10116.setOrdinal(6)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_10116)\n          \nvocabulary_term_NCBI_TAXONOMY_6669 = tr.createNewVocabularyTerm('6669')\nvocabulary_term_NCBI_TAXONOMY_6669.setDescription('Genbank common name: common water flea\\ Inherited blast name: crustaceans')\nvocabulary_term_NCBI_TAXONOMY_6669.setLabel('Daphnia pulex')\nvocabulary_term_NCBI_TAXONOMY_6669.setOrdinal(7)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_6669)\n          \nvocabulary_term_NCBI_TAXONOMY_562 = tr.createNewVocabularyTerm('562')\nvocabulary_term_NCBI_TAXONOMY_562.setDescription('Inherited blast name: enterobacteria')\nvocabulary_term_NCBI_TAXONOMY_562.setLabel('Escherichia coli')\nvocabulary_term_NCBI_TAXONOMY_562.setOrdinal(8)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_562)\n          \nvocabulary_term_NCBI_TAXONOMY_623 = tr.createNewVocabularyTerm('623')\nvocabulary_term_NCBI_TAXONOMY_623.setDescription('Inherited blast name: enterobacteria')\nvocabulary_term_NCBI_TAXONOMY_623.setLabel('Shigella flexneri')\nvocabulary_term_NCBI_TAXONOMY_623.setOrdinal(9)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_623)\n          \nvocabulary_term_NCBI_TAXONOMY_10847 = tr.createNewVocabularyTerm('10847')\nvocabulary_term_NCBI_TAXONOMY_10847.setDescription('Inherited blast name: viruses')\nvocabulary_term_NCBI_TAXONOMY_10847.setLabel('Enterobacteria phage phiX174')\nvocabulary_term_NCBI_TAXONOMY_10847.setOrdinal(10)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_10847)\n          \nvocabulary_term_NCBI_TAXONOMY_190650 = tr.createNewVocabularyTerm('190650')\nvocabulary_term_NCBI_TAXONOMY_190650.setDescription('Inherited blast name: a-proteobacteria')\nvocabulary_term_NCBI_TAXONOMY_190650.setLabel('Caulobacter crescentus CB15')\nvocabulary_term_NCBI_TAXONOMY_190650.setOrdinal(11)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_190650)\n          \nvocabulary_term_NCBI_TAXONOMY_8113 = tr.createNewVocabularyTerm('8113')\nvocabulary_term_NCBI_TAXONOMY_8113.setDescription('Genbank common name: cichlids\\ Inherited blast name: bony fishes')\nvocabulary_term_NCBI_TAXONOMY_8113.setLabel('Cichlidae')\nvocabulary_term_NCBI_TAXONOMY_8113.setOrdinal(12)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_8113)\n          \nvocabulary_term_NCBI_TAXONOMY_481459 = tr.createNewVocabularyTerm('481459')\nvocabulary_term_NCBI_TAXONOMY_481459.setDescription('Genbank common name: three-spined stickleback\\ Inherited blast name: bony fishes')\nvocabulary_term_NCBI_TAXONOMY_481459.setLabel('Gasterosteus aculeatus aculeatus')\nvocabulary_term_NCBI_TAXONOMY_481459.setOrdinal(13)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_481459)\n          \nvocabulary_term_NCBI_TAXONOMY_282301 = tr.createNewVocabularyTerm('282301')\nvocabulary_term_NCBI_TAXONOMY_282301.setDescription('Inherited blast name: flatworms')\nvocabulary_term_NCBI_TAXONOMY_282301.setLabel('Macrostomum lignano')\nvocabulary_term_NCBI_TAXONOMY_282301.setOrdinal(14)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_282301)\n          \nvocabulary_term_NCBI_TAXONOMY_99287 = tr.createNewVocabularyTerm('99287')\nvocabulary_term_NCBI_TAXONOMY_99287.setDescription('Inherited blast name: enterobacteria')\nvocabulary_term_NCBI_TAXONOMY_99287.setLabel('Salmonella enterica subsp. enterica serovar Typhimurium str. LT2')\nvocabulary_term_NCBI_TAXONOMY_99287.setOrdinal(15)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_99287)\n          \nvocabulary_term_NCBI_TAXONOMY_4896 = tr.createNewVocabularyTerm('4896')\nvocabulary_term_NCBI_TAXONOMY_4896.setDescription('Genbank common name: fission yeast\\ Inherited blast name: ascomycetes')\nvocabulary_term_NCBI_TAXONOMY_4896.setLabel('Schizosaccharomyces pombe')\nvocabulary_term_NCBI_TAXONOMY_4896.setOrdinal(16)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_4896)\n          \nvocabulary_term_NCBI_TAXONOMY_4897 = tr.createNewVocabularyTerm('4897')\nvocabulary_term_NCBI_TAXONOMY_4897.setDescription('Inherited blast name: ascomycetes')\nvocabulary_term_NCBI_TAXONOMY_4897.setLabel('Schizosaccharomyces japonicus')\nvocabulary_term_NCBI_TAXONOMY_4897.setOrdinal(17)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_4897)\n          \nvocabulary_term_NCBI_TAXONOMY_7955 = tr.createNewVocabularyTerm('7955')\nvocabulary_term_NCBI_TAXONOMY_7955.setDescription('Genbank common name: zebrafish\\ Inherited blast name: bony fishes')\nvocabulary_term_NCBI_TAXONOMY_7955.setLabel('Danio rerio')\nvocabulary_term_NCBI_TAXONOMY_7955.setOrdinal(18)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_7955)\n          \nvocabulary_term_NCBI_TAXONOMY_3702 = tr.createNewVocabularyTerm('3702')\nvocabulary_term_NCBI_TAXONOMY_3702.setDescription('Genbank common name: thale cress\\ Inherited blast name: eudicots')\nvocabulary_term_NCBI_TAXONOMY_3702.setLabel('Arabidopsis thaliana')\nvocabulary_term_NCBI_TAXONOMY_3702.setOrdinal(19)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_3702)\n          \nvocabulary_term_NCBI_TAXONOMY_225322 = tr.createNewVocabularyTerm('225322')\nvocabulary_term_NCBI_TAXONOMY_225322.setDescription('Bacterium which infects Daphnia\\ Pasteuria ramosa Metchnikoff 1888 (Approved Lists 1980) emend. Starr et al. 1986\\ Ebert D, Rainey P, Embley TM, Scholz D. Development, life\\ cycle, ultrastructure and phylogenetic position of Pasteuria ramosa Metchnikoff 1888: rediscovery of an obligate \\ endoparasite of Daphnia magna Straus. Philos Trans R Soc \\ Lond Ser B. 1996;351:1689.')\nvocabulary_term_NCBI_TAXONOMY_225322.setLabel('Pasteuria ramosa')\nvocabulary_term_NCBI_TAXONOMY_225322.setOrdinal(20)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_225322)\n          \nvocabulary_term_NCBI_TAXONOMY_9913 = tr.createNewVocabularyTerm('9913')\nvocabulary_term_NCBI_TAXONOMY_9913.setDescription('Genbank common name: cattle\\ Inherited blast name: even-toed ungulates')\nvocabulary_term_NCBI_TAXONOMY_9913.setLabel('Bos taurus')\nvocabulary_term_NCBI_TAXONOMY_9913.setOrdinal(21)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_9913)\n          \nvocabulary_term_NCBI_TAXONOMY_9823 = tr.createNewVocabularyTerm('9823')\nvocabulary_term_NCBI_TAXONOMY_9823.setDescription('Genbank common name: pig\\ Inherited blast name: even-toed ungulates')\nvocabulary_term_NCBI_TAXONOMY_9823.setLabel('Sus scrofa')\nvocabulary_term_NCBI_TAXONOMY_9823.setOrdinal(22)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_9823)\n          \nvocabulary_term_NCBI_TAXONOMY_9940 = tr.createNewVocabularyTerm('9940')\nvocabulary_term_NCBI_TAXONOMY_9940.setDescription('Genbank common name: sheep\\ Inherited blast name: even-toed ungulates')\nvocabulary_term_NCBI_TAXONOMY_9940.setLabel('Ovis aries')\nvocabulary_term_NCBI_TAXONOMY_9940.setOrdinal(23)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_9940)\n          \nvocabulary_term_NCBI_TAXONOMY_9925 = tr.createNewVocabularyTerm('9925')\nvocabulary_term_NCBI_TAXONOMY_9925.setDescription('Genbank common name: goat\\ Inherited blast name: even-toed ungulates')\nvocabulary_term_NCBI_TAXONOMY_9925.setLabel('Capra hircus')\nvocabulary_term_NCBI_TAXONOMY_9925.setOrdinal(24)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_9925)\n          \nvocabulary_term_NCBI_TAXONOMY_8153 = tr.createNewVocabularyTerm('8153')\nvocabulary_term_NCBI_TAXONOMY_8153.setDescription('Common name: cichlid fish')\nvocabulary_term_NCBI_TAXONOMY_8153.setLabel('Haplochromis burtoni')\nvocabulary_term_NCBI_TAXONOMY_8153.setOrdinal(25)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_8153)\n          \nvocabulary_term_NCBI_TAXONOMY_61818 = tr.createNewVocabularyTerm('61818')\nvocabulary_term_NCBI_TAXONOMY_61818.setDescription('Common name: bony fish')\nvocabulary_term_NCBI_TAXONOMY_61818.setLabel('Amphilophus (nicaraguan)')\nvocabulary_term_NCBI_TAXONOMY_61818.setOrdinal(26)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_61818)\n          \nvocabulary_term_NCBI_TAXONOMY_35525 = tr.createNewVocabularyTerm('35525')\nvocabulary_term_NCBI_TAXONOMY_35525.setDescription('Common name: water flea')\nvocabulary_term_NCBI_TAXONOMY_35525.setLabel('Daphnia Magna')\nvocabulary_term_NCBI_TAXONOMY_35525.setOrdinal(27)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_35525)\n          \nvocabulary_term_NCBI_TAXONOMY_4081 = tr.createNewVocabularyTerm('4081')\nvocabulary_term_NCBI_TAXONOMY_4081.setDescription('Common Name: tomato')\nvocabulary_term_NCBI_TAXONOMY_4081.setLabel('Solanum lycopersicum (tomato)')\nvocabulary_term_NCBI_TAXONOMY_4081.setOrdinal(28)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_4081)\n          \nvocabulary_term_NCBI_TAXONOMY_13068 = tr.createNewVocabularyTerm('13068')\nvocabulary_term_NCBI_TAXONOMY_13068.setDescription('Common name: earwig')\nvocabulary_term_NCBI_TAXONOMY_13068.setLabel('Forficula auricularia (earwig)')\nvocabulary_term_NCBI_TAXONOMY_13068.setOrdinal(29)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_13068)\n          \nvocabulary_term_NCBI_TAXONOMY_3569 = tr.createNewVocabularyTerm('3569')\nvocabulary_term_NCBI_TAXONOMY_3569.setDescription('Genbank common name: clove pink')\nvocabulary_term_NCBI_TAXONOMY_3569.setLabel('Dianthus')\nvocabulary_term_NCBI_TAXONOMY_3569.setOrdinal(30)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_3569)\n          \nvocabulary_term_NCBI_TAXONOMY_3573 = tr.createNewVocabularyTerm('3573')\nvocabulary_term_NCBI_TAXONOMY_3573.setDescription('Genbank common name: campions\\ Inherited blast name: eudicots')\nvocabulary_term_NCBI_TAXONOMY_3573.setLabel('Silene')\nvocabulary_term_NCBI_TAXONOMY_3573.setOrdinal(31)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_3573)\n          \nvocabulary_term_NCBI_TAXONOMY_32644 = tr.createNewVocabularyTerm('32644')\nvocabulary_term_NCBI_TAXONOMY_32644.setDescription('Inherited blast name: unclassified')\nvocabulary_term_NCBI_TAXONOMY_32644.setLabel('unidentified')\nvocabulary_term_NCBI_TAXONOMY_32644.setOrdinal(32)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_32644)\n          \nvocabulary_term_NCBI_TAXONOMY_0000 = tr.createNewVocabularyTerm('0000')\nvocabulary_term_NCBI_TAXONOMY_0000.setDescription(None)\nvocabulary_term_NCBI_TAXONOMY_0000.setLabel('OTHER')\nvocabulary_term_NCBI_TAXONOMY_0000.setOrdinal(33)\nvocabulary_NCBI_TAXONOMY.addTerm(vocabulary_term_NCBI_TAXONOMY_0000)\n    \nvocabulary_PIPELINE_VERSION = tr.getOrCreateNewVocabulary('PIPELINE_VERSION')\nvocabulary_PIPELINE_VERSION.setDescription('With which pipeline version has the data been analyzed?')\nvocabulary_PIPELINE_VERSION.setUrlTemplate(None)\nvocabulary_PIPELINE_VERSION.setManagedInternally(False)\nvocabulary_PIPELINE_VERSION.setChosenFromList(True)\n          \nvocabulary_term_PIPELINE_VERSION_11348 = tr.createNewVocabularyTerm('1.13.48')\nvocabulary_term_PIPELINE_VERSION_11348.setDescription(None)\nvocabulary_term_PIPELINE_VERSION_11348.setLabel('RTA 1.13.48')\nvocabulary_term_PIPELINE_VERSION_11348.setOrdinal(1)\nvocabulary_PIPELINE_VERSION.addTerm(vocabulary_term_PIPELINE_VERSION_11348)\n          \nvocabulary_term_PIPELINE_VERSION_11242 = tr.createNewVocabularyTerm('1.12.4.2')\nvocabulary_term_PIPELINE_VERSION_11242.setDescription('Real Time Analysis in combination with HCS 1.4.8')\nvocabulary_term_PIPELINE_VERSION_11242.setLabel('RTA 1.12.4.2 (HiSeq 2000)')\nvocabulary_term_PIPELINE_VERSION_11242.setOrdinal(2)\nvocabulary_PIPELINE_VERSION.addTerm(vocabulary_term_PIPELINE_VERSION_11242)\n          \nvocabulary_term_PIPELINE_VERSION_112 = tr.createNewVocabularyTerm('1.12')\nvocabulary_term_PIPELINE_VERSION_112.setDescription('Real Time Analysis 1.12 HiSeq 2000')\nvocabulary_term_PIPELINE_VERSION_112.setLabel('RTA 1.12')\nvocabulary_term_PIPELINE_VERSION_112.setOrdinal(3)\nvocabulary_PIPELINE_VERSION.addTerm(vocabulary_term_PIPELINE_VERSION_112)\n          \nvocabulary_term_PIPELINE_VERSION_19 = tr.createNewVocabularyTerm('1.9')\nvocabulary_term_PIPELINE_VERSION_19.setDescription('Real Time Analysis 1.9')\nvocabulary_term_PIPELINE_VERSION_19.setLabel('RTA 1.9 (GA IIx)')\nvocabulary_term_PIPELINE_VERSION_19.setOrdinal(4)\nvocabulary_PIPELINE_VERSION.addTerm(vocabulary_term_PIPELINE_VERSION_19)\n          \nvocabulary_term_PIPELINE_VERSION_RTA_18 = tr.createNewVocabularyTerm('RTA_1.8')\nvocabulary_term_PIPELINE_VERSION_RTA_18.setDescription('Real Time Analysis 1.8')\nvocabulary_term_PIPELINE_VERSION_RTA_18.setLabel('RTA 1.8')\nvocabulary_term_PIPELINE_VERSION_RTA_18.setOrdinal(5)\nvocabulary_PIPELINE_VERSION.addTerm(vocabulary_term_PIPELINE_VERSION_RTA_18)\n          \nvocabulary_term_PIPELINE_VERSION_RTA_16 = tr.createNewVocabularyTerm('RTA_1.6')\nvocabulary_term_PIPELINE_VERSION_RTA_16.setDescription('Real Time Analysis 1.6')\nvocabulary_term_PIPELINE_VERSION_RTA_16.setLabel('RTA 1.6')\nvocabulary_term_PIPELINE_VERSION_RTA_16.setOrdinal(6)\nvocabulary_PIPELINE_VERSION.addTerm(vocabulary_term_PIPELINE_VERSION_RTA_16)\n          \nvocabulary_term_PIPELINE_VERSION_RTA_15 = tr.createNewVocabularyTerm('RTA_1.5')\nvocabulary_term_PIPELINE_VERSION_RTA_15.setDescription(None)\nvocabulary_term_PIPELINE_VERSION_RTA_15.setLabel('RTA 1.5')\nvocabulary_term_PIPELINE_VERSION_RTA_15.setOrdinal(7)\nvocabulary_PIPELINE_VERSION.addTerm(vocabulary_term_PIPELINE_VERSION_RTA_15)\n          \nvocabulary_term_PIPELINE_VERSION_RTA_14150 = tr.createNewVocabularyTerm('RTA_1.4.15.0')\nvocabulary_term_PIPELINE_VERSION_RTA_14150.setDescription(None)\nvocabulary_term_PIPELINE_VERSION_RTA_14150.setLabel('RTA 1.4.15.0')\nvocabulary_term_PIPELINE_VERSION_RTA_14150.setOrdinal(8)\nvocabulary_PIPELINE_VERSION.addTerm(vocabulary_term_PIPELINE_VERSION_RTA_14150)\n          \nvocabulary_term_PIPELINE_VERSION_15 = tr.createNewVocabularyTerm('1.5')\nvocabulary_term_PIPELINE_VERSION_15.setDescription(None)\nvocabulary_term_PIPELINE_VERSION_15.setLabel(None)\nvocabulary_term_PIPELINE_VERSION_15.setOrdinal(9)\nvocabulary_PIPELINE_VERSION.addTerm(vocabulary_term_PIPELINE_VERSION_15)\n          \nvocabulary_term_PIPELINE_VERSION_14 = tr.createNewVocabularyTerm('1.4')\nvocabulary_term_PIPELINE_VERSION_14.setDescription(None)\nvocabulary_term_PIPELINE_VERSION_14.setLabel(None)\nvocabulary_term_PIPELINE_VERSION_14.setOrdinal(10)\nvocabulary_PIPELINE_VERSION.addTerm(vocabulary_term_PIPELINE_VERSION_14)\n          \nvocabulary_term_PIPELINE_VERSION_132 = tr.createNewVocabularyTerm('1.3.2')\nvocabulary_term_PIPELINE_VERSION_132.setDescription(None)\nvocabulary_term_PIPELINE_VERSION_132.setLabel(None)\nvocabulary_term_PIPELINE_VERSION_132.setOrdinal(11)\nvocabulary_PIPELINE_VERSION.addTerm(vocabulary_term_PIPELINE_VERSION_132)\n          \nvocabulary_term_PIPELINE_VERSION_10 = tr.createNewVocabularyTerm('1.0')\nvocabulary_term_PIPELINE_VERSION_10.setDescription(None)\nvocabulary_term_PIPELINE_VERSION_10.setLabel(None)\nvocabulary_term_PIPELINE_VERSION_10.setOrdinal(12)\nvocabulary_PIPELINE_VERSION.addTerm(vocabulary_term_PIPELINE_VERSION_10)\n          \nvocabulary_term_PIPELINE_VERSION_PRE_10 = tr.createNewVocabularyTerm('PRE_1.0')\nvocabulary_term_PIPELINE_VERSION_PRE_10.setDescription('Before Pipeline Version 1.0')\nvocabulary_term_PIPELINE_VERSION_PRE_10.setLabel(None)\nvocabulary_term_PIPELINE_VERSION_PRE_10.setOrdinal(13)\nvocabulary_PIPELINE_VERSION.addTerm(vocabulary_term_PIPELINE_VERSION_PRE_10)\n          \nvocabulary_term_PIPELINE_VERSION_NONE = tr.createNewVocabularyTerm('NONE')\nvocabulary_term_PIPELINE_VERSION_NONE.setDescription(None)\nvocabulary_term_PIPELINE_VERSION_NONE.setLabel(None)\nvocabulary_term_PIPELINE_VERSION_NONE.setOrdinal(14)\nvocabulary_PIPELINE_VERSION.addTerm(vocabulary_term_PIPELINE_VERSION_NONE)\n    \nvocabulary_SAMPLE_TYPE = tr.getOrCreateNewVocabulary('SAMPLE_TYPE')\nvocabulary_SAMPLE_TYPE.setDescription('Type of sample delivered by the customer')\nvocabulary_SAMPLE_TYPE.setUrlTemplate(None)\nvocabulary_SAMPLE_TYPE.setManagedInternally(False)\nvocabulary_SAMPLE_TYPE.setChosenFromList(True)\n          \nvocabulary_term_SAMPLE_TYPE_PROCESSED_DNA_LIBRARY = tr.createNewVocabularyTerm('PROCESSED_DNA_LIBRARY')\nvocabulary_term_SAMPLE_TYPE_PROCESSED_DNA_LIBRARY.setDescription(None)\nvocabulary_term_SAMPLE_TYPE_PROCESSED_DNA_LIBRARY.setLabel(None)\nvocabulary_term_SAMPLE_TYPE_PROCESSED_DNA_LIBRARY.setOrdinal(1)\nvocabulary_SAMPLE_TYPE.addTerm(vocabulary_term_SAMPLE_TYPE_PROCESSED_DNA_LIBRARY)\n          \nvocabulary_term_SAMPLE_TYPE_POOLED_SAMPLE = tr.createNewVocabularyTerm('POOLED_SAMPLE')\nvocabulary_term_SAMPLE_TYPE_POOLED_SAMPLE.setDescription(None)\nvocabulary_term_SAMPLE_TYPE_POOLED_SAMPLE.setLabel(None)\nvocabulary_term_SAMPLE_TYPE_POOLED_SAMPLE.setOrdinal(2)\nvocabulary_SAMPLE_TYPE.addTerm(vocabulary_term_SAMPLE_TYPE_POOLED_SAMPLE)\n          \nvocabulary_term_SAMPLE_TYPE_GENOMIC_DNA = tr.createNewVocabularyTerm('GENOMIC_DNA')\nvocabulary_term_SAMPLE_TYPE_GENOMIC_DNA.setDescription(None)\nvocabulary_term_SAMPLE_TYPE_GENOMIC_DNA.setLabel(None)\nvocabulary_term_SAMPLE_TYPE_GENOMIC_DNA.setOrdinal(3)\nvocabulary_SAMPLE_TYPE.addTerm(vocabulary_term_SAMPLE_TYPE_GENOMIC_DNA)\n          \nvocabulary_term_SAMPLE_TYPE_SMALL_RNA = tr.createNewVocabularyTerm('SMALL_RNA')\nvocabulary_term_SAMPLE_TYPE_SMALL_RNA.setDescription(None)\nvocabulary_term_SAMPLE_TYPE_SMALL_RNA.setLabel(None)\nvocabulary_term_SAMPLE_TYPE_SMALL_RNA.setOrdinal(4)\nvocabulary_SAMPLE_TYPE.addTerm(vocabulary_term_SAMPLE_TYPE_SMALL_RNA)\n          \nvocabulary_term_SAMPLE_TYPE_TOTAL_RNA = tr.createNewVocabularyTerm('TOTAL_RNA')\nvocabulary_term_SAMPLE_TYPE_TOTAL_RNA.setDescription(None)\nvocabulary_term_SAMPLE_TYPE_TOTAL_RNA.setLabel(None)\nvocabulary_term_SAMPLE_TYPE_TOTAL_RNA.setOrdinal(5)\nvocabulary_SAMPLE_TYPE.addTerm(vocabulary_term_SAMPLE_TYPE_TOTAL_RNA)\n          \nvocabulary_term_SAMPLE_TYPE_CHIP = tr.createNewVocabularyTerm('CHIP')\nvocabulary_term_SAMPLE_TYPE_CHIP.setDescription(None)\nvocabulary_term_SAMPLE_TYPE_CHIP.setLabel(None)\nvocabulary_term_SAMPLE_TYPE_CHIP.setOrdinal(6)\nvocabulary_SAMPLE_TYPE.addTerm(vocabulary_term_SAMPLE_TYPE_CHIP)\n          \nvocabulary_term_SAMPLE_TYPE_VIRAL = tr.createNewVocabularyTerm('VIRAL')\nvocabulary_term_SAMPLE_TYPE_VIRAL.setDescription(None)\nvocabulary_term_SAMPLE_TYPE_VIRAL.setLabel(None)\nvocabulary_term_SAMPLE_TYPE_VIRAL.setOrdinal(7)\nvocabulary_SAMPLE_TYPE.addTerm(vocabulary_term_SAMPLE_TYPE_VIRAL)\n          \nvocabulary_term_SAMPLE_TYPE_SYNTHETIC = tr.createNewVocabularyTerm('SYNTHETIC')\nvocabulary_term_SAMPLE_TYPE_SYNTHETIC.setDescription(None)\nvocabulary_term_SAMPLE_TYPE_SYNTHETIC.setLabel(None)\nvocabulary_term_SAMPLE_TYPE_SYNTHETIC.setOrdinal(8)\nvocabulary_SAMPLE_TYPE.addTerm(vocabulary_term_SAMPLE_TYPE_SYNTHETIC)\n          \nvocabulary_term_SAMPLE_TYPE_FRAGMENTED_GENOMIC_DNA = tr.createNewVocabularyTerm('FRAGMENTED_GENOMIC_DNA')\nvocabulary_term_SAMPLE_TYPE_FRAGMENTED_GENOMIC_DNA.setDescription(None)\nvocabulary_term_SAMPLE_TYPE_FRAGMENTED_GENOMIC_DNA.setLabel(None)\nvocabulary_term_SAMPLE_TYPE_FRAGMENTED_GENOMIC_DNA.setOrdinal(9)\nvocabulary_SAMPLE_TYPE.addTerm(vocabulary_term_SAMPLE_TYPE_FRAGMENTED_GENOMIC_DNA)\n          \nvocabulary_term_SAMPLE_TYPE_MRNA = tr.createNewVocabularyTerm('MRNA')\nvocabulary_term_SAMPLE_TYPE_MRNA.setDescription(None)\nvocabulary_term_SAMPLE_TYPE_MRNA.setLabel(None)\nvocabulary_term_SAMPLE_TYPE_MRNA.setOrdinal(10)\nvocabulary_SAMPLE_TYPE.addTerm(vocabulary_term_SAMPLE_TYPE_MRNA)\n          \nvocabulary_term_SAMPLE_TYPE_OTHER = tr.createNewVocabularyTerm('OTHER')\nvocabulary_term_SAMPLE_TYPE_OTHER.setDescription(None)\nvocabulary_term_SAMPLE_TYPE_OTHER.setLabel(None)\nvocabulary_term_SAMPLE_TYPE_OTHER.setOrdinal(11)\nvocabulary_SAMPLE_TYPE.addTerm(vocabulary_term_SAMPLE_TYPE_OTHER)\n          \nvocabulary_term_SAMPLE_TYPE_BISULFITE_CHIP = tr.createNewVocabularyTerm('BISULFITE_CHIP')\nvocabulary_term_SAMPLE_TYPE_BISULFITE_CHIP.setDescription(None)\nvocabulary_term_SAMPLE_TYPE_BISULFITE_CHIP.setLabel(None)\nvocabulary_term_SAMPLE_TYPE_BISULFITE_CHIP.setOrdinal(13)\nvocabulary_SAMPLE_TYPE.addTerm(vocabulary_term_SAMPLE_TYPE_BISULFITE_CHIP)\n          \nvocabulary_term_SAMPLE_TYPE_NONGENOMIC = tr.createNewVocabularyTerm('NON-GENOMIC')\nvocabulary_term_SAMPLE_TYPE_NONGENOMIC.setDescription(None)\nvocabulary_term_SAMPLE_TYPE_NONGENOMIC.setLabel(None)\nvocabulary_term_SAMPLE_TYPE_NONGENOMIC.setOrdinal(14)\nvocabulary_SAMPLE_TYPE.addTerm(vocabulary_term_SAMPLE_TYPE_NONGENOMIC)\n          \nvocabulary_term_SAMPLE_TYPE_BISULFITE_TREATED = tr.createNewVocabularyTerm('BISULFITE_TREATED')\nvocabulary_term_SAMPLE_TYPE_BISULFITE_TREATED.setDescription(None)\nvocabulary_term_SAMPLE_TYPE_BISULFITE_TREATED.setLabel(None)\nvocabulary_term_SAMPLE_TYPE_BISULFITE_TREATED.setOrdinal(15)\nvocabulary_SAMPLE_TYPE.addTerm(vocabulary_term_SAMPLE_TYPE_BISULFITE_TREATED)\n    \nvocabulary_SBS_SEQUENCING_KIT_VERSION = tr.getOrCreateNewVocabulary('SBS_SEQUENCING_KIT_VERSION')\nvocabulary_SBS_SEQUENCING_KIT_VERSION.setDescription('Version of the Sequencing by Synthesis (SBS) Kit')\nvocabulary_SBS_SEQUENCING_KIT_VERSION.setUrlTemplate(None)\nvocabulary_SBS_SEQUENCING_KIT_VERSION.setManagedInternally(False)\nvocabulary_SBS_SEQUENCING_KIT_VERSION.setChosenFromList(True)\n          \nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_TRUSEQ_V5 = tr.createNewVocabularyTerm('TRUSEQ_V5')\nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_TRUSEQ_V5.setDescription(None)\nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_TRUSEQ_V5.setLabel('TruSeq v5')\nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_TRUSEQ_V5.setOrdinal(1)\nvocabulary_SBS_SEQUENCING_KIT_VERSION.addTerm(vocabulary_term_SBS_SEQUENCING_KIT_VERSION_TRUSEQ_V5)\n          \nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_V5 = tr.createNewVocabularyTerm('V5')\nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_V5.setDescription(None)\nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_V5.setLabel(None)\nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_V5.setOrdinal(2)\nvocabulary_SBS_SEQUENCING_KIT_VERSION.addTerm(vocabulary_term_SBS_SEQUENCING_KIT_VERSION_V5)\n          \nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_V4 = tr.createNewVocabularyTerm('V4')\nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_V4.setDescription(None)\nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_V4.setLabel(None)\nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_V4.setOrdinal(3)\nvocabulary_SBS_SEQUENCING_KIT_VERSION.addTerm(vocabulary_term_SBS_SEQUENCING_KIT_VERSION_V4)\n          \nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_V3 = tr.createNewVocabularyTerm('V3')\nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_V3.setDescription(None)\nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_V3.setLabel(None)\nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_V3.setOrdinal(4)\nvocabulary_SBS_SEQUENCING_KIT_VERSION.addTerm(vocabulary_term_SBS_SEQUENCING_KIT_VERSION_V3)\n          \nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_SBS_HS_V3 = tr.createNewVocabularyTerm('SBS_HS_V3')\nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_SBS_HS_V3.setDescription(None)\nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_SBS_HS_V3.setLabel('TruSeq SBS HS v3')\nvocabulary_term_SBS_SEQUENCING_KIT_VERSION_SBS_HS_V3.setOrdinal(5)\nvocabulary_SBS_SEQUENCING_KIT_VERSION.addTerm(vocabulary_term_SBS_SEQUENCING_KIT_VERSION_SBS_HS_V3)\n    \nvocabulary_SEQUENCER = tr.getOrCreateNewVocabulary('SEQUENCER')\nvocabulary_SEQUENCER.setDescription('Which Sequencer was used?')\nvocabulary_SEQUENCER.setUrlTemplate(None)\nvocabulary_SEQUENCER.setManagedInternally(False)\nvocabulary_SEQUENCER.setChosenFromList(True)\n          \nvocabulary_term_SEQUENCER_M00721 = tr.createNewVocabularyTerm('M00721')\nvocabulary_term_SEQUENCER_M00721.setDescription(None)\nvocabulary_term_SEQUENCER_M00721.setLabel('MiSeq')\nvocabulary_term_SEQUENCER_M00721.setOrdinal(6)\nvocabulary_SEQUENCER.addTerm(vocabulary_term_SEQUENCER_M00721)\n          \nvocabulary_term_SEQUENCER_SN792 = tr.createNewVocabularyTerm('SN792')\nvocabulary_term_SEQUENCER_SN792.setDescription(None)\nvocabulary_term_SEQUENCER_SN792.setLabel('HiSeq 2000')\nvocabulary_term_SEQUENCER_SN792.setOrdinal(7)\nvocabulary_SEQUENCER.addTerm(vocabulary_term_SEQUENCER_SN792)\n    \nvocabulary_SEQUENCING_APPLICATION = tr.getOrCreateNewVocabulary('SEQUENCING_APPLICATION')\nvocabulary_SEQUENCING_APPLICATION.setDescription('Type of experiment of the High Throughput Sequencing applications')\nvocabulary_SEQUENCING_APPLICATION.setUrlTemplate(None)\nvocabulary_SEQUENCING_APPLICATION.setManagedInternally(False)\nvocabulary_SEQUENCING_APPLICATION.setChosenFromList(True)\n          \nvocabulary_term_SEQUENCING_APPLICATION_SMALL_RNA_SEQ = tr.createNewVocabularyTerm('SMALL_RNA_SEQ')\nvocabulary_term_SEQUENCING_APPLICATION_SMALL_RNA_SEQ.setDescription(None)\nvocabulary_term_SEQUENCING_APPLICATION_SMALL_RNA_SEQ.setLabel(None)\nvocabulary_term_SEQUENCING_APPLICATION_SMALL_RNA_SEQ.setOrdinal(1)\nvocabulary_SEQUENCING_APPLICATION.addTerm(vocabulary_term_SEQUENCING_APPLICATION_SMALL_RNA_SEQ)\n          \nvocabulary_term_SEQUENCING_APPLICATION_RNA_SEQ = tr.createNewVocabularyTerm('RNA_SEQ')\nvocabulary_term_SEQUENCING_APPLICATION_RNA_SEQ.setDescription(None)\nvocabulary_term_SEQUENCING_APPLICATION_RNA_SEQ.setLabel(None)\nvocabulary_term_SEQUENCING_APPLICATION_RNA_SEQ.setOrdinal(2)\nvocabulary_SEQUENCING_APPLICATION.addTerm(vocabulary_term_SEQUENCING_APPLICATION_RNA_SEQ)\n          \nvocabulary_term_SEQUENCING_APPLICATION_GENOMIC_DNA_SEQ = tr.createNewVocabularyTerm('GENOMIC_DNA_SEQ')\nvocabulary_term_SEQUENCING_APPLICATION_GENOMIC_DNA_SEQ.setDescription(None)\nvocabulary_term_SEQUENCING_APPLICATION_GENOMIC_DNA_SEQ.setLabel(None)\nvocabulary_term_SEQUENCING_APPLICATION_GENOMIC_DNA_SEQ.setOrdinal(3)\nvocabulary_SEQUENCING_APPLICATION.addTerm(vocabulary_term_SEQUENCING_APPLICATION_GENOMIC_DNA_SEQ)\n          \nvocabulary_term_SEQUENCING_APPLICATION_CHIP_SEQ = tr.createNewVocabularyTerm('CHIP_SEQ')\nvocabulary_term_SEQUENCING_APPLICATION_CHIP_SEQ.setDescription(None)\nvocabulary_term_SEQUENCING_APPLICATION_CHIP_SEQ.setLabel(None)\nvocabulary_term_SEQUENCING_APPLICATION_CHIP_SEQ.setOrdinal(4)\nvocabulary_SEQUENCING_APPLICATION.addTerm(vocabulary_term_SEQUENCING_APPLICATION_CHIP_SEQ)\n    \nvocabulary_YES_NO = tr.getOrCreateNewVocabulary('YES_NO')\nvocabulary_YES_NO.setDescription('Just offers YES or NO')\nvocabulary_YES_NO.setUrlTemplate(None)\nvocabulary_YES_NO.setManagedInternally(False)\nvocabulary_YES_NO.setChosenFromList(True)\n          \nvocabulary_term_YES_NO_YES = tr.createNewVocabularyTerm('YES')\nvocabulary_term_YES_NO_YES.setDescription(None)\nvocabulary_term_YES_NO_YES.setLabel(None)\nvocabulary_term_YES_NO_YES.setOrdinal(1)\nvocabulary_YES_NO.addTerm(vocabulary_term_YES_NO_YES)\n          \nvocabulary_term_YES_NO_NO = tr.createNewVocabularyTerm('NO')\nvocabulary_term_YES_NO_NO.setDescription(None)\nvocabulary_term_YES_NO_NO.setLabel(None)\nvocabulary_term_YES_NO_NO.setOrdinal(2)\nvocabulary_YES_NO.addTerm(vocabulary_term_YES_NO_NO)\n\nprint "Imported 22 Vocabularies" \nscript_Diff_time = tr.getOrCreateNewScript('Diff_time')\nscript_Diff_time.setName('Diff_time')\nscript_Diff_time.setDescription('Calculates the difference of two given dates')\nscript_Diff_time.setScript('''from datetime import datetime\n\ndef dateTimeSplitter(openbisDate):\n  dateAndTime, tz = openbisDate.rsplit(" ", 1)\n  pythonDateTime = datetime.strptime(dateAndTime, "%Y-%m-%d %H:%M:%S")  \n  return pythonDateTime\n\ndef calculate():\n  \n  try:\n    start = dateTimeSplitter(entity.propertyValue('FLOW_CELL_SEQUENCED_ON'))\n    end = dateTimeSplitter(entity.propertyValue('SEQUENCER_FINISHED'))\n    diffTime = end-start\n    return str(diffTime)\n  except:\n    return "N/A"\n''')\nscript_Diff_time.setEntityForScript('SAMPLE')\nscript_Diff_time.setScriptType('DYNAMIC_PROPERTY')\n\nscript_Has_Parents = tr.getOrCreateNewScript('Has_Parents')\nscript_Has_Parents.setName('Has_Parents')\nscript_Has_Parents.setDescription('Check if the Entity has a parent')\nscript_Has_Parents.setScript('''def validate(entity, isNew):\n  parents = entity.entityPE().parents\n  if parents:\n    return None\n  else:\n    return "No Parents have been selected!"\n''')\nscript_Has_Parents.setEntityForScript('SAMPLE')\nscript_Has_Parents.setScriptType('ENTITY_VALIDATION')\n\nprint "Imported 2 Scripts" \nexp_type_HT_SEQUENCING = tr.getOrCreateNewExperimentType('HT_SEQUENCING')\nexp_type_HT_SEQUENCING.setDescription('High Throughput Sequencing (e.g. Illumina HiSeq, Illumina GA)')\n\n\nprint "Imported 1 Experiment Types" \nsamp_type_ILLUMINA_FLOW_CELL = tr.getOrCreateNewSampleType('ILLUMINA_FLOW_CELL')\nsamp_type_ILLUMINA_FLOW_CELL.setDescription('Container of ILLUMINA_FLOW_LANES\\ Can be created automatically by a drop box and the properties can be filled from the RunInfo.xml and runParameters.xml files')\nsamp_type_ILLUMINA_FLOW_CELL.setListable(True)\nsamp_type_ILLUMINA_FLOW_CELL.setShowContainer(False)\nsamp_type_ILLUMINA_FLOW_CELL.setShowParents(False)\nsamp_type_ILLUMINA_FLOW_CELL.setSubcodeUnique(False)\nsamp_type_ILLUMINA_FLOW_CELL.setAutoGeneratedCode(False)\nsamp_type_ILLUMINA_FLOW_CELL.setShowParentMetadata(False)\nsamp_type_ILLUMINA_FLOW_CELL.setGeneratedCodePrefix('FLOWCELL-')\n\n\nsamp_type_ILLUMINA_FLOW_LANE = tr.getOrCreateNewSampleType('ILLUMINA_FLOW_LANE')\nsamp_type_ILLUMINA_FLOW_LANE.setDescription('Child of LIBRARY or POOL')\nsamp_type_ILLUMINA_FLOW_LANE.setListable(True)\nsamp_type_ILLUMINA_FLOW_LANE.setShowContainer(True)\nsamp_type_ILLUMINA_FLOW_LANE.setShowParents(True)\nsamp_type_ILLUMINA_FLOW_LANE.setSubcodeUnique(False)\nsamp_type_ILLUMINA_FLOW_LANE.setAutoGeneratedCode(False)\nsamp_type_ILLUMINA_FLOW_LANE.setShowParentMetadata(True)\nsamp_type_ILLUMINA_FLOW_LANE.setGeneratedCodePrefix('FLOWLANE-')\n\n\nsamp_type_LIBRARY = tr.getOrCreateNewSampleType('LIBRARY')\nsamp_type_LIBRARY.setDescription('Child of RAW and potential parent of POOL')\nsamp_type_LIBRARY.setListable(True)\nsamp_type_LIBRARY.setShowContainer(False)\nsamp_type_LIBRARY.setShowParents(True)\nsamp_type_LIBRARY.setSubcodeUnique(False)\nsamp_type_LIBRARY.setAutoGeneratedCode(True)\nsamp_type_LIBRARY.setShowParentMetadata(True)\nsamp_type_LIBRARY.setGeneratedCodePrefix('BSSE-QGF-LIBRARY-')\nsamp_type_LIBRARY.setValidationScript(script_Has_Parents)\n\nsamp_type_LIBRARY_POOL = tr.getOrCreateNewSampleType('LIBRARY_POOL')\nsamp_type_LIBRARY_POOL.setDescription('Child of several LIBRARY samples, used for multiplexing')\nsamp_type_LIBRARY_POOL.setListable(True)\nsamp_type_LIBRARY_POOL.setShowContainer(False)\nsamp_type_LIBRARY_POOL.setShowParents(True)\nsamp_type_LIBRARY_POOL.setSubcodeUnique(False)\nsamp_type_LIBRARY_POOL.setAutoGeneratedCode(True)\nsamp_type_LIBRARY_POOL.setShowParentMetadata(True)\nsamp_type_LIBRARY_POOL.setGeneratedCodePrefix('BSSE-QGF-POOL-')\nsamp_type_LIBRARY_POOL.setValidationScript(script_Has_Parents)\n\nsamp_type_MASTER_SAMPLE = tr.getOrCreateNewSampleType('MASTER_SAMPLE')\nsamp_type_MASTER_SAMPLE.setDescription('Sample Type holding Master Data and a parent to RAW')\nsamp_type_MASTER_SAMPLE.setListable(True)\nsamp_type_MASTER_SAMPLE.setShowContainer(False)\nsamp_type_MASTER_SAMPLE.setShowParents(False)\nsamp_type_MASTER_SAMPLE.setSubcodeUnique(False)\nsamp_type_MASTER_SAMPLE.setAutoGeneratedCode(True)\nsamp_type_MASTER_SAMPLE.setShowParentMetadata(False)\nsamp_type_MASTER_SAMPLE.setGeneratedCodePrefix('BSSE-QGF-MASTER-')\n\n\nsamp_type_RAW_SAMPLE = tr.getOrCreateNewSampleType('RAW_SAMPLE')\nsamp_type_RAW_SAMPLE.setDescription('Child of MASTER')\nsamp_type_RAW_SAMPLE.setListable(True)\nsamp_type_RAW_SAMPLE.setShowContainer(False)\nsamp_type_RAW_SAMPLE.setShowParents(True)\nsamp_type_RAW_SAMPLE.setSubcodeUnique(False)\nsamp_type_RAW_SAMPLE.setAutoGeneratedCode(True)\nsamp_type_RAW_SAMPLE.setShowParentMetadata(True)\nsamp_type_RAW_SAMPLE.setGeneratedCodePrefix('BSSE-QGF-RAW-')\nsamp_type_RAW_SAMPLE.setValidationScript(script_Has_Parents)\n\nprint "Imported 6 Sample Types" \ndata_set_type_ALIGNMENT = tr.getOrCreateNewDataSetType('ALIGNMENT')\ndata_set_type_ALIGNMENT.setDescription('Aligner ouput, ideally bam/sam')\ndata_set_type_ALIGNMENT.setMainDataSetPattern(None)\ndata_set_type_ALIGNMENT.setMainDataSetPath(None)\ndata_set_type_ALIGNMENT.setDeletionDisallowed(False)\n\n\ndata_set_type_BASECALL_STATS = tr.getOrCreateNewDataSetType('BASECALL_STATS')\ndata_set_type_BASECALL_STATS.setDescription('Base Call Statistics from the Illumina Pipeline (configureBclToFastq.pl)')\ndata_set_type_BASECALL_STATS.setMainDataSetPattern('original/.*/.*/Demultiplex_Stats.htm')\ndata_set_type_BASECALL_STATS.setMainDataSetPath(None)\ndata_set_type_BASECALL_STATS.setDeletionDisallowed(False)\n\n\ndata_set_type_BIGWIGGLE = tr.getOrCreateNewDataSetType('BIGWIGGLE')\ndata_set_type_BIGWIGGLE.setDescription('Visualization')\ndata_set_type_BIGWIGGLE.setMainDataSetPattern(None)\ndata_set_type_BIGWIGGLE.setMainDataSetPath(None)\ndata_set_type_BIGWIGGLE.setDeletionDisallowed(False)\n\n\ndata_set_type_ELAND_ALIGNMENT = tr.getOrCreateNewDataSetType('ELAND_ALIGNMENT')\ndata_set_type_ELAND_ALIGNMENT.setDescription('Illumina Eland Alignment Output')\ndata_set_type_ELAND_ALIGNMENT.setMainDataSetPattern(None)\ndata_set_type_ELAND_ALIGNMENT.setMainDataSetPath(None)\ndata_set_type_ELAND_ALIGNMENT.setDeletionDisallowed(False)\n\n\ndata_set_type_FASTQ_GZ = tr.getOrCreateNewDataSetType('FASTQ_GZ')\ndata_set_type_FASTQ_GZ.setDescription('Gzipped Fastq file produced by Casava 1.8+')\ndata_set_type_FASTQ_GZ.setMainDataSetPattern(None)\ndata_set_type_FASTQ_GZ.setMainDataSetPath(None)\ndata_set_type_FASTQ_GZ.setDeletionDisallowed(False)\n\n\ndata_set_type_ILLUMINA_HISEQ_OUTPUT = tr.getOrCreateNewDataSetType('ILLUMINA_HISEQ_OUTPUT')\ndata_set_type_ILLUMINA_HISEQ_OUTPUT.setDescription('HiSeq2000 Output')\ndata_set_type_ILLUMINA_HISEQ_OUTPUT.setMainDataSetPattern('original/.*/Data/Status.htm')\ndata_set_type_ILLUMINA_HISEQ_OUTPUT.setMainDataSetPath(None)\ndata_set_type_ILLUMINA_HISEQ_OUTPUT.setDeletionDisallowed(False)\n\n\ndata_set_type_ILLUMINA_MISEQ_OUTPUT = tr.getOrCreateNewDataSetType('ILLUMINA_MISEQ_OUTPUT')\ndata_set_type_ILLUMINA_MISEQ_OUTPUT.setDescription('MiSeq Output')\ndata_set_type_ILLUMINA_MISEQ_OUTPUT.setMainDataSetPattern(None)\ndata_set_type_ILLUMINA_MISEQ_OUTPUT.setMainDataSetPath(None)\ndata_set_type_ILLUMINA_MISEQ_OUTPUT.setDeletionDisallowed(False)\n\n\ndata_set_type_MACS_OUTPUT = tr.getOrCreateNewDataSetType('MACS_OUTPUT')\ndata_set_type_MACS_OUTPUT.setDescription('MACS Peak Caller output')\ndata_set_type_MACS_OUTPUT.setMainDataSetPattern(None)\ndata_set_type_MACS_OUTPUT.setMainDataSetPath(None)\ndata_set_type_MACS_OUTPUT.setDeletionDisallowed(False)\n\n\ndata_set_type_QUALITY_JPGS = tr.getOrCreateNewDataSetType('QUALITY_JPGS')\ndata_set_type_QUALITY_JPGS.setDescription('R generated Quality plots')\ndata_set_type_QUALITY_JPGS.setMainDataSetPattern(None)\ndata_set_type_QUALITY_JPGS.setMainDataSetPath(None)\ndata_set_type_QUALITY_JPGS.setDeletionDisallowed(False)\n\n\ndata_set_type_QUALITY_PDFS = tr.getOrCreateNewDataSetType('QUALITY_PDFS')\ndata_set_type_QUALITY_PDFS.setDescription('R generated pdfs showing quality data')\ndata_set_type_QUALITY_PDFS.setMainDataSetPattern(None)\ndata_set_type_QUALITY_PDFS.setMainDataSetPath(None)\ndata_set_type_QUALITY_PDFS.setDeletionDisallowed(False)\n\n\ndata_set_type_QUALITY_SVG = tr.getOrCreateNewDataSetType('QUALITY_SVG')\ndata_set_type_QUALITY_SVG.setDescription('R generated Quality plots')\ndata_set_type_QUALITY_SVG.setMainDataSetPattern(None)\ndata_set_type_QUALITY_SVG.setMainDataSetPath(None)\ndata_set_type_QUALITY_SVG.setDeletionDisallowed(False)\n\n\ndata_set_type_RUNINFO = tr.getOrCreateNewDataSetType('RUNINFO')\ndata_set_type_RUNINFO.setDescription('Run statstics: Status.html and Status_Files folder')\ndata_set_type_RUNINFO.setMainDataSetPattern('original/.*/Data/Status.htm')\ndata_set_type_RUNINFO.setMainDataSetPath(None)\ndata_set_type_RUNINFO.setDeletionDisallowed(False)\n\n\ndata_set_type_THUMBNAILS = tr.getOrCreateNewDataSetType('THUMBNAILS')\ndata_set_type_THUMBNAILS.setDescription('Thumbnails provided by the Illumina software')\ndata_set_type_THUMBNAILS.setMainDataSetPattern(None)\ndata_set_type_THUMBNAILS.setMainDataSetPath(None)\ndata_set_type_THUMBNAILS.setDeletionDisallowed(False)\n\n\ndata_set_type_TSV = tr.getOrCreateNewDataSetType('TSV')\ndata_set_type_TSV.setDescription('Tab separated files')\ndata_set_type_TSV.setMainDataSetPattern(None)\ndata_set_type_TSV.setMainDataSetPath(None)\ndata_set_type_TSV.setDeletionDisallowed(False)\n\n\nprint "Imported 15 Data Set Types" \nprint "Imported 0 Material Types" \nprop_type_AGILENT_KIT = tr.getOrCreateNewPropertyType('AGILENT_KIT', DataType.CONTROLLEDVOCABULARY)\nprop_type_AGILENT_KIT.setLabel('Agilent Kit')\nprop_type_AGILENT_KIT.setManagedInternally(False)\n\nprop_type_AGILENT_KIT.setVocabulary(vocabulary_AGILENT_KIT)\n\nprop_type_ALIGNMENT_SOFTWARE = tr.getOrCreateNewPropertyType('ALIGNMENT_SOFTWARE', DataType.CONTROLLEDVOCABULARY)\nprop_type_ALIGNMENT_SOFTWARE.setLabel('Alignment software')\nprop_type_ALIGNMENT_SOFTWARE.setManagedInternally(False)\n\nprop_type_ALIGNMENT_SOFTWARE.setVocabulary(vocabulary_ALIGNMENT_SOFTWARE)\n\nprop_type_ANALYSIS_FINISHED = tr.getOrCreateNewPropertyType('ANALYSIS_FINISHED', DataType.TIMESTAMP)\nprop_type_ANALYSIS_FINISHED.setLabel('Analysis finished')\nprop_type_ANALYSIS_FINISHED.setManagedInternally(False)\n\n\nprop_type_BARCODE_COMPLEXITY_CHECKER = tr.getOrCreateNewPropertyType('BARCODE_COMPLEXITY_CHECKER', DataType.MULTILINE_VARCHAR)\nprop_type_BARCODE_COMPLEXITY_CHECKER.setLabel('Barcode_Complexity_Checker')\nprop_type_BARCODE_COMPLEXITY_CHECKER.setManagedInternally(False)\n\n\nprop_type_BASESCOVERED = tr.getOrCreateNewPropertyType('BASESCOVERED', DataType.INTEGER)\nprop_type_BASESCOVERED.setLabel('bases Covered')\nprop_type_BASESCOVERED.setManagedInternally(False)\n\n\nprop_type_BIOLOGICAL_SAMPLE_ARRIVED = tr.getOrCreateNewPropertyType('BIOLOGICAL_SAMPLE_ARRIVED', DataType.TIMESTAMP)\nprop_type_BIOLOGICAL_SAMPLE_ARRIVED.setLabel('Arrival Date of Biological Sample')\nprop_type_BIOLOGICAL_SAMPLE_ARRIVED.setManagedInternally(False)\n\n\nprop_type_CASAVA_VERSION = tr.getOrCreateNewPropertyType('CASAVA_VERSION', DataType.CONTROLLEDVOCABULARY)\nprop_type_CASAVA_VERSION.setLabel('Casava Version')\nprop_type_CASAVA_VERSION.setManagedInternally(False)\n\nprop_type_CASAVA_VERSION.setVocabulary(vocabulary_CASAVA_VERSION)\n\nprop_type_CELL_PLASTICITY_SYSTEMSX = tr.getOrCreateNewPropertyType('CELL_PLASTICITY_SYSTEMSX', DataType.BOOLEAN)\nprop_type_CELL_PLASTICITY_SYSTEMSX.setLabel('Cell Plasticity (SystemsX)')\nprop_type_CELL_PLASTICITY_SYSTEMSX.setManagedInternally(False)\n\n\nprop_type_CHROMCOUNT = tr.getOrCreateNewPropertyType('CHROMCOUNT', DataType.INTEGER)\nprop_type_CHROMCOUNT.setLabel('chrom Count')\nprop_type_CHROMCOUNT.setManagedInternally(False)\n\n\nprop_type_CLUSTER_GENERATION_KIT_VERSION = tr.getOrCreateNewPropertyType('CLUSTER_GENERATION_KIT_VERSION', DataType.CONTROLLEDVOCABULARY)\nprop_type_CLUSTER_GENERATION_KIT_VERSION.setLabel('CS Generation Kit Version')\nprop_type_CLUSTER_GENERATION_KIT_VERSION.setManagedInternally(False)\n\nprop_type_CLUSTER_GENERATION_KIT_VERSION.setVocabulary(vocabulary_CLUSTER_GENERATION_KIT_VERSION)\n\nprop_type_CLUSTER_STATION = tr.getOrCreateNewPropertyType('CLUSTER_STATION', DataType.CONTROLLEDVOCABULARY)\nprop_type_CLUSTER_STATION.setLabel('Cluster Station')\nprop_type_CLUSTER_STATION.setManagedInternally(False)\n\nprop_type_CLUSTER_STATION.setVocabulary(vocabulary_CLUSTER_STATION)\n\nprop_type_CONCENTRATION = tr.getOrCreateNewPropertyType('CONCENTRATION', DataType.REAL)\nprop_type_CONCENTRATION.setLabel(u'Conc. [ng/\\u03bcl]')\nprop_type_CONCENTRATION.setManagedInternally(False)\n\n\nprop_type_CONCENTRATION_FLOWLANE = tr.getOrCreateNewPropertyType('CONCENTRATION_FLOWLANE', DataType.REAL)\nprop_type_CONCENTRATION_FLOWLANE.setLabel('Concentration in flow lane [pM]')\nprop_type_CONCENTRATION_FLOWLANE.setManagedInternally(False)\n\n\nprop_type_CONCENTRATION_ORIGINAL_ILLUMINA = tr.getOrCreateNewPropertyType('CONCENTRATION_ORIGINAL_ILLUMINA', DataType.REAL)\nprop_type_CONCENTRATION_ORIGINAL_ILLUMINA.setLabel(u'Concentration (original) [ng/\\u03bcl]')\nprop_type_CONCENTRATION_ORIGINAL_ILLUMINA.setManagedInternally(False)\n\n\nprop_type_CONCENTRATION_PREPARED_ILLUMINA = tr.getOrCreateNewPropertyType('CONCENTRATION_PREPARED_ILLUMINA', DataType.REAL)\nprop_type_CONCENTRATION_PREPARED_ILLUMINA.setLabel(u'Concentration (prepared) [ng/\\u03bcl]')\nprop_type_CONCENTRATION_PREPARED_ILLUMINA.setManagedInternally(False)\n\n\nprop_type_CONTACT_PERSON_EMAIL = tr.getOrCreateNewPropertyType('CONTACT_PERSON_EMAIL', DataType.VARCHAR)\nprop_type_CONTACT_PERSON_EMAIL.setLabel('Email of Contact Person')\nprop_type_CONTACT_PERSON_EMAIL.setManagedInternally(False)\n\n\nprop_type_CONTACT_PERSON_NAME = tr.getOrCreateNewPropertyType('CONTACT_PERSON_NAME', DataType.VARCHAR)\nprop_type_CONTACT_PERSON_NAME.setLabel('Name of Contact Person')\nprop_type_CONTACT_PERSON_NAME.setManagedInternally(False)\n\n\nprop_type_CONTROL_LANE = tr.getOrCreateNewPropertyType('CONTROL_LANE', DataType.CONTROLLEDVOCABULARY)\nprop_type_CONTROL_LANE.setLabel('Control Lane')\nprop_type_CONTROL_LANE.setManagedInternally(False)\n\nprop_type_CONTROL_LANE.setVocabulary(vocabulary_CONTROL_LANE)\n\nprop_type_CREATED_ON_CS = tr.getOrCreateNewPropertyType('CREATED_ON_CS', DataType.TIMESTAMP)\nprop_type_CREATED_ON_CS.setLabel('Clustering date')\nprop_type_CREATED_ON_CS.setManagedInternally(False)\n\n\nprop_type_CS_PROTOCOL_VERSION = tr.getOrCreateNewPropertyType('CS_PROTOCOL_VERSION', DataType.VARCHAR)\nprop_type_CS_PROTOCOL_VERSION.setLabel('CS Protocol Version')\nprop_type_CS_PROTOCOL_VERSION.setManagedInternally(False)\n\n\nprop_type_CYCLES = tr.getOrCreateNewPropertyType('CYCLES', DataType.INTEGER)\nprop_type_CYCLES.setLabel('Cycles')\nprop_type_CYCLES.setManagedInternally(False)\n\n\nprop_type_DATA_TRANSFERRED = tr.getOrCreateNewPropertyType('DATA_TRANSFERRED', DataType.TIMESTAMP)\nprop_type_DATA_TRANSFERRED.setLabel('Data transferred')\nprop_type_DATA_TRANSFERRED.setManagedInternally(False)\n\n\nprop_type_DNA_CONCENTRATION_OF_LIBRARY = tr.getOrCreateNewPropertyType('DNA_CONCENTRATION_OF_LIBRARY', DataType.INTEGER)\nprop_type_DNA_CONCENTRATION_OF_LIBRARY.setLabel('DNA concentration of library (nM)')\nprop_type_DNA_CONCENTRATION_OF_LIBRARY.setManagedInternally(False)\n\n\nprop_type_DNA_CONCENTRATION_POOL = tr.getOrCreateNewPropertyType('DNA_CONCENTRATION_POOL', DataType.REAL)\nprop_type_DNA_CONCENTRATION_POOL.setLabel('DNA conc. [nM] - customer value')\nprop_type_DNA_CONCENTRATION_POOL.setManagedInternally(False)\n\n\nprop_type_DNA_CONCENTRATION_QGF = tr.getOrCreateNewPropertyType('DNA_CONCENTRATION_QGF', DataType.REAL)\nprop_type_DNA_CONCENTRATION_QGF.setLabel('DNA concentration of Pool [nM]')\nprop_type_DNA_CONCENTRATION_QGF.setManagedInternally(False)\n\n\nprop_type_END_TYPE = tr.getOrCreateNewPropertyType('END_TYPE', DataType.CONTROLLEDVOCABULARY)\nprop_type_END_TYPE.setLabel('Paired End / Single Read')\nprop_type_END_TYPE.setManagedInternally(False)\n\nprop_type_END_TYPE.setVocabulary(vocabulary_END_TYPE)\n\nprop_type_EXPERIMENT_DESIGN = tr.getOrCreateNewPropertyType('EXPERIMENT_DESIGN', DataType.CONTROLLEDVOCABULARY)\nprop_type_EXPERIMENT_DESIGN.setLabel('Experiment Design')\nprop_type_EXPERIMENT_DESIGN.setManagedInternally(False)\n\nprop_type_EXPERIMENT_DESIGN.setVocabulary(vocabulary_EXPERIMENT_DESIGN)\n\nprop_type_EXTERNAL_SAMPLE_NAME = tr.getOrCreateNewPropertyType('EXTERNAL_SAMPLE_NAME', DataType.VARCHAR)\nprop_type_EXTERNAL_SAMPLE_NAME.setLabel('External Sample Name')\nprop_type_EXTERNAL_SAMPLE_NAME.setManagedInternally(False)\n\n\nprop_type_FLOWCELLTYPE = tr.getOrCreateNewPropertyType('FLOWCELLTYPE', DataType.VARCHAR)\nprop_type_FLOWCELLTYPE.setLabel('Flow Cell Type')\nprop_type_FLOWCELLTYPE.setManagedInternally(False)\n\n\nprop_type_FLOW_CELL_SEQUENCED_ON = tr.getOrCreateNewPropertyType('FLOW_CELL_SEQUENCED_ON', DataType.TIMESTAMP)\nprop_type_FLOW_CELL_SEQUENCED_ON.setLabel('Sequencing started')\nprop_type_FLOW_CELL_SEQUENCED_ON.setManagedInternally(False)\n\n\nprop_type_FRAGMENT_SIZE_BASE_PAIRS = tr.getOrCreateNewPropertyType('FRAGMENT_SIZE_BASE_PAIRS', DataType.INTEGER)\nprop_type_FRAGMENT_SIZE_BASE_PAIRS.setLabel('Fragment Size [base pairs]')\nprop_type_FRAGMENT_SIZE_BASE_PAIRS.setManagedInternally(False)\n\n\nprop_type_FRAGMENT_SIZE_PREPARED_ILLUMINA = tr.getOrCreateNewPropertyType('FRAGMENT_SIZE_PREPARED_ILLUMINA', DataType.INTEGER)\nprop_type_FRAGMENT_SIZE_PREPARED_ILLUMINA.setLabel('Fragment Size (prepared) [base (pairs)]')\nprop_type_FRAGMENT_SIZE_PREPARED_ILLUMINA.setManagedInternally(False)\n\n\nprop_type_ILLUMINA_PIPELINE_VERSION = tr.getOrCreateNewPropertyType('ILLUMINA_PIPELINE_VERSION', DataType.CONTROLLEDVOCABULARY)\nprop_type_ILLUMINA_PIPELINE_VERSION.setLabel('Pipeline Version')\nprop_type_ILLUMINA_PIPELINE_VERSION.setManagedInternally(False)\n\nprop_type_ILLUMINA_PIPELINE_VERSION.setVocabulary(vocabulary_PIPELINE_VERSION)\n\nprop_type_INDEX1 = tr.getOrCreateNewPropertyType('INDEX1', DataType.CONTROLLEDVOCABULARY)\nprop_type_INDEX1.setLabel('Index 1')\nprop_type_INDEX1.setManagedInternally(False)\n\nprop_type_INDEX1.setVocabulary(vocabulary_INDEX1)\n\nprop_type_INDEX2 = tr.getOrCreateNewPropertyType('INDEX2', DataType.CONTROLLEDVOCABULARY)\nprop_type_INDEX2.setLabel('Index 2')\nprop_type_INDEX2.setManagedInternally(False)\n\nprop_type_INDEX2.setVocabulary(vocabulary_INDEX2)\n\nprop_type_INDEXREAD = tr.getOrCreateNewPropertyType('INDEXREAD', DataType.INTEGER)\nprop_type_INDEXREAD.setLabel('Length of Index Read1')\nprop_type_INDEXREAD.setManagedInternally(False)\n\n\nprop_type_INDEXREAD2 = tr.getOrCreateNewPropertyType('INDEXREAD2', DataType.INTEGER)\nprop_type_INDEXREAD2.setLabel('Length of Index Read2')\nprop_type_INDEXREAD2.setManagedInternally(False)\n\n\nprop_type_INVOICE = tr.getOrCreateNewPropertyType('INVOICE', DataType.BOOLEAN)\nprop_type_INVOICE.setLabel('Invoice sent?')\nprop_type_INVOICE.setManagedInternally(False)\n\n\nprop_type_ISCOMPRESSED = tr.getOrCreateNewPropertyType('ISCOMPRESSED', DataType.BOOLEAN)\nprop_type_ISCOMPRESSED.setLabel('Is Compressed')\nprop_type_ISCOMPRESSED.setManagedInternally(False)\n\n\nprop_type_ISSUED_COMMAND = tr.getOrCreateNewPropertyType('ISSUED_COMMAND', DataType.MULTILINE_VARCHAR)\nprop_type_ISSUED_COMMAND.setLabel('Issued Command')\nprop_type_ISSUED_COMMAND.setManagedInternally(False)\n\n\nprop_type_ISSWAPPED = tr.getOrCreateNewPropertyType('ISSWAPPED', DataType.INTEGER)\nprop_type_ISSWAPPED.setLabel('Is byte swapped')\nprop_type_ISSWAPPED.setManagedInternally(False)\n\n\nprop_type_KIT = tr.getOrCreateNewPropertyType('KIT', DataType.CONTROLLEDVOCABULARY)\nprop_type_KIT.setLabel('Library preparation kit')\nprop_type_KIT.setManagedInternally(False)\n\nprop_type_KIT.setVocabulary(vocabulary_KIT)\n\nprop_type_KIT_PREPARED = tr.getOrCreateNewPropertyType('KIT_PREPARED', DataType.TIMESTAMP)\nprop_type_KIT_PREPARED.setLabel('Sample processed')\nprop_type_KIT_PREPARED.setManagedInternally(False)\n\n\nprop_type_LANECOUNT = tr.getOrCreateNewPropertyType('LANECOUNT', DataType.INTEGER)\nprop_type_LANECOUNT.setLabel('Lane Count')\nprop_type_LANECOUNT.setManagedInternally(False)\n\n\nprop_type_LIBRARY_PROCESSING_FAILED = tr.getOrCreateNewPropertyType('LIBRARY_PROCESSING_FAILED', DataType.BOOLEAN)\nprop_type_LIBRARY_PROCESSING_FAILED.setLabel('Library processing failed')\nprop_type_LIBRARY_PROCESSING_FAILED.setManagedInternally(False)\n\n\nprop_type_LIBRARY_PROCESSING_POSSIBLE_YES_NO = tr.getOrCreateNewPropertyType('LIBRARY_PROCESSING_POSSIBLE_YES_NO', DataType.CONTROLLEDVOCABULARY)\nprop_type_LIBRARY_PROCESSING_POSSIBLE_YES_NO.setLabel('Library processing possible')\nprop_type_LIBRARY_PROCESSING_POSSIBLE_YES_NO.setManagedInternally(False)\n\nprop_type_LIBRARY_PROCESSING_POSSIBLE_YES_NO.setVocabulary(vocabulary_YES_NO)\n\nprop_type_LIBRARY_PROCESSING_SUCCESSFUL = tr.getOrCreateNewPropertyType('LIBRARY_PROCESSING_SUCCESSFUL', DataType.BOOLEAN)\nprop_type_LIBRARY_PROCESSING_SUCCESSFUL.setLabel('Library processing successful')\nprop_type_LIBRARY_PROCESSING_SUCCESSFUL.setManagedInternally(False)\n\n\nprop_type_LOT = tr.getOrCreateNewPropertyType('LOT', DataType.INTEGER)\nprop_type_LOT.setLabel('Kit Lot #')\nprop_type_LOT.setManagedInternally(False)\n\n\nprop_type_MACS_VERSION = tr.getOrCreateNewPropertyType('MACS_VERSION', DataType.CONTROLLEDVOCABULARY)\nprop_type_MACS_VERSION.setLabel('MACS VERSION')\nprop_type_MACS_VERSION.setManagedInternally(False)\n\nprop_type_MACS_VERSION.setVocabulary(vocabulary_MACS_VERSION)\n\nprop_type_MAPPED_READS = tr.getOrCreateNewPropertyType('MAPPED_READS', DataType.INTEGER)\nprop_type_MAPPED_READS.setLabel('Mapped reads')\nprop_type_MAPPED_READS.setManagedInternally(False)\n\n\nprop_type_MAX = tr.getOrCreateNewPropertyType('MAX', DataType.REAL)\nprop_type_MAX.setLabel('Maximum')\nprop_type_MAX.setManagedInternally(False)\n\n\nprop_type_MEAN = tr.getOrCreateNewPropertyType('MEAN', DataType.REAL)\nprop_type_MEAN.setLabel('Mean')\nprop_type_MEAN.setManagedInternally(False)\n\n\nprop_type_MIN = tr.getOrCreateNewPropertyType('MIN', DataType.REAL)\nprop_type_MIN.setLabel('Minimum')\nprop_type_MIN.setManagedInternally(False)\n\n\nprop_type_MISMATCH_IN_INDEX = tr.getOrCreateNewPropertyType('MISMATCH_IN_INDEX', DataType.CONTROLLEDVOCABULARY)\nprop_type_MISMATCH_IN_INDEX.setLabel('Mismatch in Index')\nprop_type_MISMATCH_IN_INDEX.setManagedInternally(False)\n\nprop_type_MISMATCH_IN_INDEX.setVocabulary(vocabulary_MISMATCH_IN_INDEX)\n\nprop_type_NANO_DROP = tr.getOrCreateNewPropertyType('NANO_DROP', DataType.CONTROLLEDVOCABULARY)\nprop_type_NANO_DROP.setLabel('Nano Drop')\nprop_type_NANO_DROP.setManagedInternally(False)\n\nprop_type_NANO_DROP.setVocabulary(vocabulary_NANO_DROP)\n\nprop_type_NCBI_ORGANISM_TAXONOMY = tr.getOrCreateNewPropertyType('NCBI_ORGANISM_TAXONOMY', DataType.CONTROLLEDVOCABULARY)\nprop_type_NCBI_ORGANISM_TAXONOMY.setLabel('Organism (NCBI Taxonomy)')\nprop_type_NCBI_ORGANISM_TAXONOMY.setManagedInternally(False)\n\nprop_type_NCBI_ORGANISM_TAXONOMY.setVocabulary(vocabulary_NCBI_TAXONOMY)\n\nprop_type_NM_DNA = tr.getOrCreateNewPropertyType('NM_DNA', DataType.REAL)\nprop_type_NM_DNA.setLabel('Calculated DNA concentration of library (nM)')\nprop_type_NM_DNA.setManagedInternally(False)\n\n\nprop_type_NOTES = tr.getOrCreateNewPropertyType('NOTES', DataType.MULTILINE_VARCHAR)\nprop_type_NOTES.setLabel('Notes')\nprop_type_NOTES.setManagedInternally(False)\n\n\nprop_type_NUMBER_OF_ATTACHMENTS = tr.getOrCreateNewPropertyType('NUMBER_OF_ATTACHMENTS', DataType.INTEGER)\nprop_type_NUMBER_OF_ATTACHMENTS.setLabel('Number of Attachments')\nprop_type_NUMBER_OF_ATTACHMENTS.setManagedInternally(False)\n\n\nprop_type_PAIRED_END_KIT = tr.getOrCreateNewPropertyType('PAIRED_END_KIT', DataType.VARCHAR)\nprop_type_PAIRED_END_KIT.setLabel('Paired End Kit')\nprop_type_PAIRED_END_KIT.setManagedInternally(False)\n\n\nprop_type_PERCENTAGE_ONE_MISMATCH_READS_INDEX = tr.getOrCreateNewPropertyType('PERCENTAGE_ONE_MISMATCH_READS_INDEX', DataType.REAL)\nprop_type_PERCENTAGE_ONE_MISMATCH_READS_INDEX.setLabel('% One Mismatch Reads (Index)')\nprop_type_PERCENTAGE_ONE_MISMATCH_READS_INDEX.setManagedInternally(False)\n\n\nprop_type_PERCENTAGE_PASSED_FILTERING = tr.getOrCreateNewPropertyType('PERCENTAGE_PASSED_FILTERING', DataType.REAL)\nprop_type_PERCENTAGE_PASSED_FILTERING.setLabel('% Passes Illumina Filtering (PF)')\nprop_type_PERCENTAGE_PASSED_FILTERING.setManagedInternally(False)\n\n\nprop_type_PERCENTAGE_PERFECT_INDEX_READS = tr.getOrCreateNewPropertyType('PERCENTAGE_PERFECT_INDEX_READS', DataType.REAL)\nprop_type_PERCENTAGE_PERFECT_INDEX_READS.setLabel('% Perfect Index Reads')\nprop_type_PERCENTAGE_PERFECT_INDEX_READS.setManagedInternally(False)\n\n\nprop_type_PERCENTAGE_RAW_CLUSTERS_PER_LANE = tr.getOrCreateNewPropertyType('PERCENTAGE_RAW_CLUSTERS_PER_LANE', DataType.REAL)\nprop_type_PERCENTAGE_RAW_CLUSTERS_PER_LANE.setLabel('% of raw clusters per lane')\nprop_type_PERCENTAGE_RAW_CLUSTERS_PER_LANE.setManagedInternally(False)\n\n\nprop_type_PREPARED_BY = tr.getOrCreateNewPropertyType('PREPARED_BY', DataType.VARCHAR)\nprop_type_PREPARED_BY.setLabel('Prepared by')\nprop_type_PREPARED_BY.setManagedInternally(False)\n\n\nprop_type_PRIMARYDATASIZE = tr.getOrCreateNewPropertyType('PRIMARYDATASIZE', DataType.INTEGER)\nprop_type_PRIMARYDATASIZE.setLabel('primary Data Size')\nprop_type_PRIMARYDATASIZE.setManagedInternally(False)\n\n\nprop_type_PRIMARYINDEXSIZE = tr.getOrCreateNewPropertyType('PRIMARYINDEXSIZE', DataType.INTEGER)\nprop_type_PRIMARYINDEXSIZE.setLabel('primary Index Size')\nprop_type_PRIMARYINDEXSIZE.setManagedInternally(False)\n\n\nprop_type_PRINCIPAL_INVESTIGATOR_EMAIL = tr.getOrCreateNewPropertyType('PRINCIPAL_INVESTIGATOR_EMAIL', DataType.VARCHAR)\nprop_type_PRINCIPAL_INVESTIGATOR_EMAIL.setLabel('Email of Principal Investigator')\nprop_type_PRINCIPAL_INVESTIGATOR_EMAIL.setManagedInternally(False)\n\n\nprop_type_PRINCIPAL_INVESTIGATOR_NAME = tr.getOrCreateNewPropertyType('PRINCIPAL_INVESTIGATOR_NAME', DataType.VARCHAR)\nprop_type_PRINCIPAL_INVESTIGATOR_NAME.setLabel('Name of Principal Investigator')\nprop_type_PRINCIPAL_INVESTIGATOR_NAME.setManagedInternally(False)\n\n\nprop_type_QC_AT_DBSSE = tr.getOrCreateNewPropertyType('QC_AT_DBSSE', DataType.CONTROLLEDVOCABULARY)\nprop_type_QC_AT_DBSSE.setLabel('QC at D-BSSE')\nprop_type_QC_AT_DBSSE.setManagedInternally(False)\n\nprop_type_QC_AT_DBSSE.setVocabulary(vocabulary_YES_NO)\n\nprop_type_QC_REQUIRED = tr.getOrCreateNewPropertyType('QC_REQUIRED', DataType.CONTROLLEDVOCABULARY)\nprop_type_QC_REQUIRED.setLabel('QC required')\nprop_type_QC_REQUIRED.setManagedInternally(False)\n\nprop_type_QC_REQUIRED.setVocabulary(vocabulary_YES_NO)\n\nprop_type_RUNNINGTIME = tr.getOrCreateNewPropertyType('RUNNINGTIME', DataType.VARCHAR)\nprop_type_RUNNINGTIME.setLabel('Running Time')\nprop_type_RUNNINGTIME.setManagedInternally(False)\n\n\nprop_type_RUN_FOLDER_NAME = tr.getOrCreateNewPropertyType('RUN_FOLDER_NAME', DataType.VARCHAR)\nprop_type_RUN_FOLDER_NAME.setLabel('Run Folder Name')\nprop_type_RUN_FOLDER_NAME.setManagedInternally(False)\n\n\nprop_type_SAMPLE_KIND = tr.getOrCreateNewPropertyType('SAMPLE_KIND', DataType.CONTROLLEDVOCABULARY)\nprop_type_SAMPLE_KIND.setLabel('Sample Kind')\nprop_type_SAMPLE_KIND.setManagedInternally(False)\n\nprop_type_SAMPLE_KIND.setVocabulary(vocabulary_SAMPLE_TYPE)\n\nprop_type_SAMTOOLS_FLAGSTAT = tr.getOrCreateNewPropertyType('SAMTOOLS_FLAGSTAT', DataType.MULTILINE_VARCHAR)\nprop_type_SAMTOOLS_FLAGSTAT.setLabel('Samtools Flagstat Output')\nprop_type_SAMTOOLS_FLAGSTAT.setManagedInternally(False)\n\n\nprop_type_SBS_KIT = tr.getOrCreateNewPropertyType('SBS_KIT', DataType.VARCHAR)\nprop_type_SBS_KIT.setLabel('SBS Kit')\nprop_type_SBS_KIT.setManagedInternally(False)\n\n\nprop_type_SBS_SEQUENCING_KIT_VERSION = tr.getOrCreateNewPropertyType('SBS_SEQUENCING_KIT_VERSION', DataType.CONTROLLEDVOCABULARY)\nprop_type_SBS_SEQUENCING_KIT_VERSION.setLabel('SBS Sequencing Kit Version')\nprop_type_SBS_SEQUENCING_KIT_VERSION.setManagedInternally(False)\n\nprop_type_SBS_SEQUENCING_KIT_VERSION.setVocabulary(vocabulary_SBS_SEQUENCING_KIT_VERSION)\n\nprop_type_SEQUENCER = tr.getOrCreateNewPropertyType('SEQUENCER', DataType.CONTROLLEDVOCABULARY)\nprop_type_SEQUENCER.setLabel('Sequencer')\nprop_type_SEQUENCER.setManagedInternally(False)\n\nprop_type_SEQUENCER.setVocabulary(vocabulary_SEQUENCER)\n\nprop_type_SEQUENCER_FINISHED = tr.getOrCreateNewPropertyType('SEQUENCER_FINISHED', DataType.TIMESTAMP)\nprop_type_SEQUENCER_FINISHED.setLabel('Sequencer finished')\nprop_type_SEQUENCER_FINISHED.setManagedInternally(False)\n\n\nprop_type_STARTING_AMOUNT_OF_SAMPLE_IN_NG = tr.getOrCreateNewPropertyType('STARTING_AMOUNT_OF_SAMPLE_IN_NG', DataType.REAL)\nprop_type_STARTING_AMOUNT_OF_SAMPLE_IN_NG.setLabel('Starting amount of sample (ng)')\nprop_type_STARTING_AMOUNT_OF_SAMPLE_IN_NG.setManagedInternally(False)\n\n\nprop_type_STD = tr.getOrCreateNewPropertyType('STD', DataType.REAL)\nprop_type_STD.setLabel('Standard deviation')\nprop_type_STD.setManagedInternally(False)\n\n\nprop_type_SURFACECOUNT = tr.getOrCreateNewPropertyType('SURFACECOUNT', DataType.INTEGER)\nprop_type_SURFACECOUNT.setLabel('Surface Count')\nprop_type_SURFACECOUNT.setManagedInternally(False)\n\n\nprop_type_SWATHCOUNT = tr.getOrCreateNewPropertyType('SWATHCOUNT', DataType.INTEGER)\nprop_type_SWATHCOUNT.setLabel('Swath Count')\nprop_type_SWATHCOUNT.setManagedInternally(False)\n\n\nprop_type_TILECOUNT = tr.getOrCreateNewPropertyType('TILECOUNT', DataType.INTEGER)\nprop_type_TILECOUNT.setLabel('Tile Count')\nprop_type_TILECOUNT.setManagedInternally(False)\n\n\nprop_type_TOTAL_READS = tr.getOrCreateNewPropertyType('TOTAL_READS', DataType.INTEGER)\nprop_type_TOTAL_READS.setLabel('Total reads')\nprop_type_TOTAL_READS.setManagedInternally(False)\n\n\nprop_type_UL_DNA = tr.getOrCreateNewPropertyType('UL_DNA', DataType.REAL)\nprop_type_UL_DNA.setLabel('Calculated ul DNA for 2nM stock')\nprop_type_UL_DNA.setManagedInternally(False)\n\n\nprop_type_UL_EB = tr.getOrCreateNewPropertyType('UL_EB', DataType.REAL)\nprop_type_UL_EB.setLabel('Calculated ul EB for 2nM stock ')\nprop_type_UL_EB.setManagedInternally(False)\n\n\nprop_type_UL_STOCK = tr.getOrCreateNewPropertyType('UL_STOCK', DataType.INTEGER)\nprop_type_UL_STOCK.setLabel('ul of 2nM stock')\nprop_type_UL_STOCK.setManagedInternally(False)\n\n\nprop_type_UNIQUE_BARCODES = tr.getOrCreateNewPropertyType('UNIQUE_BARCODES', DataType.VARCHAR)\nprop_type_UNIQUE_BARCODES.setLabel('Unique Barcodes in Pool?')\nprop_type_UNIQUE_BARCODES.setManagedInternally(False)\n\n\nprop_type_VERSION = tr.getOrCreateNewPropertyType('VERSION', DataType.VARCHAR)\nprop_type_VERSION.setLabel('Version')\nprop_type_VERSION.setManagedInternally(False)\n\n\nprop_type_YIELD_MBASES = tr.getOrCreateNewPropertyType('YIELD_MBASES', DataType.INTEGER)\nprop_type_YIELD_MBASES.setLabel('Yield(Mbases)')\nprop_type_YIELD_MBASES.setManagedInternally(False)\n\n\nprop_type_ZOOMLEVELS = tr.getOrCreateNewPropertyType('ZOOMLEVELS', DataType.INTEGER)\nprop_type_ZOOMLEVELS.setLabel('zoom Levels')\nprop_type_ZOOMLEVELS.setManagedInternally(False)\n\n\nprint "Imported 92 Property Types" \nassignment_DATA_SET_ALIGNMENT_ALIGNMENT_SOFTWARE = tr.assignPropertyType(data_set_type_ALIGNMENT, prop_type_ALIGNMENT_SOFTWARE)\nassignment_DATA_SET_ALIGNMENT_ALIGNMENT_SOFTWARE.setMandatory(False)\nassignment_DATA_SET_ALIGNMENT_ALIGNMENT_SOFTWARE.setSection(None)\nassignment_DATA_SET_ALIGNMENT_ALIGNMENT_SOFTWARE.setPositionInForms(3)\n\nassignment_DATA_SET_ALIGNMENT_VERSION = tr.assignPropertyType(data_set_type_ALIGNMENT, prop_type_VERSION)\nassignment_DATA_SET_ALIGNMENT_VERSION.setMandatory(False)\nassignment_DATA_SET_ALIGNMENT_VERSION.setSection(None)\nassignment_DATA_SET_ALIGNMENT_VERSION.setPositionInForms(4)\n\nassignment_DATA_SET_ALIGNMENT_NOTES = tr.assignPropertyType(data_set_type_ALIGNMENT, prop_type_NOTES)\nassignment_DATA_SET_ALIGNMENT_NOTES.setMandatory(False)\nassignment_DATA_SET_ALIGNMENT_NOTES.setSection(None)\nassignment_DATA_SET_ALIGNMENT_NOTES.setPositionInForms(5)\n\nassignment_DATA_SET_ALIGNMENT_SAMTOOLS_FLAGSTAT = tr.assignPropertyType(data_set_type_ALIGNMENT, prop_type_SAMTOOLS_FLAGSTAT)\nassignment_DATA_SET_ALIGNMENT_SAMTOOLS_FLAGSTAT.setMandatory(False)\nassignment_DATA_SET_ALIGNMENT_SAMTOOLS_FLAGSTAT.setSection(None)\nassignment_DATA_SET_ALIGNMENT_SAMTOOLS_FLAGSTAT.setPositionInForms(6)\n\nassignment_DATA_SET_ALIGNMENT_MAPPED_READS = tr.assignPropertyType(data_set_type_ALIGNMENT, prop_type_MAPPED_READS)\nassignment_DATA_SET_ALIGNMENT_MAPPED_READS.setMandatory(False)\nassignment_DATA_SET_ALIGNMENT_MAPPED_READS.setSection(None)\nassignment_DATA_SET_ALIGNMENT_MAPPED_READS.setPositionInForms(7)\n\nassignment_DATA_SET_ALIGNMENT_TOTAL_READS = tr.assignPropertyType(data_set_type_ALIGNMENT, prop_type_TOTAL_READS)\nassignment_DATA_SET_ALIGNMENT_TOTAL_READS.setMandatory(False)\nassignment_DATA_SET_ALIGNMENT_TOTAL_READS.setSection(None)\nassignment_DATA_SET_ALIGNMENT_TOTAL_READS.setPositionInForms(8)\n\nassignment_DATA_SET_ALIGNMENT_ISSUED_COMMAND = tr.assignPropertyType(data_set_type_ALIGNMENT, prop_type_ISSUED_COMMAND)\nassignment_DATA_SET_ALIGNMENT_ISSUED_COMMAND.setMandatory(False)\nassignment_DATA_SET_ALIGNMENT_ISSUED_COMMAND.setSection(None)\nassignment_DATA_SET_ALIGNMENT_ISSUED_COMMAND.setPositionInForms(9)\n\nassignment_DATA_SET_BASECALL_STATS_MISMATCH_IN_INDEX = tr.assignPropertyType(data_set_type_BASECALL_STATS, prop_type_MISMATCH_IN_INDEX)\nassignment_DATA_SET_BASECALL_STATS_MISMATCH_IN_INDEX.setMandatory(False)\nassignment_DATA_SET_BASECALL_STATS_MISMATCH_IN_INDEX.setSection(None)\nassignment_DATA_SET_BASECALL_STATS_MISMATCH_IN_INDEX.setPositionInForms(3)\n\nassignment_DATA_SET_BIGWIGGLE_NOTES = tr.assignPropertyType(data_set_type_BIGWIGGLE, prop_type_NOTES)\nassignment_DATA_SET_BIGWIGGLE_NOTES.setMandatory(False)\nassignment_DATA_SET_BIGWIGGLE_NOTES.setSection(None)\nassignment_DATA_SET_BIGWIGGLE_NOTES.setPositionInForms(3)\n\nassignment_DATA_SET_BIGWIGGLE_VERSION = tr.assignPropertyType(data_set_type_BIGWIGGLE, prop_type_VERSION)\nassignment_DATA_SET_BIGWIGGLE_VERSION.setMandatory(False)\nassignment_DATA_SET_BIGWIGGLE_VERSION.setSection(None)\nassignment_DATA_SET_BIGWIGGLE_VERSION.setPositionInForms(4)\n\nassignment_DATA_SET_BIGWIGGLE_ISCOMPRESSED = tr.assignPropertyType(data_set_type_BIGWIGGLE, prop_type_ISCOMPRESSED)\nassignment_DATA_SET_BIGWIGGLE_ISCOMPRESSED.setMandatory(False)\nassignment_DATA_SET_BIGWIGGLE_ISCOMPRESSED.setSection(None)\nassignment_DATA_SET_BIGWIGGLE_ISCOMPRESSED.setPositionInForms(5)\n\nassignment_DATA_SET_BIGWIGGLE_ISSWAPPED = tr.assignPropertyType(data_set_type_BIGWIGGLE, prop_type_ISSWAPPED)\nassignment_DATA_SET_BIGWIGGLE_ISSWAPPED.setMandatory(False)\nassignment_DATA_SET_BIGWIGGLE_ISSWAPPED.setSection(None)\nassignment_DATA_SET_BIGWIGGLE_ISSWAPPED.setPositionInForms(6)\n\nassignment_DATA_SET_BIGWIGGLE_PRIMARYDATASIZE = tr.assignPropertyType(data_set_type_BIGWIGGLE, prop_type_PRIMARYDATASIZE)\nassignment_DATA_SET_BIGWIGGLE_PRIMARYDATASIZE.setMandatory(False)\nassignment_DATA_SET_BIGWIGGLE_PRIMARYDATASIZE.setSection(None)\nassignment_DATA_SET_BIGWIGGLE_PRIMARYDATASIZE.setPositionInForms(7)\n\nassignment_DATA_SET_BIGWIGGLE_PRIMARYINDEXSIZE = tr.assignPropertyType(data_set_type_BIGWIGGLE, prop_type_PRIMARYINDEXSIZE)\nassignment_DATA_SET_BIGWIGGLE_PRIMARYINDEXSIZE.setMandatory(False)\nassignment_DATA_SET_BIGWIGGLE_PRIMARYINDEXSIZE.setSection(None)\nassignment_DATA_SET_BIGWIGGLE_PRIMARYINDEXSIZE.setPositionInForms(8)\n\nassignment_DATA_SET_BIGWIGGLE_ZOOMLEVELS = tr.assignPropertyType(data_set_type_BIGWIGGLE, prop_type_ZOOMLEVELS)\nassignment_DATA_SET_BIGWIGGLE_ZOOMLEVELS.setMandatory(False)\nassignment_DATA_SET_BIGWIGGLE_ZOOMLEVELS.setSection(None)\nassignment_DATA_SET_BIGWIGGLE_ZOOMLEVELS.setPositionInForms(9)\n\nassignment_DATA_SET_BIGWIGGLE_CHROMCOUNT = tr.assignPropertyType(data_set_type_BIGWIGGLE, prop_type_CHROMCOUNT)\nassignment_DATA_SET_BIGWIGGLE_CHROMCOUNT.setMandatory(False)\nassignment_DATA_SET_BIGWIGGLE_CHROMCOUNT.setSection(None)\nassignment_DATA_SET_BIGWIGGLE_CHROMCOUNT.setPositionInForms(10)\n\nassignment_DATA_SET_BIGWIGGLE_BASESCOVERED = tr.assignPropertyType(data_set_type_BIGWIGGLE, prop_type_BASESCOVERED)\nassignment_DATA_SET_BIGWIGGLE_BASESCOVERED.setMandatory(False)\nassignment_DATA_SET_BIGWIGGLE_BASESCOVERED.setSection(None)\nassignment_DATA_SET_BIGWIGGLE_BASESCOVERED.setPositionInForms(11)\n\nassignment_DATA_SET_BIGWIGGLE_MEAN = tr.assignPropertyType(data_set_type_BIGWIGGLE, prop_type_MEAN)\nassignment_DATA_SET_BIGWIGGLE_MEAN.setMandatory(False)\nassignment_DATA_SET_BIGWIGGLE_MEAN.setSection(None)\nassignment_DATA_SET_BIGWIGGLE_MEAN.setPositionInForms(12)\n\nassignment_DATA_SET_BIGWIGGLE_MIN = tr.assignPropertyType(data_set_type_BIGWIGGLE, prop_type_MIN)\nassignment_DATA_SET_BIGWIGGLE_MIN.setMandatory(False)\nassignment_DATA_SET_BIGWIGGLE_MIN.setSection(None)\nassignment_DATA_SET_BIGWIGGLE_MIN.setPositionInForms(13)\n\nassignment_DATA_SET_BIGWIGGLE_MAX = tr.assignPropertyType(data_set_type_BIGWIGGLE, prop_type_MAX)\nassignment_DATA_SET_BIGWIGGLE_MAX.setMandatory(False)\nassignment_DATA_SET_BIGWIGGLE_MAX.setSection(None)\nassignment_DATA_SET_BIGWIGGLE_MAX.setPositionInForms(14)\n\nassignment_DATA_SET_BIGWIGGLE_STD = tr.assignPropertyType(data_set_type_BIGWIGGLE, prop_type_STD)\nassignment_DATA_SET_BIGWIGGLE_STD.setMandatory(False)\nassignment_DATA_SET_BIGWIGGLE_STD.setSection(None)\nassignment_DATA_SET_BIGWIGGLE_STD.setPositionInForms(15)\n\nassignment_DATA_SET_FASTQ_GZ_NOTES = tr.assignPropertyType(data_set_type_FASTQ_GZ, prop_type_NOTES)\nassignment_DATA_SET_FASTQ_GZ_NOTES.setMandatory(False)\nassignment_DATA_SET_FASTQ_GZ_NOTES.setSection(None)\nassignment_DATA_SET_FASTQ_GZ_NOTES.setPositionInForms(3)\n\nassignment_DATA_SET_FASTQ_GZ_YIELD_MBASES = tr.assignPropertyType(data_set_type_FASTQ_GZ, prop_type_YIELD_MBASES)\nassignment_DATA_SET_FASTQ_GZ_YIELD_MBASES.setMandatory(False)\nassignment_DATA_SET_FASTQ_GZ_YIELD_MBASES.setSection(None)\nassignment_DATA_SET_FASTQ_GZ_YIELD_MBASES.setPositionInForms(4)\n\nassignment_DATA_SET_FASTQ_GZ_PERCENTAGE_PASSED_FILTERING = tr.assignPropertyType(data_set_type_FASTQ_GZ, prop_type_PERCENTAGE_PASSED_FILTERING)\nassignment_DATA_SET_FASTQ_GZ_PERCENTAGE_PASSED_FILTERING.setMandatory(False)\nassignment_DATA_SET_FASTQ_GZ_PERCENTAGE_PASSED_FILTERING.setSection(None)\nassignment_DATA_SET_FASTQ_GZ_PERCENTAGE_PASSED_FILTERING.setPositionInForms(5)\n\nassignment_DATA_SET_FASTQ_GZ_INDEX1 = tr.assignPropertyType(data_set_type_FASTQ_GZ, prop_type_INDEX1)\nassignment_DATA_SET_FASTQ_GZ_INDEX1.setMandatory(False)\nassignment_DATA_SET_FASTQ_GZ_INDEX1.setSection(None)\nassignment_DATA_SET_FASTQ_GZ_INDEX1.setPositionInForms(6)\n\nassignment_DATA_SET_FASTQ_GZ_INDEX2 = tr.assignPropertyType(data_set_type_FASTQ_GZ, prop_type_INDEX2)\nassignment_DATA_SET_FASTQ_GZ_INDEX2.setMandatory(False)\nassignment_DATA_SET_FASTQ_GZ_INDEX2.setSection(None)\nassignment_DATA_SET_FASTQ_GZ_INDEX2.setPositionInForms(7)\n\nassignment_DATA_SET_FASTQ_GZ_PERCENTAGE_RAW_CLUSTERS_PER_LANE = tr.assignPropertyType(data_set_type_FASTQ_GZ, prop_type_PERCENTAGE_RAW_CLUSTERS_PER_LANE)\nassignment_DATA_SET_FASTQ_GZ_PERCENTAGE_RAW_CLUSTERS_PER_LANE.setMandatory(False)\nassignment_DATA_SET_FASTQ_GZ_PERCENTAGE_RAW_CLUSTERS_PER_LANE.setSection(None)\nassignment_DATA_SET_FASTQ_GZ_PERCENTAGE_RAW_CLUSTERS_PER_LANE.setPositionInForms(8)\n\nassignment_DATA_SET_FASTQ_GZ_PERCENTAGE_PERFECT_INDEX_READS = tr.assignPropertyType(data_set_type_FASTQ_GZ, prop_type_PERCENTAGE_PERFECT_INDEX_READS)\nassignment_DATA_SET_FASTQ_GZ_PERCENTAGE_PERFECT_INDEX_READS.setMandatory(False)\nassignment_DATA_SET_FASTQ_GZ_PERCENTAGE_PERFECT_INDEX_READS.setSection(None)\nassignment_DATA_SET_FASTQ_GZ_PERCENTAGE_PERFECT_INDEX_READS.setPositionInForms(9)\n\nassignment_DATA_SET_FASTQ_GZ_PERCENTAGE_ONE_MISMATCH_READS_INDEX = tr.assignPropertyType(data_set_type_FASTQ_GZ, prop_type_PERCENTAGE_ONE_MISMATCH_READS_INDEX)\nassignment_DATA_SET_FASTQ_GZ_PERCENTAGE_ONE_MISMATCH_READS_INDEX.setMandatory(False)\nassignment_DATA_SET_FASTQ_GZ_PERCENTAGE_ONE_MISMATCH_READS_INDEX.setSection(None)\nassignment_DATA_SET_FASTQ_GZ_PERCENTAGE_ONE_MISMATCH_READS_INDEX.setPositionInForms(10)\n\nassignment_EXPERIMENT_HT_SEQUENCING_EXPERIMENT_DESIGN = tr.assignPropertyType(exp_type_HT_SEQUENCING, prop_type_EXPERIMENT_DESIGN)\nassignment_EXPERIMENT_HT_SEQUENCING_EXPERIMENT_DESIGN.setMandatory(False)\nassignment_EXPERIMENT_HT_SEQUENCING_EXPERIMENT_DESIGN.setSection(None)\nassignment_EXPERIMENT_HT_SEQUENCING_EXPERIMENT_DESIGN.setPositionInForms(3)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_RUN_FOLDER_NAME = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_RUN_FOLDER_NAME)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_RUN_FOLDER_NAME.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_RUN_FOLDER_NAME.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_RUN_FOLDER_NAME.setPositionInForms(1)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SEQUENCER = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_SEQUENCER)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SEQUENCER.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SEQUENCER.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SEQUENCER.setPositionInForms(5)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_END_TYPE = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_END_TYPE)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_END_TYPE.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_END_TYPE.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_END_TYPE.setPositionInForms(7)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_FLOW_CELL_SEQUENCED_ON = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_FLOW_CELL_SEQUENCED_ON)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_FLOW_CELL_SEQUENCED_ON.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_FLOW_CELL_SEQUENCED_ON.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_FLOW_CELL_SEQUENCED_ON.setPositionInForms(8)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SEQUENCER_FINISHED = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_SEQUENCER_FINISHED)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SEQUENCER_FINISHED.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SEQUENCER_FINISHED.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SEQUENCER_FINISHED.setPositionInForms(9)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_RUNNINGTIME = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_RUNNINGTIME)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_RUNNINGTIME.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_RUNNINGTIME.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_RUNNINGTIME.setPositionInForms(10)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_RUNNINGTIME.setScriptName('Diff_time')\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_RUNNINGTIME.setDynamic(True)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_RUNNINGTIME.setManaged(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_RUNNINGTIME.setShownEdit(False)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_ILLUMINA_PIPELINE_VERSION = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_ILLUMINA_PIPELINE_VERSION)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_ILLUMINA_PIPELINE_VERSION.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_ILLUMINA_PIPELINE_VERSION.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_ILLUMINA_PIPELINE_VERSION.setPositionInForms(11)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CYCLES = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_CYCLES)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CYCLES.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CYCLES.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CYCLES.setPositionInForms(14)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_INDEXREAD = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_INDEXREAD)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_INDEXREAD.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_INDEXREAD.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_INDEXREAD.setPositionInForms(17)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_INDEXREAD2 = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_INDEXREAD2)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_INDEXREAD2.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_INDEXREAD2.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_INDEXREAD2.setPositionInForms(18)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CONTROL_LANE = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_CONTROL_LANE)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CONTROL_LANE.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CONTROL_LANE.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CONTROL_LANE.setPositionInForms(19)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_FLOWCELLTYPE = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_FLOWCELLTYPE)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_FLOWCELLTYPE.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_FLOWCELLTYPE.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_FLOWCELLTYPE.setPositionInForms(20)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_LANECOUNT = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_LANECOUNT)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_LANECOUNT.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_LANECOUNT.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_LANECOUNT.setPositionInForms(21)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SURFACECOUNT = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_SURFACECOUNT)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SURFACECOUNT.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SURFACECOUNT.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SURFACECOUNT.setPositionInForms(22)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SWATHCOUNT = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_SWATHCOUNT)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SWATHCOUNT.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SWATHCOUNT.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SWATHCOUNT.setPositionInForms(23)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_TILECOUNT = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_TILECOUNT)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_TILECOUNT.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_TILECOUNT.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_TILECOUNT.setPositionInForms(24)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SBS_KIT = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_SBS_KIT)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SBS_KIT.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SBS_KIT.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SBS_KIT.setPositionInForms(25)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_PAIRED_END_KIT = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_PAIRED_END_KIT)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_PAIRED_END_KIT.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_PAIRED_END_KIT.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_PAIRED_END_KIT.setPositionInForms(26)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CLUSTER_STATION = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_CLUSTER_STATION)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CLUSTER_STATION.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CLUSTER_STATION.setSection('Clustering')\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CLUSTER_STATION.setPositionInForms(27)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CREATED_ON_CS = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_CREATED_ON_CS)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CREATED_ON_CS.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CREATED_ON_CS.setSection('Clustering')\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CREATED_ON_CS.setPositionInForms(28)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CS_PROTOCOL_VERSION = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_CS_PROTOCOL_VERSION)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CS_PROTOCOL_VERSION.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CS_PROTOCOL_VERSION.setSection('Clustering')\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CS_PROTOCOL_VERSION.setPositionInForms(29)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CLUSTER_GENERATION_KIT_VERSION = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_CLUSTER_GENERATION_KIT_VERSION)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CLUSTER_GENERATION_KIT_VERSION.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CLUSTER_GENERATION_KIT_VERSION.setSection('Clustering')\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_CLUSTER_GENERATION_KIT_VERSION.setPositionInForms(30)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SBS_SEQUENCING_KIT_VERSION = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_SBS_SEQUENCING_KIT_VERSION)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SBS_SEQUENCING_KIT_VERSION.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SBS_SEQUENCING_KIT_VERSION.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_SBS_SEQUENCING_KIT_VERSION.setPositionInForms(32)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_ANALYSIS_FINISHED = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_ANALYSIS_FINISHED)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_ANALYSIS_FINISHED.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_ANALYSIS_FINISHED.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_ANALYSIS_FINISHED.setPositionInForms(34)\n\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_NOTES = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_CELL, prop_type_NOTES)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_NOTES.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_NOTES.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_CELL_NOTES.setPositionInForms(35)\n\nassignment_SAMPLE_ILLUMINA_FLOW_LANE_CONCENTRATION_FLOWLANE = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_LANE, prop_type_CONCENTRATION_FLOWLANE)\nassignment_SAMPLE_ILLUMINA_FLOW_LANE_CONCENTRATION_FLOWLANE.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_LANE_CONCENTRATION_FLOWLANE.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_LANE_CONCENTRATION_FLOWLANE.setPositionInForms(20)\n\nassignment_SAMPLE_ILLUMINA_FLOW_LANE_NOTES = tr.assignPropertyType(samp_type_ILLUMINA_FLOW_LANE, prop_type_NOTES)\nassignment_SAMPLE_ILLUMINA_FLOW_LANE_NOTES.setMandatory(False)\nassignment_SAMPLE_ILLUMINA_FLOW_LANE_NOTES.setSection(None)\nassignment_SAMPLE_ILLUMINA_FLOW_LANE_NOTES.setPositionInForms(23)\n\nassignment_DATA_SET_ILLUMINA_HISEQ_OUTPUT_CASAVA_VERSION = tr.assignPropertyType(data_set_type_ILLUMINA_HISEQ_OUTPUT, prop_type_CASAVA_VERSION)\nassignment_DATA_SET_ILLUMINA_HISEQ_OUTPUT_CASAVA_VERSION.setMandatory(False)\nassignment_DATA_SET_ILLUMINA_HISEQ_OUTPUT_CASAVA_VERSION.setSection(None)\nassignment_DATA_SET_ILLUMINA_HISEQ_OUTPUT_CASAVA_VERSION.setPositionInForms(3)\n\nassignment_SAMPLE_LIBRARY_EXTERNAL_SAMPLE_NAME = tr.assignPropertyType(samp_type_LIBRARY, prop_type_EXTERNAL_SAMPLE_NAME)\nassignment_SAMPLE_LIBRARY_EXTERNAL_SAMPLE_NAME.setMandatory(False)\nassignment_SAMPLE_LIBRARY_EXTERNAL_SAMPLE_NAME.setSection(None)\nassignment_SAMPLE_LIBRARY_EXTERNAL_SAMPLE_NAME.setPositionInForms(1)\n\nassignment_SAMPLE_LIBRARY_KIT = tr.assignPropertyType(samp_type_LIBRARY, prop_type_KIT)\nassignment_SAMPLE_LIBRARY_KIT.setMandatory(False)\nassignment_SAMPLE_LIBRARY_KIT.setSection(None)\nassignment_SAMPLE_LIBRARY_KIT.setPositionInForms(2)\n\nassignment_SAMPLE_LIBRARY_PREPARED_BY = tr.assignPropertyType(samp_type_LIBRARY, prop_type_PREPARED_BY)\nassignment_SAMPLE_LIBRARY_PREPARED_BY.setMandatory(False)\nassignment_SAMPLE_LIBRARY_PREPARED_BY.setSection(None)\nassignment_SAMPLE_LIBRARY_PREPARED_BY.setPositionInForms(3)\n\nassignment_SAMPLE_LIBRARY_STARTING_AMOUNT_OF_SAMPLE_IN_NG = tr.assignPropertyType(samp_type_LIBRARY, prop_type_STARTING_AMOUNT_OF_SAMPLE_IN_NG)\nassignment_SAMPLE_LIBRARY_STARTING_AMOUNT_OF_SAMPLE_IN_NG.setMandatory(False)\nassignment_SAMPLE_LIBRARY_STARTING_AMOUNT_OF_SAMPLE_IN_NG.setSection(None)\nassignment_SAMPLE_LIBRARY_STARTING_AMOUNT_OF_SAMPLE_IN_NG.setPositionInForms(4)\n\nassignment_SAMPLE_LIBRARY_INDEX1 = tr.assignPropertyType(samp_type_LIBRARY, prop_type_INDEX1)\nassignment_SAMPLE_LIBRARY_INDEX1.setMandatory(False)\nassignment_SAMPLE_LIBRARY_INDEX1.setSection(None)\nassignment_SAMPLE_LIBRARY_INDEX1.setPositionInForms(7)\n\nassignment_SAMPLE_LIBRARY_INDEX2 = tr.assignPropertyType(samp_type_LIBRARY, prop_type_INDEX2)\nassignment_SAMPLE_LIBRARY_INDEX2.setMandatory(False)\nassignment_SAMPLE_LIBRARY_INDEX2.setSection(None)\nassignment_SAMPLE_LIBRARY_INDEX2.setPositionInForms(8)\n\nassignment_SAMPLE_LIBRARY_LOT = tr.assignPropertyType(samp_type_LIBRARY, prop_type_LOT)\nassignment_SAMPLE_LIBRARY_LOT.setMandatory(False)\nassignment_SAMPLE_LIBRARY_LOT.setSection(None)\nassignment_SAMPLE_LIBRARY_LOT.setPositionInForms(9)\n\nassignment_SAMPLE_LIBRARY_AGILENT_KIT = tr.assignPropertyType(samp_type_LIBRARY, prop_type_AGILENT_KIT)\nassignment_SAMPLE_LIBRARY_AGILENT_KIT.setMandatory(False)\nassignment_SAMPLE_LIBRARY_AGILENT_KIT.setSection('QC Data')\nassignment_SAMPLE_LIBRARY_AGILENT_KIT.setPositionInForms(10)\n\nassignment_SAMPLE_LIBRARY_FRAGMENT_SIZE_PREPARED_ILLUMINA = tr.assignPropertyType(samp_type_LIBRARY, prop_type_FRAGMENT_SIZE_PREPARED_ILLUMINA)\nassignment_SAMPLE_LIBRARY_FRAGMENT_SIZE_PREPARED_ILLUMINA.setMandatory(False)\nassignment_SAMPLE_LIBRARY_FRAGMENT_SIZE_PREPARED_ILLUMINA.setSection('QC Data')\nassignment_SAMPLE_LIBRARY_FRAGMENT_SIZE_PREPARED_ILLUMINA.setPositionInForms(11)\n\nassignment_SAMPLE_LIBRARY_NANO_DROP = tr.assignPropertyType(samp_type_LIBRARY, prop_type_NANO_DROP)\nassignment_SAMPLE_LIBRARY_NANO_DROP.setMandatory(False)\nassignment_SAMPLE_LIBRARY_NANO_DROP.setSection('QC Data')\nassignment_SAMPLE_LIBRARY_NANO_DROP.setPositionInForms(12)\n\nassignment_SAMPLE_LIBRARY_CONCENTRATION_PREPARED_ILLUMINA = tr.assignPropertyType(samp_type_LIBRARY, prop_type_CONCENTRATION_PREPARED_ILLUMINA)\nassignment_SAMPLE_LIBRARY_CONCENTRATION_PREPARED_ILLUMINA.setMandatory(False)\nassignment_SAMPLE_LIBRARY_CONCENTRATION_PREPARED_ILLUMINA.setSection('QC Data')\nassignment_SAMPLE_LIBRARY_CONCENTRATION_PREPARED_ILLUMINA.setPositionInForms(13)\n\nassignment_SAMPLE_LIBRARY_DNA_CONCENTRATION_OF_LIBRARY = tr.assignPropertyType(samp_type_LIBRARY, prop_type_DNA_CONCENTRATION_OF_LIBRARY)\nassignment_SAMPLE_LIBRARY_DNA_CONCENTRATION_OF_LIBRARY.setMandatory(False)\nassignment_SAMPLE_LIBRARY_DNA_CONCENTRATION_OF_LIBRARY.setSection('QC Data')\nassignment_SAMPLE_LIBRARY_DNA_CONCENTRATION_OF_LIBRARY.setPositionInForms(14)\n\nassignment_SAMPLE_LIBRARY_LIBRARY_PROCESSING_SUCCESSFUL = tr.assignPropertyType(samp_type_LIBRARY, prop_type_LIBRARY_PROCESSING_SUCCESSFUL)\nassignment_SAMPLE_LIBRARY_LIBRARY_PROCESSING_SUCCESSFUL.setMandatory(False)\nassignment_SAMPLE_LIBRARY_LIBRARY_PROCESSING_SUCCESSFUL.setSection('QC Data')\nassignment_SAMPLE_LIBRARY_LIBRARY_PROCESSING_SUCCESSFUL.setPositionInForms(15)\n\nassignment_SAMPLE_LIBRARY_LIBRARY_PROCESSING_FAILED = tr.assignPropertyType(samp_type_LIBRARY, prop_type_LIBRARY_PROCESSING_FAILED)\nassignment_SAMPLE_LIBRARY_LIBRARY_PROCESSING_FAILED.setMandatory(False)\nassignment_SAMPLE_LIBRARY_LIBRARY_PROCESSING_FAILED.setSection('QC Data')\nassignment_SAMPLE_LIBRARY_LIBRARY_PROCESSING_FAILED.setPositionInForms(16)\n\nassignment_SAMPLE_LIBRARY_QC_AT_DBSSE = tr.assignPropertyType(samp_type_LIBRARY, prop_type_QC_AT_DBSSE)\nassignment_SAMPLE_LIBRARY_QC_AT_DBSSE.setMandatory(False)\nassignment_SAMPLE_LIBRARY_QC_AT_DBSSE.setSection('QC Data')\nassignment_SAMPLE_LIBRARY_QC_AT_DBSSE.setPositionInForms(17)\n\nassignment_SAMPLE_LIBRARY_KIT_PREPARED = tr.assignPropertyType(samp_type_LIBRARY, prop_type_KIT_PREPARED)\nassignment_SAMPLE_LIBRARY_KIT_PREPARED.setMandatory(False)\nassignment_SAMPLE_LIBRARY_KIT_PREPARED.setSection(None)\nassignment_SAMPLE_LIBRARY_KIT_PREPARED.setPositionInForms(18)\n\nassignment_SAMPLE_LIBRARY_DATA_TRANSFERRED = tr.assignPropertyType(samp_type_LIBRARY, prop_type_DATA_TRANSFERRED)\nassignment_SAMPLE_LIBRARY_DATA_TRANSFERRED.setMandatory(False)\nassignment_SAMPLE_LIBRARY_DATA_TRANSFERRED.setSection(None)\nassignment_SAMPLE_LIBRARY_DATA_TRANSFERRED.setPositionInForms(19)\n\nassignment_SAMPLE_LIBRARY_INVOICE = tr.assignPropertyType(samp_type_LIBRARY, prop_type_INVOICE)\nassignment_SAMPLE_LIBRARY_INVOICE.setMandatory(False)\nassignment_SAMPLE_LIBRARY_INVOICE.setSection(None)\nassignment_SAMPLE_LIBRARY_INVOICE.setPositionInForms(20)\n\nassignment_SAMPLE_LIBRARY_NOTES = tr.assignPropertyType(samp_type_LIBRARY, prop_type_NOTES)\nassignment_SAMPLE_LIBRARY_NOTES.setMandatory(False)\nassignment_SAMPLE_LIBRARY_NOTES.setSection(None)\nassignment_SAMPLE_LIBRARY_NOTES.setPositionInForms(33)\n\nassignment_SAMPLE_LIBRARY_POOL_EXTERNAL_SAMPLE_NAME = tr.assignPropertyType(samp_type_LIBRARY_POOL, prop_type_EXTERNAL_SAMPLE_NAME)\nassignment_SAMPLE_LIBRARY_POOL_EXTERNAL_SAMPLE_NAME.setMandatory(False)\nassignment_SAMPLE_LIBRARY_POOL_EXTERNAL_SAMPLE_NAME.setSection(None)\nassignment_SAMPLE_LIBRARY_POOL_EXTERNAL_SAMPLE_NAME.setPositionInForms(1)\n\nassignment_SAMPLE_LIBRARY_POOL_PREPARED_BY = tr.assignPropertyType(samp_type_LIBRARY_POOL, prop_type_PREPARED_BY)\nassignment_SAMPLE_LIBRARY_POOL_PREPARED_BY.setMandatory(False)\nassignment_SAMPLE_LIBRARY_POOL_PREPARED_BY.setSection(None)\nassignment_SAMPLE_LIBRARY_POOL_PREPARED_BY.setPositionInForms(2)\n\nassignment_SAMPLE_LIBRARY_POOL_DNA_CONCENTRATION_POOL = tr.assignPropertyType(samp_type_LIBRARY_POOL, prop_type_DNA_CONCENTRATION_POOL)\nassignment_SAMPLE_LIBRARY_POOL_DNA_CONCENTRATION_POOL.setMandatory(False)\nassignment_SAMPLE_LIBRARY_POOL_DNA_CONCENTRATION_POOL.setSection(None)\nassignment_SAMPLE_LIBRARY_POOL_DNA_CONCENTRATION_POOL.setPositionInForms(3)\n\nassignment_SAMPLE_LIBRARY_POOL_QC_REQUIRED = tr.assignPropertyType(samp_type_LIBRARY_POOL, prop_type_QC_REQUIRED)\nassignment_SAMPLE_LIBRARY_POOL_QC_REQUIRED.setMandatory(False)\nassignment_SAMPLE_LIBRARY_POOL_QC_REQUIRED.setSection(None)\nassignment_SAMPLE_LIBRARY_POOL_QC_REQUIRED.setPositionInForms(4)\n\nassignment_SAMPLE_LIBRARY_POOL_AGILENT_KIT = tr.assignPropertyType(samp_type_LIBRARY_POOL, prop_type_AGILENT_KIT)\nassignment_SAMPLE_LIBRARY_POOL_AGILENT_KIT.setMandatory(False)\nassignment_SAMPLE_LIBRARY_POOL_AGILENT_KIT.setSection('QC Data')\nassignment_SAMPLE_LIBRARY_POOL_AGILENT_KIT.setPositionInForms(5)\n\nassignment_SAMPLE_LIBRARY_POOL_FRAGMENT_SIZE_BASE_PAIRS = tr.assignPropertyType(samp_type_LIBRARY_POOL, prop_type_FRAGMENT_SIZE_BASE_PAIRS)\nassignment_SAMPLE_LIBRARY_POOL_FRAGMENT_SIZE_BASE_PAIRS.setMandatory(False)\nassignment_SAMPLE_LIBRARY_POOL_FRAGMENT_SIZE_BASE_PAIRS.setSection('QC Data')\nassignment_SAMPLE_LIBRARY_POOL_FRAGMENT_SIZE_BASE_PAIRS.setPositionInForms(6)\n\nassignment_SAMPLE_LIBRARY_POOL_NANO_DROP = tr.assignPropertyType(samp_type_LIBRARY_POOL, prop_type_NANO_DROP)\nassignment_SAMPLE_LIBRARY_POOL_NANO_DROP.setMandatory(False)\nassignment_SAMPLE_LIBRARY_POOL_NANO_DROP.setSection('QC Data')\nassignment_SAMPLE_LIBRARY_POOL_NANO_DROP.setPositionInForms(7)\n\nassignment_SAMPLE_LIBRARY_POOL_CONCENTRATION = tr.assignPropertyType(samp_type_LIBRARY_POOL, prop_type_CONCENTRATION)\nassignment_SAMPLE_LIBRARY_POOL_CONCENTRATION.setMandatory(False)\nassignment_SAMPLE_LIBRARY_POOL_CONCENTRATION.setSection('QC Data')\nassignment_SAMPLE_LIBRARY_POOL_CONCENTRATION.setPositionInForms(8)\n\nassignment_SAMPLE_LIBRARY_POOL_DNA_CONCENTRATION_QGF = tr.assignPropertyType(samp_type_LIBRARY_POOL, prop_type_DNA_CONCENTRATION_QGF)\nassignment_SAMPLE_LIBRARY_POOL_DNA_CONCENTRATION_QGF.setMandatory(False)\nassignment_SAMPLE_LIBRARY_POOL_DNA_CONCENTRATION_QGF.setSection('QC Data')\nassignment_SAMPLE_LIBRARY_POOL_DNA_CONCENTRATION_QGF.setPositionInForms(9)\n\nassignment_SAMPLE_LIBRARY_POOL_INVOICE = tr.assignPropertyType(samp_type_LIBRARY_POOL, prop_type_INVOICE)\nassignment_SAMPLE_LIBRARY_POOL_INVOICE.setMandatory(False)\nassignment_SAMPLE_LIBRARY_POOL_INVOICE.setSection(None)\nassignment_SAMPLE_LIBRARY_POOL_INVOICE.setPositionInForms(10)\n\nassignment_SAMPLE_LIBRARY_POOL_NOTES = tr.assignPropertyType(samp_type_LIBRARY_POOL, prop_type_NOTES)\nassignment_SAMPLE_LIBRARY_POOL_NOTES.setMandatory(False)\nassignment_SAMPLE_LIBRARY_POOL_NOTES.setSection(None)\nassignment_SAMPLE_LIBRARY_POOL_NOTES.setPositionInForms(11)\n\nassignment_DATA_SET_MACS_OUTPUT_MACS_VERSION = tr.assignPropertyType(data_set_type_MACS_OUTPUT, prop_type_MACS_VERSION)\nassignment_DATA_SET_MACS_OUTPUT_MACS_VERSION.setMandatory(False)\nassignment_DATA_SET_MACS_OUTPUT_MACS_VERSION.setSection(None)\nassignment_DATA_SET_MACS_OUTPUT_MACS_VERSION.setPositionInForms(3)\n\nassignment_DATA_SET_MACS_OUTPUT_NOTES = tr.assignPropertyType(data_set_type_MACS_OUTPUT, prop_type_NOTES)\nassignment_DATA_SET_MACS_OUTPUT_NOTES.setMandatory(False)\nassignment_DATA_SET_MACS_OUTPUT_NOTES.setSection(None)\nassignment_DATA_SET_MACS_OUTPUT_NOTES.setPositionInForms(4)\n\nassignment_SAMPLE_MASTER_SAMPLE_BIOLOGICAL_SAMPLE_ARRIVED = tr.assignPropertyType(samp_type_MASTER_SAMPLE, prop_type_BIOLOGICAL_SAMPLE_ARRIVED)\nassignment_SAMPLE_MASTER_SAMPLE_BIOLOGICAL_SAMPLE_ARRIVED.setMandatory(True)\nassignment_SAMPLE_MASTER_SAMPLE_BIOLOGICAL_SAMPLE_ARRIVED.setSection(None)\nassignment_SAMPLE_MASTER_SAMPLE_BIOLOGICAL_SAMPLE_ARRIVED.setPositionInForms(1)\n\nassignment_SAMPLE_MASTER_SAMPLE_CONTACT_PERSON_EMAIL = tr.assignPropertyType(samp_type_MASTER_SAMPLE, prop_type_CONTACT_PERSON_EMAIL)\nassignment_SAMPLE_MASTER_SAMPLE_CONTACT_PERSON_EMAIL.setMandatory(True)\nassignment_SAMPLE_MASTER_SAMPLE_CONTACT_PERSON_EMAIL.setSection(None)\nassignment_SAMPLE_MASTER_SAMPLE_CONTACT_PERSON_EMAIL.setPositionInForms(2)\n\nassignment_SAMPLE_MASTER_SAMPLE_CONTACT_PERSON_NAME = tr.assignPropertyType(samp_type_MASTER_SAMPLE, prop_type_CONTACT_PERSON_NAME)\nassignment_SAMPLE_MASTER_SAMPLE_CONTACT_PERSON_NAME.setMandatory(True)\nassignment_SAMPLE_MASTER_SAMPLE_CONTACT_PERSON_NAME.setSection(None)\nassignment_SAMPLE_MASTER_SAMPLE_CONTACT_PERSON_NAME.setPositionInForms(3)\n\nassignment_SAMPLE_MASTER_SAMPLE_PRINCIPAL_INVESTIGATOR_EMAIL = tr.assignPropertyType(samp_type_MASTER_SAMPLE, prop_type_PRINCIPAL_INVESTIGATOR_EMAIL)\nassignment_SAMPLE_MASTER_SAMPLE_PRINCIPAL_INVESTIGATOR_EMAIL.setMandatory(True)\nassignment_SAMPLE_MASTER_SAMPLE_PRINCIPAL_INVESTIGATOR_EMAIL.setSection(None)\nassignment_SAMPLE_MASTER_SAMPLE_PRINCIPAL_INVESTIGATOR_EMAIL.setPositionInForms(4)\n\nassignment_SAMPLE_MASTER_SAMPLE_PRINCIPAL_INVESTIGATOR_NAME = tr.assignPropertyType(samp_type_MASTER_SAMPLE, prop_type_PRINCIPAL_INVESTIGATOR_NAME)\nassignment_SAMPLE_MASTER_SAMPLE_PRINCIPAL_INVESTIGATOR_NAME.setMandatory(True)\nassignment_SAMPLE_MASTER_SAMPLE_PRINCIPAL_INVESTIGATOR_NAME.setSection(None)\nassignment_SAMPLE_MASTER_SAMPLE_PRINCIPAL_INVESTIGATOR_NAME.setPositionInForms(5)\n\nassignment_SAMPLE_MASTER_SAMPLE_NCBI_ORGANISM_TAXONOMY = tr.assignPropertyType(samp_type_MASTER_SAMPLE, prop_type_NCBI_ORGANISM_TAXONOMY)\nassignment_SAMPLE_MASTER_SAMPLE_NCBI_ORGANISM_TAXONOMY.setMandatory(True)\nassignment_SAMPLE_MASTER_SAMPLE_NCBI_ORGANISM_TAXONOMY.setSection(None)\nassignment_SAMPLE_MASTER_SAMPLE_NCBI_ORGANISM_TAXONOMY.setPositionInForms(7)\n\nassignment_SAMPLE_MASTER_SAMPLE_SAMPLE_KIND = tr.assignPropertyType(samp_type_MASTER_SAMPLE, prop_type_SAMPLE_KIND)\nassignment_SAMPLE_MASTER_SAMPLE_SAMPLE_KIND.setMandatory(True)\nassignment_SAMPLE_MASTER_SAMPLE_SAMPLE_KIND.setSection(None)\nassignment_SAMPLE_MASTER_SAMPLE_SAMPLE_KIND.setPositionInForms(21)\n\nassignment_SAMPLE_MASTER_SAMPLE_NOTES = tr.assignPropertyType(samp_type_MASTER_SAMPLE, prop_type_NOTES)\nassignment_SAMPLE_MASTER_SAMPLE_NOTES.setMandatory(False)\nassignment_SAMPLE_MASTER_SAMPLE_NOTES.setSection(None)\nassignment_SAMPLE_MASTER_SAMPLE_NOTES.setPositionInForms(22)\n\nassignment_SAMPLE_RAW_SAMPLE_EXTERNAL_SAMPLE_NAME = tr.assignPropertyType(samp_type_RAW_SAMPLE, prop_type_EXTERNAL_SAMPLE_NAME)\nassignment_SAMPLE_RAW_SAMPLE_EXTERNAL_SAMPLE_NAME.setMandatory(False)\nassignment_SAMPLE_RAW_SAMPLE_EXTERNAL_SAMPLE_NAME.setSection(None)\nassignment_SAMPLE_RAW_SAMPLE_EXTERNAL_SAMPLE_NAME.setPositionInForms(1)\n\nassignment_SAMPLE_RAW_SAMPLE_CONCENTRATION_ORIGINAL_ILLUMINA = tr.assignPropertyType(samp_type_RAW_SAMPLE, prop_type_CONCENTRATION_ORIGINAL_ILLUMINA)\nassignment_SAMPLE_RAW_SAMPLE_CONCENTRATION_ORIGINAL_ILLUMINA.setMandatory(False)\nassignment_SAMPLE_RAW_SAMPLE_CONCENTRATION_ORIGINAL_ILLUMINA.setSection(None)\nassignment_SAMPLE_RAW_SAMPLE_CONCENTRATION_ORIGINAL_ILLUMINA.setPositionInForms(4)\n\nassignment_SAMPLE_RAW_SAMPLE_PREPARED_BY = tr.assignPropertyType(samp_type_RAW_SAMPLE, prop_type_PREPARED_BY)\nassignment_SAMPLE_RAW_SAMPLE_PREPARED_BY.setMandatory(False)\nassignment_SAMPLE_RAW_SAMPLE_PREPARED_BY.setSection(None)\nassignment_SAMPLE_RAW_SAMPLE_PREPARED_BY.setPositionInForms(8)\n\nassignment_SAMPLE_RAW_SAMPLE_KIT_PREPARED = tr.assignPropertyType(samp_type_RAW_SAMPLE, prop_type_KIT_PREPARED)\nassignment_SAMPLE_RAW_SAMPLE_KIT_PREPARED.setMandatory(False)\nassignment_SAMPLE_RAW_SAMPLE_KIT_PREPARED.setSection(None)\nassignment_SAMPLE_RAW_SAMPLE_KIT_PREPARED.setPositionInForms(9)\n\nassignment_SAMPLE_RAW_SAMPLE_LIBRARY_PROCESSING_POSSIBLE_YES_NO = tr.assignPropertyType(samp_type_RAW_SAMPLE, prop_type_LIBRARY_PROCESSING_POSSIBLE_YES_NO)\nassignment_SAMPLE_RAW_SAMPLE_LIBRARY_PROCESSING_POSSIBLE_YES_NO.setMandatory(False)\nassignment_SAMPLE_RAW_SAMPLE_LIBRARY_PROCESSING_POSSIBLE_YES_NO.setSection(None)\nassignment_SAMPLE_RAW_SAMPLE_LIBRARY_PROCESSING_POSSIBLE_YES_NO.setPositionInForms(10)\n\nassignment_SAMPLE_RAW_SAMPLE_NOTES = tr.assignPropertyType(samp_type_RAW_SAMPLE, prop_type_NOTES)\nassignment_SAMPLE_RAW_SAMPLE_NOTES.setMandatory(False)\nassignment_SAMPLE_RAW_SAMPLE_NOTES.setSection(None)\nassignment_SAMPLE_RAW_SAMPLE_NOTES.setPositionInForms(13)\n\nprint "Imported 104 Property Assignments" \nprint "Imported 0 External DMSs" \nprint ("Import of Master Data finished.") \n
3	microscopy	4	2020-09-30 09:01:14.0242+02	# -*- coding: utf-8 -*-\nimport ch.systemsx.cisd.openbis.generic.server.jython.api.v1.DataType as DataType\n\nprint("Importing Microscopy Core Technology Master Data...")\n\ntr = service.transaction()\n\n# ==============================================================================\n#\n# FILE FORMATS\n#\n# ==============================================================================\n\n# JPG file format\nfile_type_JPG = tr.getOrCreateNewFileFormatType('JPG')\nfile_type_JPG.setDescription(None)\n\n# PNG file format\nfile_type_PNG = tr.getOrCreateNewFileFormatType('PNG')\nfile_type_PNG.setDescription(None)\n\n# UNKNOWN file format\nfile_type_UNKNOWN = tr.getOrCreateNewFileFormatType('UNKNOWN')\nfile_type_UNKNOWN.setDescription('Unknown file format')\n\n# ==============================================================================\n#\n# EXPERIMENT/COLLECTION TYPES\n#\n# ==============================================================================\n\n# COLLECTION\nexp_type_COLLECTION = tr.getOrCreateNewExperimentType('COLLECTION')\nexp_type_COLLECTION.setDescription('Used as a folder for things.')\n\n# ==============================================================================\n#\n# SAMPLE TYPES\n#\n# ==============================================================================\n\n# MICROSCOPY_EXPERIMENT\nsamp_type_MICROSCOPY_EXPERIMENT = tr.getOrCreateNewSampleType('MICROSCOPY_EXPERIMENT')\nsamp_type_MICROSCOPY_EXPERIMENT.setDescription('Generic microscopy experiment.')\nsamp_type_MICROSCOPY_EXPERIMENT.setListable(True)\nsamp_type_MICROSCOPY_EXPERIMENT.setShowContainer(False)\nsamp_type_MICROSCOPY_EXPERIMENT.setShowParents(True)\nsamp_type_MICROSCOPY_EXPERIMENT.setSubcodeUnique(False)\nsamp_type_MICROSCOPY_EXPERIMENT.setAutoGeneratedCode(False)\nsamp_type_MICROSCOPY_EXPERIMENT.setShowParentMetadata(False)\nsamp_type_MICROSCOPY_EXPERIMENT.setGeneratedCodePrefix('MICROSCOPY_EXPERIMENT.')\n\n# MICROSCOPY_SAMPLE_TYPE\nsamp_type_MICROSCOPY_SAMPLE_TYPE = tr.getOrCreateNewSampleType('MICROSCOPY_SAMPLE_TYPE')\nsamp_type_MICROSCOPY_SAMPLE_TYPE.setDescription('Sample type for microscopy data sets.')\nsamp_type_MICROSCOPY_SAMPLE_TYPE.setListable(True)\nsamp_type_MICROSCOPY_SAMPLE_TYPE.setShowContainer(False)\nsamp_type_MICROSCOPY_SAMPLE_TYPE.setShowParents(True)\nsamp_type_MICROSCOPY_SAMPLE_TYPE.setSubcodeUnique(False)\nsamp_type_MICROSCOPY_SAMPLE_TYPE.setAutoGeneratedCode(True)\nsamp_type_MICROSCOPY_SAMPLE_TYPE.setShowParentMetadata(False)\nsamp_type_MICROSCOPY_SAMPLE_TYPE.setGeneratedCodePrefix('M')\n\n# ORGANIZATION_UNIT\nsamp_type_ORGANIZATION_UNIT = tr.getOrCreateNewSampleType('ORGANIZATION_UNIT')\nsamp_type_ORGANIZATION_UNIT.setDescription(\n    'Used to create different organisations for samples since they can\\'t belong to more than one experiment.')\nsamp_type_ORGANIZATION_UNIT.setListable(True)\nsamp_type_ORGANIZATION_UNIT.setShowContainer(False)\nsamp_type_ORGANIZATION_UNIT.setShowParents(True)\nsamp_type_ORGANIZATION_UNIT.setSubcodeUnique(False)\nsamp_type_ORGANIZATION_UNIT.setAutoGeneratedCode(True)\nsamp_type_ORGANIZATION_UNIT.setShowParentMetadata(False)\nsamp_type_ORGANIZATION_UNIT.setGeneratedCodePrefix('OU.')\n\n# ==============================================================================\n#\n# DATASET TYPES\n#\n# ==============================================================================\n\n# ATTACHMENT\ndata_set_type_ATTACHMENT = tr.getOrCreateNewDataSetType('ATTACHMENT')\ndata_set_type_ATTACHMENT.setDescription('Used to attach files to entities.')\ndata_set_type_ATTACHMENT.setMainDataSetPattern(None)\ndata_set_type_ATTACHMENT.setMainDataSetPath(None)\ndata_set_type_ATTACHMENT.setDeletionDisallowed(False)\n\n# MICROSCOPY_ACCESSORY_FILE\ndata_set_type_MICROSCOPY_ACCESSORY_FILE = tr.getOrCreateNewDataSetType('MICROSCOPY_ACCESSORY_FILE')\ndata_set_type_MICROSCOPY_ACCESSORY_FILE.setDescription(\n    'An accessory dataset file associated with a microscopy experiment.')\ndata_set_type_MICROSCOPY_ACCESSORY_FILE.setMainDataSetPattern(None)\ndata_set_type_MICROSCOPY_ACCESSORY_FILE.setMainDataSetPath(None)\ndata_set_type_MICROSCOPY_ACCESSORY_FILE.setDeletionDisallowed(False)\n\n# MICROSCOPY_IMG\ndata_set_type_MICROSCOPY_IMG = tr.getOrCreateNewDataSetType('MICROSCOPY_IMG')\ndata_set_type_MICROSCOPY_IMG.setDescription('Generic Microscopy Image.')\ndata_set_type_MICROSCOPY_IMG.setMainDataSetPattern(None)\ndata_set_type_MICROSCOPY_IMG.setMainDataSetPath(None)\ndata_set_type_MICROSCOPY_IMG.setDeletionDisallowed(False)\nif 'setDataSetKind' in dir(data_set_type_MICROSCOPY_IMG):\n    data_set_type_MICROSCOPY_IMG.setDataSetKind('PHYSICAL')\n\n# MICROSCOPY_IMG_CONTAINER\ndata_set_type_MICROSCOPY_IMG_CONTAINER = tr.getOrCreateNewDataSetType('MICROSCOPY_IMG_CONTAINER')\ndata_set_type_MICROSCOPY_IMG_CONTAINER.setDescription('Generic Microscopy Image Container.')\ndata_set_type_MICROSCOPY_IMG_CONTAINER.setMainDataSetPattern(None)\ndata_set_type_MICROSCOPY_IMG_CONTAINER.setMainDataSetPath(None)\ndata_set_type_MICROSCOPY_IMG_CONTAINER.setDeletionDisallowed(False)\nif 'setDataSetKind' in dir(data_set_type_MICROSCOPY_IMG_CONTAINER):\n    data_set_type_MICROSCOPY_IMG_CONTAINER.setDataSetKind('CONTAINER')\n\n# MICROSCOPY_IMG_OVERVIEW\ndata_set_type_MICROSCOPY_IMG_OVERVIEW = tr.getOrCreateNewDataSetType('MICROSCOPY_IMG_OVERVIEW')\ndata_set_type_MICROSCOPY_IMG_OVERVIEW.setDescription('Overview Microscopy Images. Generated from raw images.')\ndata_set_type_MICROSCOPY_IMG_OVERVIEW.setMainDataSetPattern(None)\ndata_set_type_MICROSCOPY_IMG_OVERVIEW.setMainDataSetPath(None)\ndata_set_type_MICROSCOPY_IMG_OVERVIEW.setDeletionDisallowed(False)\nif 'setDataSetKind' in dir(data_set_type_MICROSCOPY_IMG_OVERVIEW):\n    data_set_type_MICROSCOPY_IMG_OVERVIEW.setDataSetKind('PHYSICAL')\n\n# MICROSCOPY_IMG_THUMBNAIL\ndata_set_type_MICROSCOPY_IMG_THUMBNAIL = tr.getOrCreateNewDataSetType('MICROSCOPY_IMG_THUMBNAIL')\ndata_set_type_MICROSCOPY_IMG_THUMBNAIL.setDescription('Representative image for the whole dataset.')\ndata_set_type_MICROSCOPY_IMG_THUMBNAIL.setMainDataSetPattern(None)\ndata_set_type_MICROSCOPY_IMG_THUMBNAIL.setMainDataSetPath(None)\ndata_set_type_MICROSCOPY_IMG_THUMBNAIL.setDeletionDisallowed(False)\nif 'setDataSetKind' in dir(data_set_type_MICROSCOPY_IMG_THUMBNAIL):\n    data_set_type_MICROSCOPY_IMG_THUMBNAIL.setDataSetKind('PHYSICAL')\n\n# ==============================================================================\n#\n# PROPERTY TYPES\n#\n# ==============================================================================\n\n# ANNOTATIONS_STATE\nprop_type_ANNOTATIONS_STATE = tr.getOrCreateNewPropertyType('ANNOTATIONS_STATE', DataType.XML)\nprop_type_ANNOTATIONS_STATE.setLabel('Annotations State')\nprop_type_ANNOTATIONS_STATE.setManagedInternally(False)\nprop_type_ANNOTATIONS_STATE.setInternalNamespace(True)\n\n# DEFAULT_OBJECT_TYPE\nprop_type_DEFAULT_OBJECT_TYPE = tr.getOrCreateNewPropertyType('DEFAULT_OBJECT_TYPE', DataType.VARCHAR)\nprop_type_DEFAULT_OBJECT_TYPE.setLabel('Default Object Type')\nprop_type_DEFAULT_OBJECT_TYPE.setManagedInternally(False)\nprop_type_DEFAULT_OBJECT_TYPE.setInternalNamespace(True)\n\n# DESCRIPTION\nprop_type_DESCRIPTION = tr.getOrCreateNewPropertyType('DESCRIPTION', DataType.VARCHAR)\nprop_type_DESCRIPTION.setLabel('Description')\nprop_type_DESCRIPTION.setManagedInternally(False)\nprop_type_DESCRIPTION.setInternalNamespace(False)\n\n# NAME\nprop_type_NAME = tr.getOrCreateNewPropertyType('NAME', DataType.VARCHAR)\nprop_type_NAME.setLabel('Name')\nprop_type_NAME.setManagedInternally(False)\nprop_type_NAME.setInternalNamespace(True)\n\n# NAME\nprop_type_NOTES = tr.getOrCreateNewPropertyType('NOTES', DataType.VARCHAR)\nprop_type_NOTES.setLabel('Notes')\nprop_type_NOTES.setManagedInternally(False)\nprop_type_NOTES.setInternalNamespace(False)\n\n# RESOLUTION\nprop_type_RESOLUTION = tr.getOrCreateNewPropertyType('RESOLUTION', DataType.VARCHAR)\nprop_type_RESOLUTION.setLabel('Resolution')\nprop_type_RESOLUTION.setManagedInternally(False)\nprop_type_RESOLUTION.setInternalNamespace(True)\n\n# XMLCOMMENTS\nprop_type_XMLCOMMENTS = tr.getOrCreateNewPropertyType('XMLCOMMENTS', DataType.XML)\nprop_type_XMLCOMMENTS.setLabel('XML Comments')\nprop_type_XMLCOMMENTS.setManagedInternally(False)\nprop_type_XMLCOMMENTS.setInternalNamespace(True)\n\n# MICROSCOPY_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nprop_type_MICROSCOPY_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.getOrCreateNewPropertyType(\n    'MICROSCOPY_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME', DataType.VARCHAR)\nprop_type_MICROSCOPY_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setLabel('Acquisition station name')\nprop_type_MICROSCOPY_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setManagedInternally(False)\nprop_type_MICROSCOPY_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setInternalNamespace(False)\n\n# MICROSCOPY_EXPERIMENT_DESCRIPTION\nprop_type_MICROSCOPY_EXPERIMENT_DESCRIPTION = tr.getOrCreateNewPropertyType('MICROSCOPY_EXPERIMENT_DESCRIPTION',\n                                                                            DataType.MULTILINE_VARCHAR)\nprop_type_MICROSCOPY_EXPERIMENT_DESCRIPTION.setLabel('Description')\nprop_type_MICROSCOPY_EXPERIMENT_DESCRIPTION.setManagedInternally(False)\nprop_type_MICROSCOPY_EXPERIMENT_DESCRIPTION.setInternalNamespace(False)\n\n# MICROSCOPY_EXPERIMENT_NAME\nprop_type_MICROSCOPY_EXPERIMENT_NAME = tr.getOrCreateNewPropertyType('MICROSCOPY_EXPERIMENT_NAME', DataType.VARCHAR)\nprop_type_MICROSCOPY_EXPERIMENT_NAME.setLabel('Experiment name')\nprop_type_MICROSCOPY_EXPERIMENT_NAME.setManagedInternally(False)\nprop_type_MICROSCOPY_EXPERIMENT_NAME.setInternalNamespace(False)\n\n# MICROSCOPY_EXPERIMENT_VERSION\nprop_type_MICROSCOPY_EXPERIMENT_VERSION = tr.getOrCreateNewPropertyType('MICROSCOPY_EXPERIMENT_VERSION',\n                                                                        DataType.INTEGER)\nprop_type_MICROSCOPY_EXPERIMENT_VERSION.setLabel('Version')\nprop_type_MICROSCOPY_EXPERIMENT_VERSION.setManagedInternally(False)\nprop_type_MICROSCOPY_EXPERIMENT_VERSION.setInternalNamespace(False)\n\n# MICROSCOPY_IMG_CONTAINER_METADATA\nprop_type_MICROSCOPY_IMG_CONTAINER_METADATA = tr.getOrCreateNewPropertyType('MICROSCOPY_IMG_CONTAINER_METADATA',\n                                                                            DataType.XML)\nprop_type_MICROSCOPY_IMG_CONTAINER_METADATA.setLabel('Series metadata')\nprop_type_MICROSCOPY_IMG_CONTAINER_METADATA.setManagedInternally(False)\nprop_type_MICROSCOPY_IMG_CONTAINER_METADATA.setInternalNamespace(False)\n\n# MICROSCOPY_SAMPLE_DESCRIPTION\nprop_type_MICROSCOPY_SAMPLE_DESCRIPTION = tr.getOrCreateNewPropertyType('MICROSCOPY_SAMPLE_DESCRIPTION',\n                                                                        DataType.MULTILINE_VARCHAR)\nprop_type_MICROSCOPY_SAMPLE_DESCRIPTION.setLabel('Description')\nprop_type_MICROSCOPY_SAMPLE_DESCRIPTION.setManagedInternally(False)\nprop_type_MICROSCOPY_SAMPLE_DESCRIPTION.setInternalNamespace(False)\n\n# MICROSCOPY_SAMPLE_SIZE_IN_BYTES\nprop_type_MICROSCOPY_SAMPLE_SIZE_IN_BYTES = tr.getOrCreateNewPropertyType('MICROSCOPY_SAMPLE_SIZE_IN_BYTES',\n                                                                          DataType.INTEGER)\nprop_type_MICROSCOPY_SAMPLE_SIZE_IN_BYTES.setLabel('Size')\nprop_type_MICROSCOPY_SAMPLE_SIZE_IN_BYTES.setManagedInternally(False)\nprop_type_MICROSCOPY_SAMPLE_SIZE_IN_BYTES.setInternalNamespace(False)\n\n# ==============================================================================\n#\n# PROPERTY ASSIGNMENTS\n#\n# ==============================================================================\n\n# DATA_SET_ATTACHMENT_NAME\nassignment_DATA_SET_ATTACHMENT_NAME = tr.assignPropertyType(data_set_type_ATTACHMENT, prop_type_NAME)\nassignment_DATA_SET_ATTACHMENT_NAME.setMandatory(False)\nassignment_DATA_SET_ATTACHMENT_NAME.setSection(None)\nassignment_DATA_SET_ATTACHMENT_NAME.setPositionInForms(1)\nassignment_DATA_SET_ATTACHMENT_NAME.setShownEdit(False)\n\n# DATA_SET_ATTACHMENT_DESCRIPTION\nassignment_DATA_SET_ATTACHMENT_DESCRIPTION = tr.assignPropertyType(data_set_type_ATTACHMENT, prop_type_DESCRIPTION)\nassignment_DATA_SET_ATTACHMENT_DESCRIPTION.setMandatory(False)\nassignment_DATA_SET_ATTACHMENT_DESCRIPTION.setSection(None)\nassignment_DATA_SET_ATTACHMENT_DESCRIPTION.setPositionInForms(2)\nassignment_DATA_SET_ATTACHMENT_DESCRIPTION.setShownEdit(False)\n\n# DATA_SET_ATTACHMENT_NOTES\nassignment_DATA_SET_ATTACHMENT_NOTES = tr.assignPropertyType(data_set_type_ATTACHMENT, prop_type_NOTES)\nassignment_DATA_SET_ATTACHMENT_NOTES.setMandatory(False)\nassignment_DATA_SET_ATTACHMENT_NOTES.setSection(None)\nassignment_DATA_SET_ATTACHMENT_NOTES.setPositionInForms(3)\nassignment_DATA_SET_ATTACHMENT_NOTES.setShownEdit(False)\n\n# DATA_SET_ATTACHMENT_XMLCOMMENTS\nassignment_DATA_SET_ATTACHMENT_XMLCOMMENTS = tr.assignPropertyType(data_set_type_ATTACHMENT, prop_type_XMLCOMMENTS)\nassignment_DATA_SET_ATTACHMENT_XMLCOMMENTS.setMandatory(False)\nassignment_DATA_SET_ATTACHMENT_XMLCOMMENTS.setSection(None)\nassignment_DATA_SET_ATTACHMENT_XMLCOMMENTS.setPositionInForms(4)\nassignment_DATA_SET_ATTACHMENT_XMLCOMMENTS.setShownEdit(False)\n\n# EXPERIMENT_COLLECTION_NAME\nassignment_EXPERIMENT_COLLECTION_NAME = tr.assignPropertyType(exp_type_COLLECTION, prop_type_NAME)\nassignment_EXPERIMENT_COLLECTION_NAME.setMandatory(False)\nassignment_EXPERIMENT_COLLECTION_NAME.setSection(None)\nassignment_EXPERIMENT_COLLECTION_NAME.setPositionInForms(1)\nassignment_EXPERIMENT_COLLECTION_NAME.setShownEdit(False)\n\n# EXPERIMENT_COLLECTION_DEFAULT_OBJECT_TYPE\nassignment_EXPERIMENT_COLLECTION_DEFAULT_OBJECT_TYPE = tr.assignPropertyType(exp_type_COLLECTION,\n                                                                             prop_type_DEFAULT_OBJECT_TYPE)\nassignment_EXPERIMENT_COLLECTION_DEFAULT_OBJECT_TYPE.setMandatory(False)\nassignment_EXPERIMENT_COLLECTION_DEFAULT_OBJECT_TYPE.setSection(None)\nassignment_EXPERIMENT_COLLECTION_DEFAULT_OBJECT_TYPE.setPositionInForms(2)\nassignment_EXPERIMENT_COLLECTION_DEFAULT_OBJECT_TYPE.setShownEdit(False)\n\n# DATA_SET_MICROSCOPY_ACCESSORY_FILE_NAME\nassignment_DATA_SET_MICROSCOPY_ACCESSORY_FILE_NAME = tr.assignPropertyType(data_set_type_MICROSCOPY_ACCESSORY_FILE,\n    prop_type_NAME)\nassignment_DATA_SET_MICROSCOPY_ACCESSORY_FILE_NAME.setMandatory(False)\nassignment_DATA_SET_MICROSCOPY_ACCESSORY_FILE_NAME.setSection(None)\nassignment_DATA_SET_MICROSCOPY_ACCESSORY_FILE_NAME.setPositionInForms(1)\nassignment_DATA_SET_MICROSCOPY_ACCESSORY_FILE_NAME.setShownEdit(False)\n\n# SAMPLE_MICROSCOPY_EXPERIMENT_NAME\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_MICROSCOPY_EXPERIMENT, prop_type_NAME)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_NAME.setSection('General Info')\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_NAME.setPositionInForms(1)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_NAME.setShownEdit(True)\n\n# SAMPLE_MICROSCOPY_EXPERIMENT_ANNOTATIONS_STATE\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_MICROSCOPY_EXPERIMENT,\n                                                                                  prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_ANNOTATIONS_STATE.setSection('General Info')\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_ANNOTATIONS_STATE.setShownEdit(False)\n\n# SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_NAME\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_NAME = tr.assignPropertyType(\n    samp_type_MICROSCOPY_EXPERIMENT, prop_type_MICROSCOPY_EXPERIMENT_NAME)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_NAME.setSection(None)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_NAME.setPositionInForms(3)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_NAME.setShownEdit(True)\n\n# SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_DESCRIPTION\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_DESCRIPTION = tr.assignPropertyType(\n    samp_type_MICROSCOPY_EXPERIMENT, prop_type_MICROSCOPY_EXPERIMENT_DESCRIPTION)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_DESCRIPTION.setMandatory(False)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_DESCRIPTION.setSection(None)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_DESCRIPTION.setPositionInForms(4)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_DESCRIPTION.setShownEdit(True)\n\n# SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_VERSION\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_VERSION = tr.assignPropertyType(\n    samp_type_MICROSCOPY_EXPERIMENT, prop_type_MICROSCOPY_EXPERIMENT_VERSION)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_VERSION.setMandatory(False)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_VERSION.setSection(None)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_VERSION.setPositionInForms(5)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_VERSION.setShownEdit(False)\n\n# SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.assignPropertyType(\n    samp_type_MICROSCOPY_EXPERIMENT, prop_type_MICROSCOPY_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setMandatory(False)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setSection(None)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setPositionInForms(6)\nassignment_SAMPLE_MICROSCOPY_EXPERIMENT_MICROSCOPY_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setShownEdit(True)\n\n# DATA_SET_MICROSCOPY_IMG_CONTAINER_MICROSCOPY_IMG_CONTAINER_METADATA\nassignment_DATA_SET_MICROSCOPY_IMG_CONTAINER_MICROSCOPY_IMG_CONTAINER_METADATA = tr.assignPropertyType(\n    data_set_type_MICROSCOPY_IMG_CONTAINER, prop_type_MICROSCOPY_IMG_CONTAINER_METADATA)\nassignment_DATA_SET_MICROSCOPY_IMG_CONTAINER_MICROSCOPY_IMG_CONTAINER_METADATA.setMandatory(False)\nassignment_DATA_SET_MICROSCOPY_IMG_CONTAINER_MICROSCOPY_IMG_CONTAINER_METADATA.setSection(None)\nassignment_DATA_SET_MICROSCOPY_IMG_CONTAINER_MICROSCOPY_IMG_CONTAINER_METADATA.setPositionInForms(1)\nassignment_DATA_SET_MICROSCOPY_IMG_CONTAINER_MICROSCOPY_IMG_CONTAINER_METADATA.setScriptName(\n    'MICROSCOPY_SERIES_METADATA_EDITOR')\nassignment_DATA_SET_MICROSCOPY_IMG_CONTAINER_MICROSCOPY_IMG_CONTAINER_METADATA.setDynamic(False)\nassignment_DATA_SET_MICROSCOPY_IMG_CONTAINER_MICROSCOPY_IMG_CONTAINER_METADATA.setManaged(True)\nassignment_DATA_SET_MICROSCOPY_IMG_CONTAINER_MICROSCOPY_IMG_CONTAINER_METADATA.setShownEdit(False)\n\n# DATA_SET_MICROSCOPY_IMG_CONTAINER_NAME\nassignment_DATA_SET_MICROSCOPY_IMG_CONTAINER_NAME = tr.assignPropertyType(data_set_type_MICROSCOPY_IMG_CONTAINER,\n                                                                          prop_type_NAME)\nassignment_DATA_SET_MICROSCOPY_IMG_CONTAINER_NAME.setMandatory(False)\nassignment_DATA_SET_MICROSCOPY_IMG_CONTAINER_NAME.setSection(None)\nassignment_DATA_SET_MICROSCOPY_IMG_CONTAINER_NAME.setPositionInForms(3)\nassignment_DATA_SET_MICROSCOPY_IMG_CONTAINER_NAME.setShownEdit(False)\n\n# DATA_SET_MICROSCOPY_IMG_OVERVIEW_RESOLUTION\nassignment_DATA_SET_MICROSCOPY_IMG_OVERVIEW_RESOLUTION = tr.assignPropertyType(data_set_type_MICROSCOPY_IMG_OVERVIEW,\n                                                                               prop_type_RESOLUTION)\nassignment_DATA_SET_MICROSCOPY_IMG_OVERVIEW_RESOLUTION.setMandatory(False)\nassignment_DATA_SET_MICROSCOPY_IMG_OVERVIEW_RESOLUTION.setSection(None)\nassignment_DATA_SET_MICROSCOPY_IMG_OVERVIEW_RESOLUTION.setPositionInForms(2)\nassignment_DATA_SET_MICROSCOPY_IMG_OVERVIEW_RESOLUTION.setShownEdit(False)\n\n# SAMPLE_MICROSCOPY_SAMPLE_TYPE_NAME\nassignment_SAMPLE_MICROSCOPY_SAMPLE_TYPE_NAME = tr.assignPropertyType(samp_type_MICROSCOPY_SAMPLE_TYPE, prop_type_NAME)\nassignment_SAMPLE_MICROSCOPY_SAMPLE_TYPE_NAME.setMandatory(False)\nassignment_SAMPLE_MICROSCOPY_SAMPLE_TYPE_NAME.setSection(None)\nassignment_SAMPLE_MICROSCOPY_SAMPLE_TYPE_NAME.setPositionInForms(1)\nassignment_SAMPLE_MICROSCOPY_SAMPLE_TYPE_NAME.setShownEdit(False)\n\n# SAMPLE_MICROSCOPY_SAMPLE_TYPE_MICROSCOPY_SAMPLE_DESCRIPTION\nassignment_SAMPLE_MICROSCOPY_SAMPLE_TYPE_MICROSCOPY_SAMPLE_DESCRIPTION = tr.assignPropertyType(\n    samp_type_MICROSCOPY_SAMPLE_TYPE, prop_type_MICROSCOPY_SAMPLE_DESCRIPTION)\nassignment_SAMPLE_MICROSCOPY_SAMPLE_TYPE_MICROSCOPY_SAMPLE_DESCRIPTION.setMandatory(False)\nassignment_SAMPLE_MICROSCOPY_SAMPLE_TYPE_MICROSCOPY_SAMPLE_DESCRIPTION.setSection(None)\nassignment_SAMPLE_MICROSCOPY_SAMPLE_TYPE_MICROSCOPY_SAMPLE_DESCRIPTION.setPositionInForms(2)\nassignment_SAMPLE_MICROSCOPY_SAMPLE_TYPE_MICROSCOPY_SAMPLE_DESCRIPTION.setShownEdit(True)\n\n# SAMPLE_MICROSCOPY_SAMPLE_TYPE_MICROSCOPY_SAMPLE_SIZE_IN_BYTES\nassignment_SAMPLE_MICROSCOPY_SAMPLE_TYPE_MICROSCOPY_SAMPLE_SIZE_IN_BYTES = tr.assignPropertyType(\n    samp_type_MICROSCOPY_SAMPLE_TYPE, prop_type_MICROSCOPY_SAMPLE_SIZE_IN_BYTES)\nassignment_SAMPLE_MICROSCOPY_SAMPLE_TYPE_MICROSCOPY_SAMPLE_SIZE_IN_BYTES.setMandatory(False)\nassignment_SAMPLE_MICROSCOPY_SAMPLE_TYPE_MICROSCOPY_SAMPLE_SIZE_IN_BYTES.setSection(None)\nassignment_SAMPLE_MICROSCOPY_SAMPLE_TYPE_MICROSCOPY_SAMPLE_SIZE_IN_BYTES.setPositionInForms(3)\nassignment_SAMPLE_MICROSCOPY_SAMPLE_TYPE_MICROSCOPY_SAMPLE_SIZE_IN_BYTES.setShownEdit(False)\n\n# SAMPLE_ORGANIZATION_UNIT_NAME\nassignment_SAMPLE_ORGANIZATION_UNIT_NAME = tr.assignPropertyType(samp_type_ORGANIZATION_UNIT, prop_type_NAME)\nassignment_SAMPLE_ORGANIZATION_UNIT_NAME.setMandatory(False)\nassignment_SAMPLE_ORGANIZATION_UNIT_NAME.setSection(None)\nassignment_SAMPLE_ORGANIZATION_UNIT_NAME.setPositionInForms(1)\nassignment_SAMPLE_ORGANIZATION_UNIT_NAME.setShownEdit(False)\n\n# SAMPLE_ORGANIZATION_UNIT_DESCRIPTION\nassignment_SAMPLE_ORGANIZATION_UNIT_DESCRIPTION = tr.assignPropertyType(samp_type_ORGANIZATION_UNIT,\n                                                                        prop_type_DESCRIPTION)\nassignment_SAMPLE_ORGANIZATION_UNIT_DESCRIPTION.setMandatory(False)\nassignment_SAMPLE_ORGANIZATION_UNIT_DESCRIPTION.setSection(None)\nassignment_SAMPLE_ORGANIZATION_UNIT_DESCRIPTION.setPositionInForms(2)\nassignment_SAMPLE_ORGANIZATION_UNIT_DESCRIPTION.setShownEdit(False)\n\n# SAMPLE_ORGANIZATION_UNIT_XMLCOMMENTS\nassignment_SAMPLE_ORGANIZATION_UNIT_XMLCOMMENTS = tr.assignPropertyType(samp_type_ORGANIZATION_UNIT,\n                                                                        prop_type_XMLCOMMENTS)\nassignment_SAMPLE_ORGANIZATION_UNIT_XMLCOMMENTS.setMandatory(False)\nassignment_SAMPLE_ORGANIZATION_UNIT_XMLCOMMENTS.setSection(None)\nassignment_SAMPLE_ORGANIZATION_UNIT_XMLCOMMENTS.setPositionInForms(3)\nassignment_SAMPLE_ORGANIZATION_UNIT_XMLCOMMENTS.setShownEdit(False)\n\n# SAMPLE_ORGANIZATION_UNIT_ANNOTATIONS_STATE\nassignment_SAMPLE_ORGANIZATION_UNIT_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_ORGANIZATION_UNIT,\n                                                                              prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_ORGANIZATION_UNIT_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_ORGANIZATION_UNIT_ANNOTATIONS_STATE.setSection(None)\nassignment_SAMPLE_ORGANIZATION_UNIT_ANNOTATIONS_STATE.setPositionInForms(4)\nassignment_SAMPLE_ORGANIZATION_UNIT_ANNOTATIONS_STATE.setShownEdit(False)\n\n# ==============================================================================\n#\n# SCRIPTS\n#\n# ==============================================================================\n\n# MICROSCOPY_SERIES_METADATA_EDITOR\nscript_MICROSCOPY_SERIES_METADATA_EDITOR = tr.getOrCreateNewScript('MICROSCOPY_SERIES_METADATA_EDITOR')\nscript_MICROSCOPY_SERIES_METADATA_EDITOR.setName('MICROSCOPY_SERIES_METADATA_EDITOR')\nscript_MICROSCOPY_SERIES_METADATA_EDITOR.setDescription(\n    'Plug-in for viewing and editing microscopy series metadata information.')\nscript_MICROSCOPY_SERIES_METADATA_EDITOR.setScript('''import xml.etree.ElementTree as ET\n\ndef configureUI():\n\n    # Create a table builder\n    tableBuilder = createTableBuilder()\n\n    try:\n\n        # Get the property value and create an XML tree\n        root = ET.fromstring(property.getValue().encode('UTF-8'))\n\n        # Extract and sort the metadata attributes\n        keys = root.attrib.keys()\n        keys.sort()\n\n        # Create the header\n        for key in keys: \n            tableBuilder.addHeader(key)\n\n        # Fill in the values\n        row = tableBuilder.addRow()\n        for key in keys:\n            row.setCell(key, root.attrib[key])\n\n    except Exception:\n\n        # Report an error\n        tableBuilder.addHeader("Error")\n        row = tableBuilder.addRow()\n        row.setCell("Error", "Could not retrieve metadata information.")\n\n    # Return the table\n    property.setOwnTab(True)\n    uiDesc = property.getUiDescription()\n    uiDesc.useTableOutput(tableBuilder.getTableModel())\n''')\nscript_MICROSCOPY_SERIES_METADATA_EDITOR.setEntityForScript('DATA_SET')\nscript_MICROSCOPY_SERIES_METADATA_EDITOR.setScriptType('MANAGED_PROPERTY')\n\nprint("Import of Microscopy Core Technology Master Data finished.")\n
4	flow	4	2020-09-30 09:01:15.647131+02	# -*- coding: utf-8 -*-\nimport ch.systemsx.cisd.openbis.generic.server.jython.api.v1.DataType as DataType\n\nprint("Importing Flow Core Technology Master Data...")\n\ntr = service.transaction()\n\n# ==============================================================================\n#\n# FILE FORMATS\n#\n# ==============================================================================\n\n# CSV\nfile_type_CSV = tr.getOrCreateNewFileFormatType('CSV')\nfile_type_CSV.setDescription('files with values separated by comma or semicolon')\n\n# FCS\nfile_type_FCS = tr.getOrCreateNewFileFormatType('FCS')\nfile_type_FCS.setDescription('Flow Cytometry Standard file.')\n\n# UNKOWN\nfile_type_UNKNOWN = tr.getOrCreateNewFileFormatType('UNKNOWN')\nfile_type_UNKNOWN.setDescription('Unknown file format')\n\n# ==============================================================================\n#\n# VOCABULARIES\n#\n# ==============================================================================\n\n# BD LSR FORTESSA\n# ------------------------------------------------------------------------------\n\n# LSR_FORTESSA_PLATE_GEOMETRY\nvocabulary_LSR_FORTESSA_PLATE_GEOMETRY = tr.getOrCreateNewVocabulary('LSR_FORTESSA_PLATE_GEOMETRY')\nvocabulary_LSR_FORTESSA_PLATE_GEOMETRY.setDescription('Plate geometries for the BD LSR Fortessa Flow Cytometer.')\nvocabulary_LSR_FORTESSA_PLATE_GEOMETRY.setUrlTemplate(None)\nvocabulary_LSR_FORTESSA_PLATE_GEOMETRY.setManagedInternally(False)\nvocabulary_LSR_FORTESSA_PLATE_GEOMETRY.setInternalNamespace(False)\nvocabulary_LSR_FORTESSA_PLATE_GEOMETRY.setChosenFromList(True)\n\n# LSR_FORTESSA_PLATE_GEOMETRY_96_WELLS_8X12\nvocabulary_term_LSR_FORTESSA_PLATE_GEOMETRY_96_WELLS_8X12 = tr.createNewVocabularyTerm('96_WELLS_8X12')\nvocabulary_term_LSR_FORTESSA_PLATE_GEOMETRY_96_WELLS_8X12.setDescription(None)\nvocabulary_term_LSR_FORTESSA_PLATE_GEOMETRY_96_WELLS_8X12.setLabel(None)\nvocabulary_term_LSR_FORTESSA_PLATE_GEOMETRY_96_WELLS_8X12.setOrdinal(1)\nvocabulary_LSR_FORTESSA_PLATE_GEOMETRY.addTerm(vocabulary_term_LSR_FORTESSA_PLATE_GEOMETRY_96_WELLS_8X12)\n\n# LSR_FORTESSA_PLATE_GEOMETRY_384_WELLS_16X24\nvocabulary_term_LSR_FORTESSA_PLATE_GEOMETRY_384_WELLS_16X24 = tr.createNewVocabularyTerm('384_WELLS_16X24')\nvocabulary_term_LSR_FORTESSA_PLATE_GEOMETRY_384_WELLS_16X24.setDescription(None)\nvocabulary_term_LSR_FORTESSA_PLATE_GEOMETRY_384_WELLS_16X24.setLabel(None)\nvocabulary_term_LSR_FORTESSA_PLATE_GEOMETRY_384_WELLS_16X24.setOrdinal(2)\nvocabulary_LSR_FORTESSA_PLATE_GEOMETRY.addTerm(vocabulary_term_LSR_FORTESSA_PLATE_GEOMETRY_384_WELLS_16X24)\n\n# BC CYTOFLEX S\n# ------------------------------------------------------------------------------\n\n# CYTOFLEX_S_PLATE_GEOMETRY\nvocabulary_CYTOFLEX_S_PLATE_GEOMETRY = tr.getOrCreateNewVocabulary('CYTOFLEX_S_PLATE_GEOMETRY')\nvocabulary_CYTOFLEX_S_PLATE_GEOMETRY.setDescription('Plate geometries for the BC CytoFLEX S Flow Cytometer.')\nvocabulary_CYTOFLEX_S_PLATE_GEOMETRY.setUrlTemplate(None)\nvocabulary_CYTOFLEX_S_PLATE_GEOMETRY.setManagedInternally(False)\nvocabulary_CYTOFLEX_S_PLATE_GEOMETRY.setInternalNamespace(False)\nvocabulary_CYTOFLEX_S_PLATE_GEOMETRY.setChosenFromList(True)\n\n# CYTOFLEX_S_PLATE_GEOMETRY_96_WELLS_8X12\nvocabulary_term_CYTOFLEX_S_PLATE_GEOMETRY_96_WELLS_8X12 = tr.createNewVocabularyTerm('96_WELLS_8X12')\nvocabulary_term_CYTOFLEX_S_PLATE_GEOMETRY_96_WELLS_8X12.setDescription(None)\nvocabulary_term_CYTOFLEX_S_PLATE_GEOMETRY_96_WELLS_8X12.setLabel(None)\nvocabulary_term_CYTOFLEX_S_PLATE_GEOMETRY_96_WELLS_8X12.setOrdinal(1)\nvocabulary_CYTOFLEX_S_PLATE_GEOMETRY.addTerm(vocabulary_term_CYTOFLEX_S_PLATE_GEOMETRY_96_WELLS_8X12)\n\n# ==============================================================================\n#\n# EXPERIMENT/COLLECTION TYPES\n#\n# ==============================================================================\n\n# COLLECTION\nexp_type_COLLECTION = tr.getOrCreateNewExperimentType('COLLECTION')\nexp_type_COLLECTION.setDescription('Used as a folder for things.')\n\n# ==============================================================================\n#\n# SAMPLE TYPES\n#\n# ==============================================================================\n\n# COMMON\n# ------------------------------------------------------------------------------\n\n# ORGANIZATION_UNIT\nsamp_type_ORGANIZATION_UNIT = tr.getOrCreateNewSampleType('ORGANIZATION_UNIT')\nsamp_type_ORGANIZATION_UNIT.setDescription('Used to create different organisations for samples since they can\\'t belong to more than one experiment.')\nsamp_type_ORGANIZATION_UNIT.setListable(True)\nsamp_type_ORGANIZATION_UNIT.setShowContainer(False)\nsamp_type_ORGANIZATION_UNIT.setShowParents(True)\nsamp_type_ORGANIZATION_UNIT.setSubcodeUnique(False)\nsamp_type_ORGANIZATION_UNIT.setAutoGeneratedCode(True)\nsamp_type_ORGANIZATION_UNIT.setShowParentMetadata(False)\nsamp_type_ORGANIZATION_UNIT.setGeneratedCodePrefix('OU.')\n\n# BD FACS ARIA\n# ------------------------------------------------------------------------------\n\n# FACS_ARIA_EXPERIMENT\nsamp_type_FACS_ARIA_EXPERIMENT = tr.getOrCreateNewSampleType('FACS_ARIA_EXPERIMENT')\nsamp_type_FACS_ARIA_EXPERIMENT.setDescription('Experiments from the BD FACS Aria III Cell Sorter.')\nsamp_type_FACS_ARIA_EXPERIMENT.setListable(True)\nsamp_type_FACS_ARIA_EXPERIMENT.setShowContainer(False)\nsamp_type_FACS_ARIA_EXPERIMENT.setShowParents(True)\nsamp_type_FACS_ARIA_EXPERIMENT.setSubcodeUnique(False)\nsamp_type_FACS_ARIA_EXPERIMENT.setAutoGeneratedCode(False)\nsamp_type_FACS_ARIA_EXPERIMENT.setShowParentMetadata(False)\nsamp_type_FACS_ARIA_EXPERIMENT.setGeneratedCodePrefix('FACS_ARIA_EXPERIMENT.')\n\n# FACS_ARIA_SPECIMEN\nsamp_type_FACS_ARIA_SPECIMEN = tr.getOrCreateNewSampleType('FACS_ARIA_SPECIMEN')\nsamp_type_FACS_ARIA_SPECIMEN.setDescription('A specimen for the BD FACS Aria III Cell Sorter.')\nsamp_type_FACS_ARIA_SPECIMEN.setListable(True)\nsamp_type_FACS_ARIA_SPECIMEN.setShowContainer(False)\nsamp_type_FACS_ARIA_SPECIMEN.setShowParents(True)\nsamp_type_FACS_ARIA_SPECIMEN.setSubcodeUnique(False)\nsamp_type_FACS_ARIA_SPECIMEN.setAutoGeneratedCode(True)\nsamp_type_FACS_ARIA_SPECIMEN.setShowParentMetadata(False)\nsamp_type_FACS_ARIA_SPECIMEN.setGeneratedCodePrefix('FACS_ARIA_SPECIMEN.')\n\n# FACS_ARIA_TUBE\nsamp_type_FACS_ARIA_TUBE = tr.getOrCreateNewSampleType('FACS_ARIA_TUBE')\nsamp_type_FACS_ARIA_TUBE.setDescription('A tube for the BD FACS Aria III Cell Sorter.')\nsamp_type_FACS_ARIA_TUBE.setListable(True)\nsamp_type_FACS_ARIA_TUBE.setShowContainer(False)\nsamp_type_FACS_ARIA_TUBE.setShowParents(True)\nsamp_type_FACS_ARIA_TUBE.setSubcodeUnique(False)\nsamp_type_FACS_ARIA_TUBE.setAutoGeneratedCode(True)\nsamp_type_FACS_ARIA_TUBE.setShowParentMetadata(False)\nsamp_type_FACS_ARIA_TUBE.setGeneratedCodePrefix('FACS_ARIA_TUBE.')\n\n# FACS_ARIA_TUBESET\nsamp_type_FACS_ARIA_TUBESET = tr.getOrCreateNewSampleType('FACS_ARIA_TUBESET')\nsamp_type_FACS_ARIA_TUBESET.setDescription('A virtual container for tubes for the BD FACS Aria III Cell Sorter.')\nsamp_type_FACS_ARIA_TUBESET.setListable(False)\nsamp_type_FACS_ARIA_TUBESET.setShowContainer(False)\nsamp_type_FACS_ARIA_TUBESET.setShowParents(True)\nsamp_type_FACS_ARIA_TUBESET.setSubcodeUnique(False)\nsamp_type_FACS_ARIA_TUBESET.setAutoGeneratedCode(True)\nsamp_type_FACS_ARIA_TUBESET.setShowParentMetadata(False)\nsamp_type_FACS_ARIA_TUBESET.setGeneratedCodePrefix('FACS_ARIA_TUBESET.')\n\n# BD INFLUX\n# ------------------------------------------------------------------------------\n\n# INFLUX_EXPERIMENT\nsamp_type_INFLUX_EXPERIMENT = tr.getOrCreateNewSampleType('INFLUX_EXPERIMENT')\nsamp_type_INFLUX_EXPERIMENT.setDescription('Experiments from the BD Influx Cell Sorter.')\nsamp_type_INFLUX_EXPERIMENT.setListable(True)\nsamp_type_INFLUX_EXPERIMENT.setShowContainer(False)\nsamp_type_INFLUX_EXPERIMENT.setShowParents(True)\nsamp_type_INFLUX_EXPERIMENT.setSubcodeUnique(False)\nsamp_type_INFLUX_EXPERIMENT.setAutoGeneratedCode(False)\nsamp_type_INFLUX_EXPERIMENT.setShowParentMetadata(False)\nsamp_type_INFLUX_EXPERIMENT.setGeneratedCodePrefix('INFLUX_EXPERIMENT.')\n\n# INFLUX_SPECIMEN\nsamp_type_INFLUX_SPECIMEN = tr.getOrCreateNewSampleType('INFLUX_SPECIMEN')\nsamp_type_INFLUX_SPECIMEN.setDescription('A specimen for the BD Influx Cell Sorter.')\nsamp_type_INFLUX_SPECIMEN.setListable(True)\nsamp_type_INFLUX_SPECIMEN.setShowContainer(False)\nsamp_type_INFLUX_SPECIMEN.setShowParents(True)\nsamp_type_INFLUX_SPECIMEN.setSubcodeUnique(False)\nsamp_type_INFLUX_SPECIMEN.setAutoGeneratedCode(True)\nsamp_type_INFLUX_SPECIMEN.setShowParentMetadata(False)\nsamp_type_INFLUX_SPECIMEN.setGeneratedCodePrefix('INFLUX_SPECIMEN.')\n\n# INFLUX_TUBE\nsamp_type_INFLUX_TUBE = tr.getOrCreateNewSampleType('INFLUX_TUBE')\nsamp_type_INFLUX_TUBE.setDescription('A tube for the BD Influx Cell Sorter.')\nsamp_type_INFLUX_TUBE.setListable(True)\nsamp_type_INFLUX_TUBE.setShowContainer(False)\nsamp_type_INFLUX_TUBE.setShowParents(True)\nsamp_type_INFLUX_TUBE.setSubcodeUnique(False)\nsamp_type_INFLUX_TUBE.setAutoGeneratedCode(True)\nsamp_type_INFLUX_TUBE.setShowParentMetadata(False)\nsamp_type_INFLUX_TUBE.setGeneratedCodePrefix('INFLUX_TUBE.')\n\n# INFLUX_TUBESET\nsamp_type_INFLUX_TUBESET = tr.getOrCreateNewSampleType('INFLUX_TUBESET')\nsamp_type_INFLUX_TUBESET.setDescription('A virtual container for tubes for the BD Influx Cell Sorter.')\nsamp_type_INFLUX_TUBESET.setListable(True)\nsamp_type_INFLUX_TUBESET.setShowContainer(False)\nsamp_type_INFLUX_TUBESET.setShowParents(True)\nsamp_type_INFLUX_TUBESET.setSubcodeUnique(False)\nsamp_type_INFLUX_TUBESET.setAutoGeneratedCode(True)\nsamp_type_INFLUX_TUBESET.setShowParentMetadata(False)\nsamp_type_INFLUX_TUBESET.setGeneratedCodePrefix('INFLUX_TUBESET.')\n\n# BD LSR FORTESSA\n# ------------------------------------------------------------------------------\n\n# LSR_FORTESSA_EXPERIMENT\nsamp_type_LSR_FORTESSA_EXPERIMENT = tr.getOrCreateNewSampleType('LSR_FORTESSA_EXPERIMENT')\nsamp_type_LSR_FORTESSA_EXPERIMENT.setDescription('Experiments from the BD LSR Fortessa Flow Cytometer.')\nsamp_type_LSR_FORTESSA_EXPERIMENT.setListable(True)\nsamp_type_LSR_FORTESSA_EXPERIMENT.setShowContainer(False)\nsamp_type_LSR_FORTESSA_EXPERIMENT.setShowParents(True)\nsamp_type_LSR_FORTESSA_EXPERIMENT.setSubcodeUnique(False)\nsamp_type_LSR_FORTESSA_EXPERIMENT.setAutoGeneratedCode(False)\nsamp_type_LSR_FORTESSA_EXPERIMENT.setShowParentMetadata(False)\nsamp_type_LSR_FORTESSA_EXPERIMENT.setGeneratedCodePrefix('LSR_FORTESSA_EXPERIMENT.')\n\n# LSR_FORTESSA_PLATE\nsamp_type_LSR_FORTESSA_PLATE = tr.getOrCreateNewSampleType('LSR_FORTESSA_PLATE')\nsamp_type_LSR_FORTESSA_PLATE.setDescription('A plate for the BD LSR Fortessa Flow Cytometer.')\nsamp_type_LSR_FORTESSA_PLATE.setListable(True)\nsamp_type_LSR_FORTESSA_PLATE.setShowContainer(False)\nsamp_type_LSR_FORTESSA_PLATE.setShowParents(True)\nsamp_type_LSR_FORTESSA_PLATE.setSubcodeUnique(False)\nsamp_type_LSR_FORTESSA_PLATE.setAutoGeneratedCode(True)\nsamp_type_LSR_FORTESSA_PLATE.setShowParentMetadata(False)\nsamp_type_LSR_FORTESSA_PLATE.setGeneratedCodePrefix('LSR_FORTESSA_PLATE.')\n\n# LSR_FORTESSA_SPECIMEN\nsamp_type_LSR_FORTESSA_SPECIMEN = tr.getOrCreateNewSampleType('LSR_FORTESSA_SPECIMEN')\nsamp_type_LSR_FORTESSA_SPECIMEN.setDescription('A specimen for the BD LSR Fortessa Flow Cytometer.')\nsamp_type_LSR_FORTESSA_SPECIMEN.setListable(True)\nsamp_type_LSR_FORTESSA_SPECIMEN.setShowContainer(False)\nsamp_type_LSR_FORTESSA_SPECIMEN.setShowParents(True)\nsamp_type_LSR_FORTESSA_SPECIMEN.setSubcodeUnique(False)\nsamp_type_LSR_FORTESSA_SPECIMEN.setAutoGeneratedCode(True)\nsamp_type_LSR_FORTESSA_SPECIMEN.setShowParentMetadata(False)\nsamp_type_LSR_FORTESSA_SPECIMEN.setGeneratedCodePrefix('LSR_FORTESSA_SPECIMEN.')\n\n# LSR_FORTESSA_TUBE\nsamp_type_LSR_FORTESSA_TUBE = tr.getOrCreateNewSampleType('LSR_FORTESSA_TUBE')\nsamp_type_LSR_FORTESSA_TUBE.setDescription('A tube for the BD LSR Fortessa Flow Cytometer.')\nsamp_type_LSR_FORTESSA_TUBE.setListable(True)\nsamp_type_LSR_FORTESSA_TUBE.setShowContainer(False)\nsamp_type_LSR_FORTESSA_TUBE.setShowParents(True)\nsamp_type_LSR_FORTESSA_TUBE.setSubcodeUnique(False)\nsamp_type_LSR_FORTESSA_TUBE.setAutoGeneratedCode(True)\nsamp_type_LSR_FORTESSA_TUBE.setShowParentMetadata(False)\nsamp_type_LSR_FORTESSA_TUBE.setGeneratedCodePrefix('LSR_FORTESSA_TUBE.')\n\n# LSR_FORTESSA_TUBESET\nsamp_type_LSR_FORTESSA_TUBESET = tr.getOrCreateNewSampleType('LSR_FORTESSA_TUBESET')\nsamp_type_LSR_FORTESSA_TUBESET.setDescription('A virtual container for tubes for the BD LSR Fortessa Flow Cytometer.')\nsamp_type_LSR_FORTESSA_TUBESET.setListable(False)\nsamp_type_LSR_FORTESSA_TUBESET.setShowContainer(False)\nsamp_type_LSR_FORTESSA_TUBESET.setShowParents(True)\nsamp_type_LSR_FORTESSA_TUBESET.setSubcodeUnique(False)\nsamp_type_LSR_FORTESSA_TUBESET.setAutoGeneratedCode(True)\nsamp_type_LSR_FORTESSA_TUBESET.setShowParentMetadata(False)\nsamp_type_LSR_FORTESSA_TUBESET.setGeneratedCodePrefix('LSR_FORTESSA_TUBESET.')\n\n# LSR_FORTESSA_WELL\nsamp_type_LSR_FORTESSA_WELL = tr.getOrCreateNewSampleType('LSR_FORTESSA_WELL')\nsamp_type_LSR_FORTESSA_WELL.setDescription('A well for the BD LSR Fortessa Flow Cytometer.')\nsamp_type_LSR_FORTESSA_WELL.setListable(True)\nsamp_type_LSR_FORTESSA_WELL.setShowContainer(True)\nsamp_type_LSR_FORTESSA_WELL.setShowParents(True)\nsamp_type_LSR_FORTESSA_WELL.setSubcodeUnique(False)\nsamp_type_LSR_FORTESSA_WELL.setAutoGeneratedCode(True)\nsamp_type_LSR_FORTESSA_WELL.setShowParentMetadata(False)\nsamp_type_LSR_FORTESSA_WELL.setGeneratedCodePrefix('LSR_FORTESSA_WELL.')\n\n# BC CYTOFLEX S\n# ------------------------------------------------------------------------------\n\n# CYTOFLEX_S_EXPERIMENT\nsamp_type_CYTOFLEX_S_EXPERIMENT = tr.getOrCreateNewSampleType('CYTOFLEX_S_EXPERIMENT')\nsamp_type_CYTOFLEX_S_EXPERIMENT.setDescription('Experiments from the BC CytoFLEX S Flow Cytometer.')\nsamp_type_CYTOFLEX_S_EXPERIMENT.setListable(True)\nsamp_type_CYTOFLEX_S_EXPERIMENT.setShowContainer(False)\nsamp_type_CYTOFLEX_S_EXPERIMENT.setShowParents(True)\nsamp_type_CYTOFLEX_S_EXPERIMENT.setSubcodeUnique(False)\nsamp_type_CYTOFLEX_S_EXPERIMENT.setAutoGeneratedCode(False)\nsamp_type_CYTOFLEX_S_EXPERIMENT.setShowParentMetadata(False)\nsamp_type_CYTOFLEX_S_EXPERIMENT.setGeneratedCodePrefix('CYTOFLEX_S_EXPERIMENT.')\n\n# CYTOFLEX_S_PLATE\nsamp_type_CYTOFLEX_S_PLATE = tr.getOrCreateNewSampleType('CYTOFLEX_S_PLATE')\nsamp_type_CYTOFLEX_S_PLATE.setDescription('A plate for the BC CytoFLEX S Flow Cytometer.')\nsamp_type_CYTOFLEX_S_PLATE.setListable(True)\nsamp_type_CYTOFLEX_S_PLATE.setShowContainer(False)\nsamp_type_CYTOFLEX_S_PLATE.setShowParents(True)\nsamp_type_CYTOFLEX_S_PLATE.setSubcodeUnique(False)\nsamp_type_CYTOFLEX_S_PLATE.setAutoGeneratedCode(True)\nsamp_type_CYTOFLEX_S_PLATE.setShowParentMetadata(False)\nsamp_type_CYTOFLEX_S_PLATE.setGeneratedCodePrefix('CYTOFLEX_S_PLATE.')\n\n# CYTOFLEX_S_SPECIMEN\nsamp_type_CYTOFLEX_S_SPECIMEN = tr.getOrCreateNewSampleType('CYTOFLEX_S_SPECIMEN')\nsamp_type_CYTOFLEX_S_SPECIMEN.setDescription('A specimen for the BC CytoFLEX S Flow Cytometer.')\nsamp_type_CYTOFLEX_S_SPECIMEN.setListable(True)\nsamp_type_CYTOFLEX_S_SPECIMEN.setShowContainer(False)\nsamp_type_CYTOFLEX_S_SPECIMEN.setShowParents(True)\nsamp_type_CYTOFLEX_S_SPECIMEN.setSubcodeUnique(False)\nsamp_type_CYTOFLEX_S_SPECIMEN.setAutoGeneratedCode(True)\nsamp_type_CYTOFLEX_S_SPECIMEN.setShowParentMetadata(False)\nsamp_type_CYTOFLEX_S_SPECIMEN.setGeneratedCodePrefix('CYTOFLEX_S_SPECIMEN.')\n\n# CYTOFLEX_S_TUBE\nsamp_type_CYTOFLEX_S_TUBE = tr.getOrCreateNewSampleType('CYTOFLEX_S_TUBE')\nsamp_type_CYTOFLEX_S_TUBE.setDescription('A tube for the BC CytoFLEX S Flow Cytometer.')\nsamp_type_CYTOFLEX_S_TUBE.setListable(True)\nsamp_type_CYTOFLEX_S_TUBE.setShowContainer(False)\nsamp_type_CYTOFLEX_S_TUBE.setShowParents(True)\nsamp_type_CYTOFLEX_S_TUBE.setSubcodeUnique(False)\nsamp_type_CYTOFLEX_S_TUBE.setAutoGeneratedCode(True)\nsamp_type_CYTOFLEX_S_TUBE.setShowParentMetadata(False)\nsamp_type_CYTOFLEX_S_TUBE.setGeneratedCodePrefix('CYTOFLEX_S_TUBE.')\n\n# CYTOFLEX_S_TUBESET\nsamp_type_CYTOFLEX_S_TUBESET = tr.getOrCreateNewSampleType('CYTOFLEX_S_TUBESET')\nsamp_type_CYTOFLEX_S_TUBESET.setDescription('A virtual container for tubes for the BC CytoFLEX S Flow Cytometer.')\nsamp_type_CYTOFLEX_S_TUBESET.setListable(False)\nsamp_type_CYTOFLEX_S_TUBESET.setShowContainer(False)\nsamp_type_CYTOFLEX_S_TUBESET.setShowParents(True)\nsamp_type_CYTOFLEX_S_TUBESET.setSubcodeUnique(False)\nsamp_type_CYTOFLEX_S_TUBESET.setAutoGeneratedCode(True)\nsamp_type_CYTOFLEX_S_TUBESET.setShowParentMetadata(False)\nsamp_type_CYTOFLEX_S_TUBESET.setGeneratedCodePrefix('CYTOFLEX_S_TUBESET.')\n\n# CYTOFLEX_S_WELL\nsamp_type_CYTOFLEX_S_WELL = tr.getOrCreateNewSampleType('CYTOFLEX_S_WELL')\nsamp_type_CYTOFLEX_S_WELL.setDescription('A well for the BC CytoFLEX S Flow Cytometer.')\nsamp_type_CYTOFLEX_S_WELL.setListable(True)\nsamp_type_CYTOFLEX_S_WELL.setShowContainer(True)\nsamp_type_CYTOFLEX_S_WELL.setShowParents(True)\nsamp_type_CYTOFLEX_S_WELL.setSubcodeUnique(False)\nsamp_type_CYTOFLEX_S_WELL.setAutoGeneratedCode(True)\nsamp_type_CYTOFLEX_S_WELL.setShowParentMetadata(False)\nsamp_type_CYTOFLEX_S_WELL.setGeneratedCodePrefix('CYTOFLEX_S_WELL.')\n\n# BC MOFLO XDP\n# ------------------------------------------------------------------------------\n\n# MOFLO_XDP_EXPERIMENT\nsamp_type_MOFLO_XDP_EXPERIMENT = tr.getOrCreateNewSampleType('MOFLO_XDP_EXPERIMENT')\nsamp_type_MOFLO_XDP_EXPERIMENT.setDescription('Experiments from the BC MoFlo XDP Cell Sorter.')\nsamp_type_MOFLO_XDP_EXPERIMENT.setListable(True)\nsamp_type_MOFLO_XDP_EXPERIMENT.setShowContainer(False)\nsamp_type_MOFLO_XDP_EXPERIMENT.setShowParents(True)\nsamp_type_MOFLO_XDP_EXPERIMENT.setSubcodeUnique(False)\nsamp_type_MOFLO_XDP_EXPERIMENT.setAutoGeneratedCode(False)\nsamp_type_MOFLO_XDP_EXPERIMENT.setShowParentMetadata(False)\nsamp_type_MOFLO_XDP_EXPERIMENT.setGeneratedCodePrefix('MOFLO_XDP_EXPERIMENT.')\n\n# MOFLO_XDP_SPECIMEN\nsamp_type_MOFLO_XDP_SPECIMEN = tr.getOrCreateNewSampleType('MOFLO_XDP_SPECIMEN')\nsamp_type_MOFLO_XDP_SPECIMEN.setDescription('A specimen for the BC MoFlo XDP Cell Sorter.')\nsamp_type_MOFLO_XDP_SPECIMEN.setListable(True)\nsamp_type_MOFLO_XDP_SPECIMEN.setShowContainer(False)\nsamp_type_MOFLO_XDP_SPECIMEN.setShowParents(True)\nsamp_type_MOFLO_XDP_SPECIMEN.setSubcodeUnique(False)\nsamp_type_MOFLO_XDP_SPECIMEN.setAutoGeneratedCode(True)\nsamp_type_MOFLO_XDP_SPECIMEN.setShowParentMetadata(False)\nsamp_type_MOFLO_XDP_SPECIMEN.setGeneratedCodePrefix('MOFLO_XDP_SPECIMEN.')\n\n# MOFLO_XDP_TUBE\nsamp_type_MOFLO_XDP_TUBE = tr.getOrCreateNewSampleType('MOFLO_XDP_TUBE')\nsamp_type_MOFLO_XDP_TUBE.setDescription('A tube for the BC MoFlo XDP Cell Sorter.')\nsamp_type_MOFLO_XDP_TUBE.setListable(True)\nsamp_type_MOFLO_XDP_TUBE.setShowContainer(False)\nsamp_type_MOFLO_XDP_TUBE.setShowParents(True)\nsamp_type_MOFLO_XDP_TUBE.setSubcodeUnique(False)\nsamp_type_MOFLO_XDP_TUBE.setAutoGeneratedCode(True)\nsamp_type_MOFLO_XDP_TUBE.setShowParentMetadata(False)\nsamp_type_MOFLO_XDP_TUBE.setGeneratedCodePrefix('MOFLO_XDP_TUBE.')\n\n# MOFLO_XDP_TUBESET\nsamp_type_MOFLO_XDP_TUBESET = tr.getOrCreateNewSampleType('MOFLO_XDP_TUBESET')\nsamp_type_MOFLO_XDP_TUBESET.setDescription('A virtual container for tubes for the BC MoFlo XDP Cell Sorter.')\nsamp_type_MOFLO_XDP_TUBESET.setListable(True)\nsamp_type_MOFLO_XDP_TUBESET.setShowContainer(False)\nsamp_type_MOFLO_XDP_TUBESET.setShowParents(True)\nsamp_type_MOFLO_XDP_TUBESET.setSubcodeUnique(False)\nsamp_type_MOFLO_XDP_TUBESET.setAutoGeneratedCode(True)\nsamp_type_MOFLO_XDP_TUBESET.setShowParentMetadata(False)\nsamp_type_MOFLO_XDP_TUBESET.setGeneratedCodePrefix('MOFLO_XDP_TUBESET.')\n\n# BIORAD S3E\n# ------------------------------------------------------------------------------\n\n# S3E_EXPERIMENT\nsamp_type_S3E_EXPERIMENT = tr.getOrCreateNewSampleType('S3E_EXPERIMENT')\nsamp_type_S3E_EXPERIMENT.setDescription('Experiments from the BIORAD S3e Cell Sorter.')\nsamp_type_S3E_EXPERIMENT.setListable(True)\nsamp_type_S3E_EXPERIMENT.setShowContainer(False)\nsamp_type_S3E_EXPERIMENT.setShowParents(True)\nsamp_type_S3E_EXPERIMENT.setSubcodeUnique(False)\nsamp_type_S3E_EXPERIMENT.setAutoGeneratedCode(False)\nsamp_type_S3E_EXPERIMENT.setShowParentMetadata(False)\nsamp_type_S3E_EXPERIMENT.setGeneratedCodePrefix('S3E_EXPERIMENT.')\n\n# S3E_SPECIMEN\nsamp_type_S3E_SPECIMEN = tr.getOrCreateNewSampleType('S3E_SPECIMEN')\nsamp_type_S3E_SPECIMEN.setDescription('A specimen for the BIORAD S3e Cell Sorter.')\nsamp_type_S3E_SPECIMEN.setListable(True)\nsamp_type_S3E_SPECIMEN.setShowContainer(False)\nsamp_type_S3E_SPECIMEN.setShowParents(True)\nsamp_type_S3E_SPECIMEN.setSubcodeUnique(False)\nsamp_type_S3E_SPECIMEN.setAutoGeneratedCode(True)\nsamp_type_S3E_SPECIMEN.setShowParentMetadata(False)\nsamp_type_S3E_SPECIMEN.setGeneratedCodePrefix('S3E_SPECIMEN.')\n\n# S3E_TUBE\nsamp_type_S3E_TUBE = tr.getOrCreateNewSampleType('S3E_TUBE')\nsamp_type_S3E_TUBE.setDescription('A tube for the BIORAD S3e Cell Sorter.')\nsamp_type_S3E_TUBE.setListable(True)\nsamp_type_S3E_TUBE.setShowContainer(False)\nsamp_type_S3E_TUBE.setShowParents(True)\nsamp_type_S3E_TUBE.setSubcodeUnique(False)\nsamp_type_S3E_TUBE.setAutoGeneratedCode(True)\nsamp_type_S3E_TUBE.setShowParentMetadata(False)\nsamp_type_S3E_TUBE.setGeneratedCodePrefix('S3E_TUBE.')\n\n# S3E_TUBESET\nsamp_type_S3E_TUBESET = tr.getOrCreateNewSampleType('S3E_TUBESET')\nsamp_type_S3E_TUBESET.setDescription('A virtual container for tubes for the BIORAD S3e Cell Sorter.')\nsamp_type_S3E_TUBESET.setListable(True)\nsamp_type_S3E_TUBESET.setShowContainer(False)\nsamp_type_S3E_TUBESET.setShowParents(True)\nsamp_type_S3E_TUBESET.setSubcodeUnique(False)\nsamp_type_S3E_TUBESET.setAutoGeneratedCode(True)\nsamp_type_S3E_TUBESET.setShowParentMetadata(False)\nsamp_type_S3E_TUBESET.setGeneratedCodePrefix('S3E_TUBESET.')\n\n# SONY SH800S\n# ------------------------------------------------------------------------------\n\n# SONY_SH800S_EXPERIMENT\nsamp_type_SONY_SH800S_EXPERIMENT = tr.getOrCreateNewSampleType('SONY_SH800S_EXPERIMENT')\nsamp_type_SONY_SH800S_EXPERIMENT.setDescription('Experiments from the SONY SH800S Cell Sorter.')\nsamp_type_SONY_SH800S_EXPERIMENT.setListable(True)\nsamp_type_SONY_SH800S_EXPERIMENT.setShowContainer(False)\nsamp_type_SONY_SH800S_EXPERIMENT.setShowParents(True)\nsamp_type_SONY_SH800S_EXPERIMENT.setSubcodeUnique(False)\nsamp_type_SONY_SH800S_EXPERIMENT.setAutoGeneratedCode(False)\nsamp_type_SONY_SH800S_EXPERIMENT.setShowParentMetadata(False)\nsamp_type_SONY_SH800S_EXPERIMENT.setGeneratedCodePrefix('SONY_SH800S_EXPERIMENT.')\n\n# SONY_SH800S_SPECIMEN\nsamp_type_SONY_SH800S_SPECIMEN = tr.getOrCreateNewSampleType('SONY_SH800S_SPECIMEN')\nsamp_type_SONY_SH800S_SPECIMEN.setDescription('A specimen for the SONY SH800S Cell Sorter.')\nsamp_type_SONY_SH800S_SPECIMEN.setListable(True)\nsamp_type_SONY_SH800S_SPECIMEN.setShowContainer(False)\nsamp_type_SONY_SH800S_SPECIMEN.setShowParents(True)\nsamp_type_SONY_SH800S_SPECIMEN.setSubcodeUnique(False)\nsamp_type_SONY_SH800S_SPECIMEN.setAutoGeneratedCode(True)\nsamp_type_SONY_SH800S_SPECIMEN.setShowParentMetadata(False)\nsamp_type_SONY_SH800S_SPECIMEN.setGeneratedCodePrefix('SONY_SH800S_SPECIMEN.')\n\n# SONY_SH800S_TUBE\nsamp_type_SONY_SH800S_TUBE = tr.getOrCreateNewSampleType('SONY_SH800S_TUBE')\nsamp_type_SONY_SH800S_TUBE.setDescription('A tube for the SONY SH800S Cell Sorter.')\nsamp_type_SONY_SH800S_TUBE.setListable(True)\nsamp_type_SONY_SH800S_TUBE.setShowContainer(False)\nsamp_type_SONY_SH800S_TUBE.setShowParents(True)\nsamp_type_SONY_SH800S_TUBE.setSubcodeUnique(False)\nsamp_type_SONY_SH800S_TUBE.setAutoGeneratedCode(True)\nsamp_type_SONY_SH800S_TUBE.setShowParentMetadata(False)\nsamp_type_SONY_SH800S_TUBE.setGeneratedCodePrefix('SONY_SH800S_TUBE.')\n\n# SONY_SH800S_TUBESET\nsamp_type_SONY_SH800S_TUBESET = tr.getOrCreateNewSampleType('SONY_SH800S_TUBESET')\nsamp_type_SONY_SH800S_TUBESET.setDescription('A virtual container for tubes for the SONY SH800S Cell Sorter.')\nsamp_type_SONY_SH800S_TUBESET.setListable(False)\nsamp_type_SONY_SH800S_TUBESET.setShowContainer(False)\nsamp_type_SONY_SH800S_TUBESET.setShowParents(True)\nsamp_type_SONY_SH800S_TUBESET.setSubcodeUnique(False)\nsamp_type_SONY_SH800S_TUBESET.setAutoGeneratedCode(True)\nsamp_type_SONY_SH800S_TUBESET.setShowParentMetadata(False)\nsamp_type_SONY_SH800S_TUBESET.setGeneratedCodePrefix('SONY_SH800S_TUBESET.')\n\n# SONY MA900\n# ------------------------------------------------------------------------------\n\n# SONY_MA900_EXPERIMENT\nsamp_type_SONY_MA900_EXPERIMENT = tr.getOrCreateNewSampleType('SONY_MA900_EXPERIMENT')\nsamp_type_SONY_MA900_EXPERIMENT.setDescription('Experiments from the SONY MA900 Cell Sorter.')\nsamp_type_SONY_MA900_EXPERIMENT.setListable(True)\nsamp_type_SONY_MA900_EXPERIMENT.setShowContainer(False)\nsamp_type_SONY_MA900_EXPERIMENT.setShowParents(True)\nsamp_type_SONY_MA900_EXPERIMENT.setSubcodeUnique(False)\nsamp_type_SONY_MA900_EXPERIMENT.setAutoGeneratedCode(False)\nsamp_type_SONY_MA900_EXPERIMENT.setShowParentMetadata(False)\nsamp_type_SONY_MA900_EXPERIMENT.setGeneratedCodePrefix('SONY_MA900_EXPERIMENT.')\n\n# SONY_MA900_SPECIMEN\nsamp_type_SONY_MA900_SPECIMEN = tr.getOrCreateNewSampleType('SONY_MA900_SPECIMEN')\nsamp_type_SONY_MA900_SPECIMEN.setDescription('A specimen for the SONY MA900 Cell Sorter.')\nsamp_type_SONY_MA900_SPECIMEN.setListable(True)\nsamp_type_SONY_MA900_SPECIMEN.setShowContainer(False)\nsamp_type_SONY_MA900_SPECIMEN.setShowParents(True)\nsamp_type_SONY_MA900_SPECIMEN.setSubcodeUnique(False)\nsamp_type_SONY_MA900_SPECIMEN.setAutoGeneratedCode(True)\nsamp_type_SONY_MA900_SPECIMEN.setShowParentMetadata(False)\nsamp_type_SONY_MA900_SPECIMEN.setGeneratedCodePrefix('SONY_MA900_SPECIMEN.')\n\n# SONY_MA900_TUBE\nsamp_type_SONY_MA900_TUBE = tr.getOrCreateNewSampleType('SONY_MA900_TUBE')\nsamp_type_SONY_MA900_TUBE.setDescription('A tube for the SONY MA900 Cell Sorter.')\nsamp_type_SONY_MA900_TUBE.setListable(True)\nsamp_type_SONY_MA900_TUBE.setShowContainer(False)\nsamp_type_SONY_MA900_TUBE.setShowParents(True)\nsamp_type_SONY_MA900_TUBE.setSubcodeUnique(False)\nsamp_type_SONY_MA900_TUBE.setAutoGeneratedCode(True)\nsamp_type_SONY_MA900_TUBE.setShowParentMetadata(False)\nsamp_type_SONY_MA900_TUBE.setGeneratedCodePrefix('SONY_MA900_TUBE.')\n\n# SONY_MA900_TUBESET\nsamp_type_SONY_MA900_TUBESET = tr.getOrCreateNewSampleType('SONY_MA900_TUBESET')\nsamp_type_SONY_MA900_TUBESET.setDescription('A virtual container for tubes for the SONY MA900 Cell Sorter.')\nsamp_type_SONY_MA900_TUBESET.setListable(False)\nsamp_type_SONY_MA900_TUBESET.setShowContainer(False)\nsamp_type_SONY_MA900_TUBESET.setShowParents(True)\nsamp_type_SONY_MA900_TUBESET.setSubcodeUnique(False)\nsamp_type_SONY_MA900_TUBESET.setAutoGeneratedCode(True)\nsamp_type_SONY_MA900_TUBESET.setShowParentMetadata(False)\nsamp_type_SONY_MA900_TUBESET.setGeneratedCodePrefix('SONY_MA900_TUBESET.')\n\n# ==============================================================================\n#\n# DATASET TYPES\n#\n# ==============================================================================\n\n# COMMON\n# ------------------------------------------------------------------------------\n\n# ATTACHMENT\ndata_set_type_ATTACHMENT = tr.getOrCreateNewDataSetType('ATTACHMENT')\ndata_set_type_ATTACHMENT.setDescription('Used to attach files to entities.')\ndata_set_type_ATTACHMENT.setMainDataSetPattern(None)\ndata_set_type_ATTACHMENT.setMainDataSetPath(None)\ndata_set_type_ATTACHMENT.setDeletionDisallowed(False)\n\n# BD FACS ARIA\n# ------------------------------------------------------------------------------\n\n# FACS_ARIA_FCSFILE\ndata_set_type_FACS_ARIA_FCSFILE = tr.getOrCreateNewDataSetType('FACS_ARIA_FCSFILE')\ndata_set_type_FACS_ARIA_FCSFILE.setDescription('An FCS file from the BD FACS Aria III Cell Sorter.')\ndata_set_type_FACS_ARIA_FCSFILE.setMainDataSetPattern('.*\\.fcs')\ndata_set_type_FACS_ARIA_FCSFILE.setMainDataSetPath(None)\ndata_set_type_FACS_ARIA_FCSFILE.setDeletionDisallowed(False)\n\n# FACS_ARIA_ACCESSORY_FILE\ndata_set_type_FACS_ARIA_ACCESSORY_FILE = tr.getOrCreateNewDataSetType('FACS_ARIA_ACCESSORY_FILE')\ndata_set_type_FACS_ARIA_ACCESSORY_FILE.setDescription('An accessory dataset file associated with a FACS Aria experiment.')\ndata_set_type_FACS_ARIA_ACCESSORY_FILE.setMainDataSetPattern(None)\ndata_set_type_FACS_ARIA_ACCESSORY_FILE.setMainDataSetPath(None)\ndata_set_type_FACS_ARIA_ACCESSORY_FILE.setDeletionDisallowed(False)\n\n# BD INFLUX\n# ------------------------------------------------------------------------------\n\n# INFLUX_FCSFILE\ndata_set_type_INFLUX_FCSFILE = tr.getOrCreateNewDataSetType('INFLUX_FCSFILE')\ndata_set_type_INFLUX_FCSFILE.setDescription('An FCS file from the BD Influx Cell Sorter.')\ndata_set_type_INFLUX_FCSFILE.setMainDataSetPattern('.*\\.fcs')\ndata_set_type_INFLUX_FCSFILE.setMainDataSetPath(None)\ndata_set_type_INFLUX_FCSFILE.setDeletionDisallowed(False)\n\n# INFLUX_ACCESSORY_FILE\ndata_set_type_INFLUX_ACCESSORY_FILE = tr.getOrCreateNewDataSetType('INFLUX_ACCESSORY_FILE')\ndata_set_type_INFLUX_ACCESSORY_FILE.setDescription('An accessory dataset file associated with an Influx experiment.')\ndata_set_type_INFLUX_ACCESSORY_FILE.setMainDataSetPattern(None)\ndata_set_type_INFLUX_ACCESSORY_FILE.setMainDataSetPath(None)\ndata_set_type_INFLUX_ACCESSORY_FILE.setDeletionDisallowed(False)\n\n# BD LSR FORTESSA\n# ------------------------------------------------------------------------------\n\n# LSR_FORTESSA_FCSFILE\ndata_set_type_LSR_FORTESSA_FCSFILE = tr.getOrCreateNewDataSetType('LSR_FORTESSA_FCSFILE')\ndata_set_type_LSR_FORTESSA_FCSFILE.setDescription('An FCS file from the BD LSR Fortessa Flow Cytometer.')\ndata_set_type_LSR_FORTESSA_FCSFILE.setMainDataSetPattern('.*\\.fcs')\ndata_set_type_LSR_FORTESSA_FCSFILE.setMainDataSetPath(None)\ndata_set_type_LSR_FORTESSA_FCSFILE.setDeletionDisallowed(False)\n\n# LSR_FORTESSA_ACCESSORY_FILE\ndata_set_type_LSR_FORTESSA_ACCESSORY_FILE = tr.getOrCreateNewDataSetType('LSR_FORTESSA_ACCESSORY_FILE')\ndata_set_type_LSR_FORTESSA_ACCESSORY_FILE.setDescription('An accessory dataset file associated with an LSR Fortessa experiment.')\ndata_set_type_LSR_FORTESSA_ACCESSORY_FILE.setMainDataSetPattern(None)\ndata_set_type_LSR_FORTESSA_ACCESSORY_FILE.setMainDataSetPath(None)\ndata_set_type_LSR_FORTESSA_ACCESSORY_FILE.setDeletionDisallowed(False)\n\n# BC CYTOFLEX S\n# ------------------------------------------------------------------------------\n\n# CYTOFLEX_S_FCSFILE\ndata_set_type_CYTOFLEX_S_FCSFILE = tr.getOrCreateNewDataSetType('CYTOFLEX_S_FCSFILE')\ndata_set_type_CYTOFLEX_S_FCSFILE.setDescription('An FCS file from the BC CytoFLEX S Flow Cytometer.')\ndata_set_type_CYTOFLEX_S_FCSFILE.setMainDataSetPattern('.*\\.fcs')\ndata_set_type_CYTOFLEX_S_FCSFILE.setMainDataSetPath(None)\ndata_set_type_CYTOFLEX_S_FCSFILE.setDeletionDisallowed(False)\n\n# CYTOFLEX_S_ACCESSORY_FILE\ndata_set_type_CYTOFLEX_S_ACCESSORY_FILE = tr.getOrCreateNewDataSetType('CYTOFLEX_S_ACCESSORY_FILE')\ndata_set_type_CYTOFLEX_S_ACCESSORY_FILE.setDescription('An accessory dataset file associated with a CytoFLEX S experiment.')\ndata_set_type_CYTOFLEX_S_ACCESSORY_FILE.setMainDataSetPattern(None)\ndata_set_type_CYTOFLEX_S_ACCESSORY_FILE.setMainDataSetPath(None)\ndata_set_type_CYTOFLEX_S_ACCESSORY_FILE.setDeletionDisallowed(False)\n\n# BC MOFLO XDP\n# ------------------------------------------------------------------------------\n\n# MOFLO_XDP_FCSFILE\ndata_set_type_MOFLO_XDP_FCSFILE = tr.getOrCreateNewDataSetType('MOFLO_XDP_FCSFILE')\ndata_set_type_MOFLO_XDP_FCSFILE.setDescription('An FCS file from the BC MoFlo XDP Cell Sorter.')\ndata_set_type_MOFLO_XDP_FCSFILE.setMainDataSetPattern('.*\\.fcs')\ndata_set_type_MOFLO_XDP_FCSFILE.setMainDataSetPath(None)\ndata_set_type_MOFLO_XDP_FCSFILE.setDeletionDisallowed(False)\n\n# MOFLO_XDP_ACCESSORY_FILE\ndata_set_type_MOFLO_XDP_ACCESSORY_FILE = tr.getOrCreateNewDataSetType('MOFLO_XDP_ACCESSORY_FILE')\ndata_set_type_MOFLO_XDP_ACCESSORY_FILE.setDescription('An accessory dataset file associated with a MOFLO XDP experiment.')\ndata_set_type_MOFLO_XDP_ACCESSORY_FILE.setMainDataSetPattern(None)\ndata_set_type_MOFLO_XDP_ACCESSORY_FILE.setMainDataSetPath(None)\ndata_set_type_MOFLO_XDP_ACCESSORY_FILE.setDeletionDisallowed(False)\n\n# BIORAD S3E\n# ------------------------------------------------------------------------------\n\n# S3E_FCSFILE\ndata_set_type_S3E_FCSFILE = tr.getOrCreateNewDataSetType('S3E_FCSFILE')\ndata_set_type_S3E_FCSFILE.setDescription('An FCS file from the BIORAD S3e Cell Sorter.')\ndata_set_type_S3E_FCSFILE.setMainDataSetPattern('.*\\.fcs')\ndata_set_type_S3E_FCSFILE.setMainDataSetPath(None)\ndata_set_type_S3E_FCSFILE.setDeletionDisallowed(False)\n\n# S3E_ACCESSORY_FILE\ndata_set_type_S3E_ACCESSORY_FILE = tr.getOrCreateNewDataSetType('S3E_ACCESSORY_FILE')\ndata_set_type_S3E_ACCESSORY_FILE.setDescription('An accessory dataset file associated with an S3E experiment.')\ndata_set_type_S3E_ACCESSORY_FILE.setMainDataSetPattern(None)\ndata_set_type_S3E_ACCESSORY_FILE.setMainDataSetPath(None)\ndata_set_type_S3E_ACCESSORY_FILE.setDeletionDisallowed(False)\n\n# SONY SH800S\n# ------------------------------------------------------------------------------\n\n# SONY_SH800S_FCSFILE\ndata_set_type_SONY_SH800S_FCSFILE = tr.getOrCreateNewDataSetType('SONY_SH800S_FCSFILE')\ndata_set_type_SONY_SH800S_FCSFILE.setDescription('An FCS file from the SONY SH800S Cell Sorter.')\ndata_set_type_SONY_SH800S_FCSFILE.setMainDataSetPattern('.*\\.fcs')\ndata_set_type_SONY_SH800S_FCSFILE.setMainDataSetPath(None)\ndata_set_type_SONY_SH800S_FCSFILE.setDeletionDisallowed(False)\n\n# SONY_SH800S_ACCESSORY_FILE\ndata_set_type_SONY_SH800S_ACCESSORY_FILE = tr.getOrCreateNewDataSetType('SONY_SH800S_ACCESSORY_FILE')\ndata_set_type_SONY_SH800S_ACCESSORY_FILE.setDescription('An accessory dataset file associated with a SONY SH800S experiment.')\ndata_set_type_SONY_SH800S_ACCESSORY_FILE.setMainDataSetPattern(None)\ndata_set_type_SONY_SH800S_ACCESSORY_FILE.setMainDataSetPath(None)\ndata_set_type_SONY_SH800S_ACCESSORY_FILE.setDeletionDisallowed(False)\n\n# SONY MA900\n# ------------------------------------------------------------------------------\n\n# SONY_MA900_FCSFILE\ndata_set_type_SONY_MA900_FCSFILE = tr.getOrCreateNewDataSetType('SONY_MA900_FCSFILE')\ndata_set_type_SONY_MA900_FCSFILE.setDescription('An FCS file from the SONY MA900 Cell Sorter.')\ndata_set_type_SONY_MA900_FCSFILE.setMainDataSetPattern('.*\\.fcs')\ndata_set_type_SONY_MA900_FCSFILE.setMainDataSetPath(None)\ndata_set_type_SONY_MA900_FCSFILE.setDeletionDisallowed(False)\n\n# SONY_MA900_ACCESSORY_FILE\ndata_set_type_SONY_MA900_ACCESSORY_FILE = tr.getOrCreateNewDataSetType('SONY_MA900_ACCESSORY_FILE')\ndata_set_type_SONY_MA900_ACCESSORY_FILE.setDescription('An accessory dataset file associated with a SONY MA900 experiment.')\ndata_set_type_SONY_MA900_ACCESSORY_FILE.setMainDataSetPattern(None)\ndata_set_type_SONY_MA900_ACCESSORY_FILE.setMainDataSetPath(None)\ndata_set_type_SONY_MA900_ACCESSORY_FILE.setDeletionDisallowed(False)\n\n# ==============================================================================\n#\n# PROPERTY TYPES\n#\n# ==============================================================================\n\n# COMMON\n# ------------------------------------------------------------------------------\n\n# ANNOTATIONS_STATE\nprop_type_ANNOTATIONS_STATE = tr.getOrCreateNewPropertyType('ANNOTATIONS_STATE', DataType.XML)\nprop_type_ANNOTATIONS_STATE.setLabel('Annotations State')\nprop_type_ANNOTATIONS_STATE.setManagedInternally(False)\nprop_type_ANNOTATIONS_STATE.setInternalNamespace(True)\n\n# DEFAULT_OBJECT_TYPE\nprop_type_DEFAULT_OBJECT_TYPE = tr.getOrCreateNewPropertyType('DEFAULT_OBJECT_TYPE', DataType.VARCHAR)\nprop_type_DEFAULT_OBJECT_TYPE.setLabel('Default Object Type')\nprop_type_DEFAULT_OBJECT_TYPE.setManagedInternally(False)\nprop_type_DEFAULT_OBJECT_TYPE.setInternalNamespace(True)\n\n# DESCRIPTION\nprop_type_DESCRIPTION = tr.getOrCreateNewPropertyType('DESCRIPTION', DataType.VARCHAR)\nprop_type_DESCRIPTION.setLabel('Description')\nprop_type_DESCRIPTION.setManagedInternally(False)\nprop_type_DESCRIPTION.setInternalNamespace(False)\n\n# NAME\nprop_type_NAME = tr.getOrCreateNewPropertyType('NAME', DataType.VARCHAR)\nprop_type_NAME.setLabel('Name')\nprop_type_NAME.setManagedInternally(False)\nprop_type_NAME.setInternalNamespace(True)\n\n# NOTES\nprop_type_NOTES = tr.getOrCreateNewPropertyType('NOTES', DataType.VARCHAR)\nprop_type_NOTES.setLabel('Notes')\nprop_type_NOTES.setManagedInternally(False)\nprop_type_NOTES.setInternalNamespace(False)\n\n# RESOLUTION\nprop_type_RESOLUTION = tr.getOrCreateNewPropertyType('RESOLUTION', DataType.VARCHAR)\nprop_type_RESOLUTION.setLabel('Resolution')\nprop_type_RESOLUTION.setManagedInternally(False)\nprop_type_RESOLUTION.setInternalNamespace(True)\n\n# XMLCOMMENTS\nprop_type_XMLCOMMENTS = tr.getOrCreateNewPropertyType('XMLCOMMENTS', DataType.XML)\nprop_type_XMLCOMMENTS.setLabel('XML Comments')\nprop_type_XMLCOMMENTS.setManagedInternally(False)\nprop_type_XMLCOMMENTS.setInternalNamespace(True)\n\n# BD FACS ARIA\n# ------------------------------------------------------------------------------\n\n# FACS_ARIA_EXPERIMENT_ACQ_HARDWARE\nprop_type_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE = tr.getOrCreateNewPropertyType('FACS_ARIA_EXPERIMENT_ACQ_HARDWARE', DataType.VARCHAR)\nprop_type_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE.setLabel('Acquisition hardware')\nprop_type_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE.setManagedInternally(False)\nprop_type_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE.setInternalNamespace(False)\n\n# FACS_ARIA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nprop_type_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.getOrCreateNewPropertyType('FACS_ARIA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME', DataType.VARCHAR)\nprop_type_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setLabel('Acquisition station name')\nprop_type_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setManagedInternally(False)\nprop_type_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setInternalNamespace(False)\n\n# FACS_ARIA_EXPERIMENT_ACQ_SOFTWARE\nprop_type_FACS_ARIA_EXPERIMENT_ACQ_SOFTWARE = tr.getOrCreateNewPropertyType('FACS_ARIA_EXPERIMENT_ACQ_SOFTWARE', DataType.VARCHAR)\nprop_type_FACS_ARIA_EXPERIMENT_ACQ_SOFTWARE.setLabel('Acquisition software')\nprop_type_FACS_ARIA_EXPERIMENT_ACQ_SOFTWARE.setManagedInternally(False)\nprop_type_FACS_ARIA_EXPERIMENT_ACQ_SOFTWARE.setInternalNamespace(False)\n\n# FACS_ARIA_EXPERIMENT_DATE\nprop_type_FACS_ARIA_EXPERIMENT_DATE = tr.getOrCreateNewPropertyType('FACS_ARIA_EXPERIMENT_DATE', DataType.TIMESTAMP)\nprop_type_FACS_ARIA_EXPERIMENT_DATE.setLabel('Experiment date')\nprop_type_FACS_ARIA_EXPERIMENT_DATE.setManagedInternally(False)\nprop_type_FACS_ARIA_EXPERIMENT_DATE.setInternalNamespace(False)\n\n# FACS_ARIA_EXPERIMENT_DESCRIPTION\nprop_type_FACS_ARIA_EXPERIMENT_DESCRIPTION = tr.getOrCreateNewPropertyType('FACS_ARIA_EXPERIMENT_DESCRIPTION', DataType.MULTILINE_VARCHAR)\nprop_type_FACS_ARIA_EXPERIMENT_DESCRIPTION.setLabel('Description')\nprop_type_FACS_ARIA_EXPERIMENT_DESCRIPTION.setManagedInternally(False)\nprop_type_FACS_ARIA_EXPERIMENT_DESCRIPTION.setInternalNamespace(False)\n\n# FACS_ARIA_EXPERIMENT_NAME\nprop_type_FACS_ARIA_EXPERIMENT_NAME = tr.getOrCreateNewPropertyType('FACS_ARIA_EXPERIMENT_NAME', DataType.VARCHAR)\nprop_type_FACS_ARIA_EXPERIMENT_NAME.setLabel('Experiment name')\nprop_type_FACS_ARIA_EXPERIMENT_NAME.setManagedInternally(False)\nprop_type_FACS_ARIA_EXPERIMENT_NAME.setInternalNamespace(False)\n\n# FACS_ARIA_EXPERIMENT_OWNER\nprop_type_FACS_ARIA_EXPERIMENT_OWNER = tr.getOrCreateNewPropertyType('FACS_ARIA_EXPERIMENT_OWNER', DataType.VARCHAR)\nprop_type_FACS_ARIA_EXPERIMENT_OWNER.setLabel('Owner')\nprop_type_FACS_ARIA_EXPERIMENT_OWNER.setManagedInternally(False)\nprop_type_FACS_ARIA_EXPERIMENT_OWNER.setInternalNamespace(False)\n\n# FACS_ARIA_EXPERIMENT_VERSION\nprop_type_FACS_ARIA_EXPERIMENT_VERSION = tr.getOrCreateNewPropertyType('FACS_ARIA_EXPERIMENT_VERSION', DataType.INTEGER)\nprop_type_FACS_ARIA_EXPERIMENT_VERSION.setLabel('Version')\nprop_type_FACS_ARIA_EXPERIMENT_VERSION.setManagedInternally(False)\nprop_type_FACS_ARIA_EXPERIMENT_VERSION.setInternalNamespace(False)\n\n# FACS_ARIA_FCSFILE_ACQ_DATE\nprop_type_FACS_ARIA_FCSFILE_ACQ_DATE = tr.getOrCreateNewPropertyType('FACS_ARIA_FCSFILE_ACQ_DATE', DataType.TIMESTAMP)\nprop_type_FACS_ARIA_FCSFILE_ACQ_DATE.setLabel('Acquisition date')\nprop_type_FACS_ARIA_FCSFILE_ACQ_DATE.setManagedInternally(False)\nprop_type_FACS_ARIA_FCSFILE_ACQ_DATE.setInternalNamespace(False)\n\n# FACS_ARIA_FCSFILE_PARAMETERS\nprop_type_FACS_ARIA_FCSFILE_PARAMETERS = tr.getOrCreateNewPropertyType('FACS_ARIA_FCSFILE_PARAMETERS', DataType.MULTILINE_VARCHAR)\nprop_type_FACS_ARIA_FCSFILE_PARAMETERS.setLabel('FCS parameters')\nprop_type_FACS_ARIA_FCSFILE_PARAMETERS.setManagedInternally(False)\nprop_type_FACS_ARIA_FCSFILE_PARAMETERS.setInternalNamespace(False)\n\n# FACS_ARIA_TUBE_ISINDEXSORT\nprop_type_FACS_ARIA_TUBE_ISINDEXSORT = tr.getOrCreateNewPropertyType('FACS_ARIA_TUBE_ISINDEXSORT', DataType.BOOLEAN)\nprop_type_FACS_ARIA_TUBE_ISINDEXSORT.setLabel('Index sort')\nprop_type_FACS_ARIA_TUBE_ISINDEXSORT.setManagedInternally(False)\nprop_type_FACS_ARIA_TUBE_ISINDEXSORT.setInternalNamespace(False)\n\n# BD INFLUX\n# ------------------------------------------------------------------------------\n\n# INFLUX_EXPERIMENT_ACQ_HARDWARE\nprop_type_INFLUX_EXPERIMENT_ACQ_HARDWARE = tr.getOrCreateNewPropertyType('INFLUX_EXPERIMENT_ACQ_HARDWARE', DataType.VARCHAR)\nprop_type_INFLUX_EXPERIMENT_ACQ_HARDWARE.setLabel('Acquisition hardware')\nprop_type_INFLUX_EXPERIMENT_ACQ_HARDWARE.setManagedInternally(False)\nprop_type_INFLUX_EXPERIMENT_ACQ_HARDWARE.setInternalNamespace(False)\n\n# INFLUX_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nprop_type_INFLUX_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.getOrCreateNewPropertyType('INFLUX_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME', DataType.VARCHAR)\nprop_type_INFLUX_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setLabel('Acquisition station name')\nprop_type_INFLUX_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setManagedInternally(False)\nprop_type_INFLUX_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setInternalNamespace(False)\n\n# INFLUX_EXPERIMENT_ACQ_SOFTWARE\nprop_type_INFLUX_EXPERIMENT_ACQ_SOFTWARE = tr.getOrCreateNewPropertyType('INFLUX_EXPERIMENT_ACQ_SOFTWARE', DataType.VARCHAR)\nprop_type_INFLUX_EXPERIMENT_ACQ_SOFTWARE.setLabel('Acquisition software')\nprop_type_INFLUX_EXPERIMENT_ACQ_SOFTWARE.setManagedInternally(False)\nprop_type_INFLUX_EXPERIMENT_ACQ_SOFTWARE.setInternalNamespace(False)\n\n# INFLUX_EXPERIMENT_DATE\nprop_type_INFLUX_EXPERIMENT_DATE = tr.getOrCreateNewPropertyType('INFLUX_EXPERIMENT_DATE', DataType.TIMESTAMP)\nprop_type_INFLUX_EXPERIMENT_DATE.setLabel('Experiment date')\nprop_type_INFLUX_EXPERIMENT_DATE.setManagedInternally(False)\nprop_type_INFLUX_EXPERIMENT_DATE.setInternalNamespace(False)\n\n# INFLUX_EXPERIMENT_DESCRIPTION\nprop_type_INFLUX_EXPERIMENT_DESCRIPTION = tr.getOrCreateNewPropertyType('INFLUX_EXPERIMENT_DESCRIPTION', DataType.MULTILINE_VARCHAR)\nprop_type_INFLUX_EXPERIMENT_DESCRIPTION.setLabel('Description')\nprop_type_INFLUX_EXPERIMENT_DESCRIPTION.setManagedInternally(False)\nprop_type_INFLUX_EXPERIMENT_DESCRIPTION.setInternalNamespace(False)\n\n# INFLUX_EXPERIMENT_NAME\nprop_type_INFLUX_EXPERIMENT_NAME = tr.getOrCreateNewPropertyType('INFLUX_EXPERIMENT_NAME', DataType.VARCHAR)\nprop_type_INFLUX_EXPERIMENT_NAME.setLabel('Experiment name')\nprop_type_INFLUX_EXPERIMENT_NAME.setManagedInternally(False)\nprop_type_INFLUX_EXPERIMENT_NAME.setInternalNamespace(False)\n\n# INFLUX_EXPERIMENT_OWNER\nprop_type_INFLUX_EXPERIMENT_OWNER = tr.getOrCreateNewPropertyType('INFLUX_EXPERIMENT_OWNER', DataType.VARCHAR)\nprop_type_INFLUX_EXPERIMENT_OWNER.setLabel('Owner')\nprop_type_INFLUX_EXPERIMENT_OWNER.setManagedInternally(False)\nprop_type_INFLUX_EXPERIMENT_OWNER.setInternalNamespace(False)\n\n# INFLUX_EXPERIMENT_VERSION\nprop_type_INFLUX_EXPERIMENT_VERSION = tr.getOrCreateNewPropertyType('INFLUX_EXPERIMENT_VERSION', DataType.INTEGER)\nprop_type_INFLUX_EXPERIMENT_VERSION.setLabel('Version')\nprop_type_INFLUX_EXPERIMENT_VERSION.setManagedInternally(False)\nprop_type_INFLUX_EXPERIMENT_VERSION.setInternalNamespace(False)\n\n# INFLUX_FCSFILE_ACQ_DATE\nprop_type_INFLUX_FCSFILE_ACQ_DATE = tr.getOrCreateNewPropertyType('INFLUX_FCSFILE_ACQ_DATE', DataType.TIMESTAMP)\nprop_type_INFLUX_FCSFILE_ACQ_DATE.setLabel('Acquisition date')\nprop_type_INFLUX_FCSFILE_ACQ_DATE.setManagedInternally(False)\nprop_type_INFLUX_FCSFILE_ACQ_DATE.setInternalNamespace(False)\n\n# INFLUX_FCSFILE_PARAMETERS\nprop_type_INFLUX_FCSFILE_PARAMETERS = tr.getOrCreateNewPropertyType('INFLUX_FCSFILE_PARAMETERS', DataType.MULTILINE_VARCHAR)\nprop_type_INFLUX_FCSFILE_PARAMETERS.setLabel('FCS parameters')\nprop_type_INFLUX_FCSFILE_PARAMETERS.setManagedInternally(False)\nprop_type_INFLUX_FCSFILE_PARAMETERS.setInternalNamespace(False)\n\n# INFLUX_TUBE_ISINDEXSORT\nprop_type_INFLUX_TUBE_ISINDEXSORT = tr.getOrCreateNewPropertyType('INFLUX_TUBE_ISINDEXSORT', DataType.BOOLEAN)\nprop_type_INFLUX_TUBE_ISINDEXSORT.setLabel('Index sort')\nprop_type_INFLUX_TUBE_ISINDEXSORT.setManagedInternally(False)\nprop_type_INFLUX_TUBE_ISINDEXSORT.setInternalNamespace(False)\n\n# BD LSR FORTESSA\n# ------------------------------------------------------------------------------\n\n# LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE\nprop_type_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE = tr.getOrCreateNewPropertyType('LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE', DataType.VARCHAR)\nprop_type_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE.setLabel('Acquisition hardware')\nprop_type_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE.setManagedInternally(False)\nprop_type_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE.setInternalNamespace(False)\n\n# LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nprop_type_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.getOrCreateNewPropertyType('LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME', DataType.VARCHAR)\nprop_type_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setLabel('Acquisition station name')\nprop_type_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setManagedInternally(False)\nprop_type_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setInternalNamespace(False)\n\n# LSR_FORTESSA_EXPERIMENT_ACQ_SOFTWARE\nprop_type_LSR_FORTESSA_EXPERIMENT_ACQ_SOFTWARE = tr.getOrCreateNewPropertyType('LSR_FORTESSA_EXPERIMENT_ACQ_SOFTWARE', DataType.VARCHAR)\nprop_type_LSR_FORTESSA_EXPERIMENT_ACQ_SOFTWARE.setLabel('Acquisition software')\nprop_type_LSR_FORTESSA_EXPERIMENT_ACQ_SOFTWARE.setManagedInternally(False)\nprop_type_LSR_FORTESSA_EXPERIMENT_ACQ_SOFTWARE.setInternalNamespace(False)\n\n# LSR_FORTESSA_EXPERIMENT_DATE\nprop_type_LSR_FORTESSA_EXPERIMENT_DATE = tr.getOrCreateNewPropertyType('LSR_FORTESSA_EXPERIMENT_DATE', DataType.TIMESTAMP)\nprop_type_LSR_FORTESSA_EXPERIMENT_DATE.setLabel('Experiment date')\nprop_type_LSR_FORTESSA_EXPERIMENT_DATE.setManagedInternally(False)\nprop_type_LSR_FORTESSA_EXPERIMENT_DATE.setInternalNamespace(False)\n\n# LSR_FORTESSA_EXPERIMENT_DESCRIPTION\nprop_type_LSR_FORTESSA_EXPERIMENT_DESCRIPTION = tr.getOrCreateNewPropertyType('LSR_FORTESSA_EXPERIMENT_DESCRIPTION', DataType.MULTILINE_VARCHAR)\nprop_type_LSR_FORTESSA_EXPERIMENT_DESCRIPTION.setLabel('Description')\nprop_type_LSR_FORTESSA_EXPERIMENT_DESCRIPTION.setManagedInternally(False)\nprop_type_LSR_FORTESSA_EXPERIMENT_DESCRIPTION.setInternalNamespace(False)\n\n# LSR_FORTESSA_EXPERIMENT_NAME\nprop_type_LSR_FORTESSA_EXPERIMENT_NAME = tr.getOrCreateNewPropertyType('LSR_FORTESSA_EXPERIMENT_NAME', DataType.VARCHAR)\nprop_type_LSR_FORTESSA_EXPERIMENT_NAME.setLabel('Experiment name')\nprop_type_LSR_FORTESSA_EXPERIMENT_NAME.setManagedInternally(False)\nprop_type_LSR_FORTESSA_EXPERIMENT_NAME.setInternalNamespace(False)\n\n# LSR_FORTESSA_EXPERIMENT_OWNER\nprop_type_LSR_FORTESSA_EXPERIMENT_OWNER = tr.getOrCreateNewPropertyType('LSR_FORTESSA_EXPERIMENT_OWNER', DataType.VARCHAR)\nprop_type_LSR_FORTESSA_EXPERIMENT_OWNER.setLabel('Owner')\nprop_type_LSR_FORTESSA_EXPERIMENT_OWNER.setManagedInternally(False)\nprop_type_LSR_FORTESSA_EXPERIMENT_OWNER.setInternalNamespace(False)\n\n# LSR_FORTESSA_EXPERIMENT_VERSION\nprop_type_LSR_FORTESSA_EXPERIMENT_VERSION = tr.getOrCreateNewPropertyType('LSR_FORTESSA_EXPERIMENT_VERSION', DataType.INTEGER)\nprop_type_LSR_FORTESSA_EXPERIMENT_VERSION.setLabel('Version')\nprop_type_LSR_FORTESSA_EXPERIMENT_VERSION.setManagedInternally(False)\nprop_type_LSR_FORTESSA_EXPERIMENT_VERSION.setInternalNamespace(False)\n\n# LSR_FORTESSA_FCSFILE_ACQ_DATE\nprop_type_LSR_FORTESSA_FCSFILE_ACQ_DATE = tr.getOrCreateNewPropertyType('LSR_FORTESSA_FCSFILE_ACQ_DATE', DataType.TIMESTAMP)\nprop_type_LSR_FORTESSA_FCSFILE_ACQ_DATE.setLabel('Acquisition date')\nprop_type_LSR_FORTESSA_FCSFILE_ACQ_DATE.setManagedInternally(False)\nprop_type_LSR_FORTESSA_FCSFILE_ACQ_DATE.setInternalNamespace(False)\n\n# LSR_FORTESSA_FCSFILE_PARAMETERS\nprop_type_LSR_FORTESSA_FCSFILE_PARAMETERS = tr.getOrCreateNewPropertyType('LSR_FORTESSA_FCSFILE_PARAMETERS', DataType.MULTILINE_VARCHAR)\nprop_type_LSR_FORTESSA_FCSFILE_PARAMETERS.setLabel('FCS parameters')\nprop_type_LSR_FORTESSA_FCSFILE_PARAMETERS.setManagedInternally(False)\nprop_type_LSR_FORTESSA_FCSFILE_PARAMETERS.setInternalNamespace(False)\n\n# LSR_FORTESSA_PLATE_GEOMETRY\nprop_type_LSR_FORTESSA_PLATE_GEOMETRY = tr.getOrCreateNewPropertyType('LSR_FORTESSA_PLATE_GEOMETRY', DataType.CONTROLLEDVOCABULARY)\nprop_type_LSR_FORTESSA_PLATE_GEOMETRY.setLabel('Plate Geometry')\nprop_type_LSR_FORTESSA_PLATE_GEOMETRY.setManagedInternally(False)\nprop_type_LSR_FORTESSA_PLATE_GEOMETRY.setInternalNamespace(False)\n\nprop_type_LSR_FORTESSA_PLATE_GEOMETRY.setVocabulary(vocabulary_LSR_FORTESSA_PLATE_GEOMETRY)\n\n# BC CYTOFLEX S\n# ------------------------------------------------------------------------------\n\n# CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE\nprop_type_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE = tr.getOrCreateNewPropertyType('CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE', DataType.VARCHAR)\nprop_type_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE.setLabel('Acquisition hardware')\nprop_type_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE.setManagedInternally(False)\nprop_type_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE.setInternalNamespace(False)\n\n# CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nprop_type_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.getOrCreateNewPropertyType('CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME', DataType.VARCHAR)\nprop_type_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setLabel('Acquisition station name')\nprop_type_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setManagedInternally(False)\nprop_type_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setInternalNamespace(False)\n\n# CYTOFLEX_S_EXPERIMENT_ACQ_SOFTWARE\nprop_type_CYTOFLEX_S_EXPERIMENT_ACQ_SOFTWARE = tr.getOrCreateNewPropertyType('CYTOFLEX_S_EXPERIMENT_ACQ_SOFTWARE', DataType.VARCHAR)\nprop_type_CYTOFLEX_S_EXPERIMENT_ACQ_SOFTWARE.setLabel('Acquisition software')\nprop_type_CYTOFLEX_S_EXPERIMENT_ACQ_SOFTWARE.setManagedInternally(False)\nprop_type_CYTOFLEX_S_EXPERIMENT_ACQ_SOFTWARE.setInternalNamespace(False)\n\n# CYTOFLEX_S_EXPERIMENT_DATE\nprop_type_CYTOFLEX_S_EXPERIMENT_DATE = tr.getOrCreateNewPropertyType('CYTOFLEX_S_EXPERIMENT_DATE', DataType.TIMESTAMP)\nprop_type_CYTOFLEX_S_EXPERIMENT_DATE.setLabel('Experiment date')\nprop_type_CYTOFLEX_S_EXPERIMENT_DATE.setManagedInternally(False)\nprop_type_CYTOFLEX_S_EXPERIMENT_DATE.setInternalNamespace(False)\n\n# CYTOFLEX_S_EXPERIMENT_DESCRIPTION\nprop_type_CYTOFLEX_S_EXPERIMENT_DESCRIPTION = tr.getOrCreateNewPropertyType('CYTOFLEX_S_EXPERIMENT_DESCRIPTION', DataType.MULTILINE_VARCHAR)\nprop_type_CYTOFLEX_S_EXPERIMENT_DESCRIPTION.setLabel('Description')\nprop_type_CYTOFLEX_S_EXPERIMENT_DESCRIPTION.setManagedInternally(False)\nprop_type_CYTOFLEX_S_EXPERIMENT_DESCRIPTION.setInternalNamespace(False)\n\n# CYTOFLEX_S_EXPERIMENT_NAME\nprop_type_CYTOFLEX_S_EXPERIMENT_NAME = tr.getOrCreateNewPropertyType('CYTOFLEX_S_EXPERIMENT_NAME', DataType.VARCHAR)\nprop_type_CYTOFLEX_S_EXPERIMENT_NAME.setLabel('Experiment name')\nprop_type_CYTOFLEX_S_EXPERIMENT_NAME.setManagedInternally(False)\nprop_type_CYTOFLEX_S_EXPERIMENT_NAME.setInternalNamespace(False)\n\n# CYTOFLEX_S_EXPERIMENT_OWNER\nprop_type_CYTOFLEX_S_EXPERIMENT_OWNER = tr.getOrCreateNewPropertyType('CYTOFLEX_S_EXPERIMENT_OWNER', DataType.VARCHAR)\nprop_type_CYTOFLEX_S_EXPERIMENT_OWNER.setLabel('Owner')\nprop_type_CYTOFLEX_S_EXPERIMENT_OWNER.setManagedInternally(False)\nprop_type_CYTOFLEX_S_EXPERIMENT_OWNER.setInternalNamespace(False)\n\n# CYTOFLEX_S_EXPERIMENT_VERSION\nprop_type_CYTOFLEX_S_EXPERIMENT_VERSION = tr.getOrCreateNewPropertyType('CYTOFLEX_S_EXPERIMENT_VERSION', DataType.INTEGER)\nprop_type_CYTOFLEX_S_EXPERIMENT_VERSION.setLabel('Version')\nprop_type_CYTOFLEX_S_EXPERIMENT_VERSION.setManagedInternally(False)\nprop_type_CYTOFLEX_S_EXPERIMENT_VERSION.setInternalNamespace(False)\n\n# CYTOFLEX_S_FCSFILE_ACQ_DATE\nprop_type_CYTOFLEX_S_FCSFILE_ACQ_DATE = tr.getOrCreateNewPropertyType('CYTOFLEX_S_FCSFILE_ACQ_DATE', DataType.TIMESTAMP)\nprop_type_CYTOFLEX_S_FCSFILE_ACQ_DATE.setLabel('Acquisition date')\nprop_type_CYTOFLEX_S_FCSFILE_ACQ_DATE.setManagedInternally(False)\nprop_type_CYTOFLEX_S_FCSFILE_ACQ_DATE.setInternalNamespace(False)\n\n# CYTOFLEX_S_FCSFILE_PARAMETERS\nprop_type_CYTOFLEX_S_FCSFILE_PARAMETERS = tr.getOrCreateNewPropertyType('CYTOFLEX_S_FCSFILE_PARAMETERS', DataType.MULTILINE_VARCHAR)\nprop_type_CYTOFLEX_S_FCSFILE_PARAMETERS.setLabel('FCS parameters')\nprop_type_CYTOFLEX_S_FCSFILE_PARAMETERS.setManagedInternally(False)\nprop_type_CYTOFLEX_S_FCSFILE_PARAMETERS.setInternalNamespace(False)\n\n# CYTOFLEX_S_PLATE_GEOMETRY\nprop_type_CYTOFLEX_S_PLATE_GEOMETRY = tr.getOrCreateNewPropertyType('CYTOFLEX_S_PLATE_GEOMETRY', DataType.CONTROLLEDVOCABULARY)\nprop_type_CYTOFLEX_S_PLATE_GEOMETRY.setLabel('Plate Geometry')\nprop_type_CYTOFLEX_S_PLATE_GEOMETRY.setManagedInternally(False)\nprop_type_CYTOFLEX_S_PLATE_GEOMETRY.setInternalNamespace(False)\n\nprop_type_CYTOFLEX_S_PLATE_GEOMETRY.setVocabulary(vocabulary_CYTOFLEX_S_PLATE_GEOMETRY)\n\n# BC MOFLO XDP\n# ------------------------------------------------------------------------------\n\n# MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE\nprop_type_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE = tr.getOrCreateNewPropertyType('MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE', DataType.VARCHAR)\nprop_type_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE.setLabel('Acquisition hardware')\nprop_type_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE.setManagedInternally(False)\nprop_type_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE.setInternalNamespace(False)\n\n# MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nprop_type_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.getOrCreateNewPropertyType('MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME', DataType.VARCHAR)\nprop_type_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setLabel('Acquisition station name')\nprop_type_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setManagedInternally(False)\nprop_type_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setInternalNamespace(False)\n\n# MOFLO_XDP_EXPERIMENT_ACQ_SOFTWARE\nprop_type_MOFLO_XDP_EXPERIMENT_ACQ_SOFTWARE = tr.getOrCreateNewPropertyType('MOFLO_XDP_EXPERIMENT_ACQ_SOFTWARE', DataType.VARCHAR)\nprop_type_MOFLO_XDP_EXPERIMENT_ACQ_SOFTWARE.setLabel('Acquisition software')\nprop_type_MOFLO_XDP_EXPERIMENT_ACQ_SOFTWARE.setManagedInternally(False)\nprop_type_MOFLO_XDP_EXPERIMENT_ACQ_SOFTWARE.setInternalNamespace(False)\n\n# MOFLO_XDP_EXPERIMENT_DATE\nprop_type_MOFLO_XDP_EXPERIMENT_DATE = tr.getOrCreateNewPropertyType('MOFLO_XDP_EXPERIMENT_DATE', DataType.TIMESTAMP)\nprop_type_MOFLO_XDP_EXPERIMENT_DATE.setLabel('Experiment date')\nprop_type_MOFLO_XDP_EXPERIMENT_DATE.setManagedInternally(False)\nprop_type_MOFLO_XDP_EXPERIMENT_DATE.setInternalNamespace(False)\n\n# MOFLO_XDP_EXPERIMENT_DESCRIPTION\nprop_type_MOFLO_XDP_EXPERIMENT_DESCRIPTION = tr.getOrCreateNewPropertyType('MOFLO_XDP_EXPERIMENT_DESCRIPTION', DataType.MULTILINE_VARCHAR)\nprop_type_MOFLO_XDP_EXPERIMENT_DESCRIPTION.setLabel('Description')\nprop_type_MOFLO_XDP_EXPERIMENT_DESCRIPTION.setManagedInternally(False)\nprop_type_MOFLO_XDP_EXPERIMENT_DESCRIPTION.setInternalNamespace(False)\n\n# MOFLO_XDP_EXPERIMENT_NAME\nprop_type_MOFLO_XDP_EXPERIMENT_NAME = tr.getOrCreateNewPropertyType('MOFLO_XDP_EXPERIMENT_NAME', DataType.VARCHAR)\nprop_type_MOFLO_XDP_EXPERIMENT_NAME.setLabel('Experiment name')\nprop_type_MOFLO_XDP_EXPERIMENT_NAME.setManagedInternally(False)\nprop_type_MOFLO_XDP_EXPERIMENT_NAME.setInternalNamespace(False)\n\n# MOFLO_XDP_EXPERIMENT_OWNER\nprop_type_MOFLO_XDP_EXPERIMENT_OWNER = tr.getOrCreateNewPropertyType('MOFLO_XDP_EXPERIMENT_OWNER', DataType.VARCHAR)\nprop_type_MOFLO_XDP_EXPERIMENT_OWNER.setLabel('Owner')\nprop_type_MOFLO_XDP_EXPERIMENT_OWNER.setManagedInternally(False)\nprop_type_MOFLO_XDP_EXPERIMENT_OWNER.setInternalNamespace(False)\n\n# MOFLO_XDP_EXPERIMENT_VERSION\nprop_type_MOFLO_XDP_EXPERIMENT_VERSION = tr.getOrCreateNewPropertyType('MOFLO_XDP_EXPERIMENT_VERSION', DataType.INTEGER)\nprop_type_MOFLO_XDP_EXPERIMENT_VERSION.setLabel('Version')\nprop_type_MOFLO_XDP_EXPERIMENT_VERSION.setManagedInternally(False)\nprop_type_MOFLO_XDP_EXPERIMENT_VERSION.setInternalNamespace(False)\n\n# MOFLO_XDP_FCSFILE_ACQ_DATE\nprop_type_MOFLO_XDP_FCSFILE_ACQ_DATE = tr.getOrCreateNewPropertyType('MOFLO_XDP_FCSFILE_ACQ_DATE', DataType.TIMESTAMP)\nprop_type_MOFLO_XDP_FCSFILE_ACQ_DATE.setLabel('Acquisition date')\nprop_type_MOFLO_XDP_FCSFILE_ACQ_DATE.setManagedInternally(False)\nprop_type_MOFLO_XDP_FCSFILE_ACQ_DATE.setInternalNamespace(False)\n\n# MOFLO_XDP_FCSFILE_PARAMETERS\nprop_type_MOFLO_XDP_FCSFILE_PARAMETERS = tr.getOrCreateNewPropertyType('MOFLO_XDP_FCSFILE_PARAMETERS', DataType.MULTILINE_VARCHAR)\nprop_type_MOFLO_XDP_FCSFILE_PARAMETERS.setLabel('FCS parameters')\nprop_type_MOFLO_XDP_FCSFILE_PARAMETERS.setManagedInternally(False)\nprop_type_MOFLO_XDP_FCSFILE_PARAMETERS.setInternalNamespace(False)\n\n# MOFLO_XDP_TUBE_ISINDEXSORT\nprop_type_MOFLO_XDP_TUBE_ISINDEXSORT = tr.getOrCreateNewPropertyType('MOFLO_XDP_TUBE_ISINDEXSORT', DataType.BOOLEAN)\nprop_type_MOFLO_XDP_TUBE_ISINDEXSORT.setLabel('Index sort')\nprop_type_MOFLO_XDP_TUBE_ISINDEXSORT.setManagedInternally(False)\nprop_type_MOFLO_XDP_TUBE_ISINDEXSORT.setInternalNamespace(False)\n\n# BIORAD S3E\n# ------------------------------------------------------------------------------\n\n# S3E_EXPERIMENT_ACQ_HARDWARE\nprop_type_S3E_EXPERIMENT_ACQ_HARDWARE = tr.getOrCreateNewPropertyType('S3E_EXPERIMENT_ACQ_HARDWARE', DataType.VARCHAR)\nprop_type_S3E_EXPERIMENT_ACQ_HARDWARE.setLabel('Acquisition hardware')\nprop_type_S3E_EXPERIMENT_ACQ_HARDWARE.setManagedInternally(False)\nprop_type_S3E_EXPERIMENT_ACQ_HARDWARE.setInternalNamespace(False)\n\n# S3E_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nprop_type_S3E_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.getOrCreateNewPropertyType('S3E_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME', DataType.VARCHAR)\nprop_type_S3E_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setLabel('Acquisition station name')\nprop_type_S3E_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setManagedInternally(False)\nprop_type_S3E_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setInternalNamespace(False)\n\n# S3E_EXPERIMENT_ACQ_SOFTWARE\nprop_type_S3E_EXPERIMENT_ACQ_SOFTWARE = tr.getOrCreateNewPropertyType('S3E_EXPERIMENT_ACQ_SOFTWARE', DataType.VARCHAR)\nprop_type_S3E_EXPERIMENT_ACQ_SOFTWARE.setLabel('Acquisition software')\nprop_type_S3E_EXPERIMENT_ACQ_SOFTWARE.setManagedInternally(False)\nprop_type_S3E_EXPERIMENT_ACQ_SOFTWARE.setInternalNamespace(False)\n\n# S3E_EXPERIMENT_DATE\nprop_type_S3E_EXPERIMENT_DATE = tr.getOrCreateNewPropertyType('S3E_EXPERIMENT_DATE', DataType.TIMESTAMP)\nprop_type_S3E_EXPERIMENT_DATE.setLabel('Experiment date')\nprop_type_S3E_EXPERIMENT_DATE.setManagedInternally(False)\nprop_type_S3E_EXPERIMENT_DATE.setInternalNamespace(False)\n\n# S3E_EXPERIMENT_DESCRIPTION\nprop_type_S3E_EXPERIMENT_DESCRIPTION = tr.getOrCreateNewPropertyType('S3E_EXPERIMENT_DESCRIPTION', DataType.MULTILINE_VARCHAR)\nprop_type_S3E_EXPERIMENT_DESCRIPTION.setLabel('Description')\nprop_type_S3E_EXPERIMENT_DESCRIPTION.setManagedInternally(False)\nprop_type_S3E_EXPERIMENT_DESCRIPTION.setInternalNamespace(False)\n\n# S3E_EXPERIMENT_NAME\nprop_type_S3E_EXPERIMENT_NAME = tr.getOrCreateNewPropertyType('S3E_EXPERIMENT_NAME', DataType.VARCHAR)\nprop_type_S3E_EXPERIMENT_NAME.setLabel('Experiment name')\nprop_type_S3E_EXPERIMENT_NAME.setManagedInternally(False)\nprop_type_S3E_EXPERIMENT_NAME.setInternalNamespace(False)\n\n# S3E_EXPERIMENT_OWNER\nprop_type_S3E_EXPERIMENT_OWNER = tr.getOrCreateNewPropertyType('S3E_EXPERIMENT_OWNER', DataType.VARCHAR)\nprop_type_S3E_EXPERIMENT_OWNER.setLabel('Owner')\nprop_type_S3E_EXPERIMENT_OWNER.setManagedInternally(False)\nprop_type_S3E_EXPERIMENT_OWNER.setInternalNamespace(False)\n\n# S3E_EXPERIMENT_VERSION\nprop_type_S3E_EXPERIMENT_VERSION = tr.getOrCreateNewPropertyType('S3E_EXPERIMENT_VERSION', DataType.INTEGER)\nprop_type_S3E_EXPERIMENT_VERSION.setLabel('Version')\nprop_type_S3E_EXPERIMENT_VERSION.setManagedInternally(False)\nprop_type_S3E_EXPERIMENT_VERSION.setInternalNamespace(False)\n\n# S3E_FCSFILE_ACQ_DATE\nprop_type_S3E_FCSFILE_ACQ_DATE = tr.getOrCreateNewPropertyType('S3E_FCSFILE_ACQ_DATE', DataType.TIMESTAMP)\nprop_type_S3E_FCSFILE_ACQ_DATE.setLabel('Acquisition date')\nprop_type_S3E_FCSFILE_ACQ_DATE.setManagedInternally(False)\nprop_type_S3E_FCSFILE_ACQ_DATE.setInternalNamespace(False)\n\n# S3E_FCSFILE_PARAMETERS\nprop_type_S3E_FCSFILE_PARAMETERS = tr.getOrCreateNewPropertyType('S3E_FCSFILE_PARAMETERS', DataType.MULTILINE_VARCHAR)\nprop_type_S3E_FCSFILE_PARAMETERS.setLabel('FCS parameters')\nprop_type_S3E_FCSFILE_PARAMETERS.setManagedInternally(False)\nprop_type_S3E_FCSFILE_PARAMETERS.setInternalNamespace(False)\n\n# S3E_TUBE_ISINDEXSORT\nprop_type_S3E_TUBE_ISINDEXSORT = tr.getOrCreateNewPropertyType('S3E_TUBE_ISINDEXSORT', DataType.BOOLEAN)\nprop_type_S3E_TUBE_ISINDEXSORT.setLabel('Index sort')\nprop_type_S3E_TUBE_ISINDEXSORT.setManagedInternally(False)\nprop_type_S3E_TUBE_ISINDEXSORT.setInternalNamespace(False)\n\n# SONY SH800S\n# ------------------------------------------------------------------------------\n\n# SONY_SH800S_EXPERIMENT_ACQ_HARDWARE\nprop_type_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE = tr.getOrCreateNewPropertyType('SONY_SH800S_EXPERIMENT_ACQ_HARDWARE', DataType.VARCHAR)\nprop_type_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE.setLabel('Acquisition hardware')\nprop_type_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE.setManagedInternally(False)\nprop_type_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE.setInternalNamespace(False)\n\n# SONY_SH800S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nprop_type_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.getOrCreateNewPropertyType('SONY_SH800S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME', DataType.VARCHAR)\nprop_type_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setLabel('Acquisition station name')\nprop_type_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setManagedInternally(False)\nprop_type_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setInternalNamespace(False)\n\n# SONY_SH800S_EXPERIMENT_ACQ_SOFTWARE\nprop_type_SONY_SH800S_EXPERIMENT_ACQ_SOFTWARE = tr.getOrCreateNewPropertyType('SONY_SH800S_EXPERIMENT_ACQ_SOFTWARE', DataType.VARCHAR)\nprop_type_SONY_SH800S_EXPERIMENT_ACQ_SOFTWARE.setLabel('Acquisition software')\nprop_type_SONY_SH800S_EXPERIMENT_ACQ_SOFTWARE.setManagedInternally(False)\nprop_type_SONY_SH800S_EXPERIMENT_ACQ_SOFTWARE.setInternalNamespace(False)\n\n# SONY_SH800S_EXPERIMENT_DATE\nprop_type_SONY_SH800S_EXPERIMENT_DATE = tr.getOrCreateNewPropertyType('SONY_SH800S_EXPERIMENT_DATE', DataType.TIMESTAMP)\nprop_type_SONY_SH800S_EXPERIMENT_DATE.setLabel('Experiment date')\nprop_type_SONY_SH800S_EXPERIMENT_DATE.setManagedInternally(False)\nprop_type_SONY_SH800S_EXPERIMENT_DATE.setInternalNamespace(False)\n\n# SONY_SH800S_EXPERIMENT_DESCRIPTION\nprop_type_SONY_SH800S_EXPERIMENT_DESCRIPTION = tr.getOrCreateNewPropertyType('SONY_SH800S_EXPERIMENT_DESCRIPTION', DataType.MULTILINE_VARCHAR)\nprop_type_SONY_SH800S_EXPERIMENT_DESCRIPTION.setLabel('Description')\nprop_type_SONY_SH800S_EXPERIMENT_DESCRIPTION.setManagedInternally(False)\nprop_type_SONY_SH800S_EXPERIMENT_DESCRIPTION.setInternalNamespace(False)\n\n# SONY_SH800S_EXPERIMENT_NAME\nprop_type_SONY_SH800S_EXPERIMENT_NAME = tr.getOrCreateNewPropertyType('SONY_SH800S_EXPERIMENT_NAME', DataType.VARCHAR)\nprop_type_SONY_SH800S_EXPERIMENT_NAME.setLabel('Experiment name')\nprop_type_SONY_SH800S_EXPERIMENT_NAME.setManagedInternally(False)\nprop_type_SONY_SH800S_EXPERIMENT_NAME.setInternalNamespace(False)\n\n# SONY_SH800S_EXPERIMENT_OWNER\nprop_type_SONY_SH800S_EXPERIMENT_OWNER = tr.getOrCreateNewPropertyType('SONY_SH800S_EXPERIMENT_OWNER', DataType.VARCHAR)\nprop_type_SONY_SH800S_EXPERIMENT_OWNER.setLabel('Owner')\nprop_type_SONY_SH800S_EXPERIMENT_OWNER.setManagedInternally(False)\nprop_type_SONY_SH800S_EXPERIMENT_OWNER.setInternalNamespace(False)\n\n# SONY_SH800S_EXPERIMENT_VERSION\nprop_type_SONY_SH800S_EXPERIMENT_VERSION = tr.getOrCreateNewPropertyType('SONY_SH800S_EXPERIMENT_VERSION', DataType.INTEGER)\nprop_type_SONY_SH800S_EXPERIMENT_VERSION.setLabel('Version')\nprop_type_SONY_SH800S_EXPERIMENT_VERSION.setManagedInternally(False)\nprop_type_SONY_SH800S_EXPERIMENT_VERSION.setInternalNamespace(False)\n\n# SONY_SH800S_FCSFILE_ACQ_DATE\nprop_type_SONY_SH800S_FCSFILE_ACQ_DATE = tr.getOrCreateNewPropertyType('SONY_SH800S_FCSFILE_ACQ_DATE', DataType.TIMESTAMP)\nprop_type_SONY_SH800S_FCSFILE_ACQ_DATE.setLabel('Acquisition date')\nprop_type_SONY_SH800S_FCSFILE_ACQ_DATE.setManagedInternally(False)\nprop_type_SONY_SH800S_FCSFILE_ACQ_DATE.setInternalNamespace(False)\n\n# SONY_SH800S_FCSFILE_PARAMETERS\nprop_type_SONY_SH800S_FCSFILE_PARAMETERS = tr.getOrCreateNewPropertyType('SONY_SH800S_FCSFILE_PARAMETERS', DataType.MULTILINE_VARCHAR)\nprop_type_SONY_SH800S_FCSFILE_PARAMETERS.setLabel('FCS parameters')\nprop_type_SONY_SH800S_FCSFILE_PARAMETERS.setManagedInternally(False)\nprop_type_SONY_SH800S_FCSFILE_PARAMETERS.setInternalNamespace(False)\n\n# SONY_SH800S_TUBE_ISINDEXSORT\nprop_type_SONY_SH800S_TUBE_ISINDEXSORT = tr.getOrCreateNewPropertyType('SONY_SH800S_TUBE_ISINDEXSORT', DataType.BOOLEAN)\nprop_type_SONY_SH800S_TUBE_ISINDEXSORT.setLabel('Index sort')\nprop_type_SONY_SH800S_TUBE_ISINDEXSORT.setManagedInternally(False)\nprop_type_SONY_SH800S_TUBE_ISINDEXSORT.setInternalNamespace(False)\n\n# SONY MA900\n# ------------------------------------------------------------------------------\n\n# SONY_MA900_EXPERIMENT_ACQ_HARDWARE\nprop_type_SONY_MA900_EXPERIMENT_ACQ_HARDWARE = tr.getOrCreateNewPropertyType('SONY_MA900_EXPERIMENT_ACQ_HARDWARE', DataType.VARCHAR)\nprop_type_SONY_MA900_EXPERIMENT_ACQ_HARDWARE.setLabel('Acquisition hardware')\nprop_type_SONY_MA900_EXPERIMENT_ACQ_HARDWARE.setManagedInternally(False)\nprop_type_SONY_MA900_EXPERIMENT_ACQ_HARDWARE.setInternalNamespace(False)\n\n# SONY_MA900_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nprop_type_SONY_MA900_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.getOrCreateNewPropertyType('SONY_MA900_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME', DataType.VARCHAR)\nprop_type_SONY_MA900_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setLabel('Acquisition station name')\nprop_type_SONY_MA900_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setManagedInternally(False)\nprop_type_SONY_MA900_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setInternalNamespace(False)\n\n# SONY_MA900_EXPERIMENT_ACQ_SOFTWARE\nprop_type_SONY_MA900_EXPERIMENT_ACQ_SOFTWARE = tr.getOrCreateNewPropertyType('SONY_MA900_EXPERIMENT_ACQ_SOFTWARE', DataType.VARCHAR)\nprop_type_SONY_MA900_EXPERIMENT_ACQ_SOFTWARE.setLabel('Acquisition software')\nprop_type_SONY_MA900_EXPERIMENT_ACQ_SOFTWARE.setManagedInternally(False)\nprop_type_SONY_MA900_EXPERIMENT_ACQ_SOFTWARE.setInternalNamespace(False)\n\n# SONY_MA900_EXPERIMENT_DATE\nprop_type_SONY_MA900_EXPERIMENT_DATE = tr.getOrCreateNewPropertyType('SONY_MA900_EXPERIMENT_DATE', DataType.TIMESTAMP)\nprop_type_SONY_MA900_EXPERIMENT_DATE.setLabel('Experiment date')\nprop_type_SONY_MA900_EXPERIMENT_DATE.setManagedInternally(False)\nprop_type_SONY_MA900_EXPERIMENT_DATE.setInternalNamespace(False)\n\n# SONY_MA900_EXPERIMENT_DESCRIPTION\nprop_type_SONY_MA900_EXPERIMENT_DESCRIPTION = tr.getOrCreateNewPropertyType('SONY_MA900_EXPERIMENT_DESCRIPTION', DataType.MULTILINE_VARCHAR)\nprop_type_SONY_MA900_EXPERIMENT_DESCRIPTION.setLabel('Description')\nprop_type_SONY_MA900_EXPERIMENT_DESCRIPTION.setManagedInternally(False)\nprop_type_SONY_MA900_EXPERIMENT_DESCRIPTION.setInternalNamespace(False)\n\n# SONY_MA900_EXPERIMENT_NAME\nprop_type_SONY_MA900_EXPERIMENT_NAME = tr.getOrCreateNewPropertyType('SONY_MA900_EXPERIMENT_NAME', DataType.VARCHAR)\nprop_type_SONY_MA900_EXPERIMENT_NAME.setLabel('Experiment name')\nprop_type_SONY_MA900_EXPERIMENT_NAME.setManagedInternally(False)\nprop_type_SONY_MA900_EXPERIMENT_NAME.setInternalNamespace(False)\n\n# SONY_MA900_EXPERIMENT_OWNER\nprop_type_SONY_MA900_EXPERIMENT_OWNER = tr.getOrCreateNewPropertyType('SONY_MA900_EXPERIMENT_OWNER', DataType.VARCHAR)\nprop_type_SONY_MA900_EXPERIMENT_OWNER.setLabel('Owner')\nprop_type_SONY_MA900_EXPERIMENT_OWNER.setManagedInternally(False)\nprop_type_SONY_MA900_EXPERIMENT_OWNER.setInternalNamespace(False)\n\n# SONY_MA900_EXPERIMENT_VERSION\nprop_type_SONY_MA900_EXPERIMENT_VERSION = tr.getOrCreateNewPropertyType('SONY_MA900_EXPERIMENT_VERSION', DataType.INTEGER)\nprop_type_SONY_MA900_EXPERIMENT_VERSION.setLabel('Version')\nprop_type_SONY_MA900_EXPERIMENT_VERSION.setManagedInternally(False)\nprop_type_SONY_MA900_EXPERIMENT_VERSION.setInternalNamespace(False)\n\n# SONY_MA900_FCSFILE_ACQ_DATE\nprop_type_SONY_MA900_FCSFILE_ACQ_DATE = tr.getOrCreateNewPropertyType('SONY_MA900_FCSFILE_ACQ_DATE', DataType.TIMESTAMP)\nprop_type_SONY_MA900_FCSFILE_ACQ_DATE.setLabel('Acquisition date')\nprop_type_SONY_MA900_FCSFILE_ACQ_DATE.setManagedInternally(False)\nprop_type_SONY_MA900_FCSFILE_ACQ_DATE.setInternalNamespace(False)\n\n# SONY_MA900_FCSFILE_PARAMETERS\nprop_type_SONY_MA900_FCSFILE_PARAMETERS = tr.getOrCreateNewPropertyType('SONY_MA900_FCSFILE_PARAMETERS', DataType.MULTILINE_VARCHAR)\nprop_type_SONY_MA900_FCSFILE_PARAMETERS.setLabel('FCS parameters')\nprop_type_SONY_MA900_FCSFILE_PARAMETERS.setManagedInternally(False)\nprop_type_SONY_MA900_FCSFILE_PARAMETERS.setInternalNamespace(False)\n\n# SONY_MA900_TUBE_ISINDEXSORT\nprop_type_SONY_MA900_TUBE_ISINDEXSORT = tr.getOrCreateNewPropertyType('SONY_MA900_TUBE_ISINDEXSORT', DataType.BOOLEAN)\nprop_type_SONY_MA900_TUBE_ISINDEXSORT.setLabel('Index sort')\nprop_type_SONY_MA900_TUBE_ISINDEXSORT.setManagedInternally(False)\nprop_type_SONY_MA900_TUBE_ISINDEXSORT.setInternalNamespace(False)\n\n# ==============================================================================\n#\n# PROPERTY ASSIGNMENTS\n#\n# ==============================================================================\n\n# COMMON\n# ------------------------------------------------------------------------------\n\n# DATA_SET_ATTACHMENT_NAME\nassignment_DATA_SET_ATTACHMENT_NAME = tr.assignPropertyType(data_set_type_ATTACHMENT, prop_type_NAME)\nassignment_DATA_SET_ATTACHMENT_NAME.setMandatory(False)\nassignment_DATA_SET_ATTACHMENT_NAME.setSection(None)\nassignment_DATA_SET_ATTACHMENT_NAME.setPositionInForms(1)\nassignment_DATA_SET_ATTACHMENT_NAME.setShownEdit(False)\n\n# DATA_SET_ATTACHMENT_DESCRIPTION\nassignment_DATA_SET_ATTACHMENT_DESCRIPTION = tr.assignPropertyType(data_set_type_ATTACHMENT, prop_type_DESCRIPTION)\nassignment_DATA_SET_ATTACHMENT_DESCRIPTION.setMandatory(False)\nassignment_DATA_SET_ATTACHMENT_DESCRIPTION.setSection(None)\nassignment_DATA_SET_ATTACHMENT_DESCRIPTION.setPositionInForms(2)\nassignment_DATA_SET_ATTACHMENT_DESCRIPTION.setShownEdit(False)\n\n# DATA_SET_ATTACHMENT_NOTES\nassignment_DATA_SET_ATTACHMENT_NOTES = tr.assignPropertyType(data_set_type_ATTACHMENT, prop_type_NOTES)\nassignment_DATA_SET_ATTACHMENT_NOTES.setMandatory(False)\nassignment_DATA_SET_ATTACHMENT_NOTES.setSection(None)\nassignment_DATA_SET_ATTACHMENT_NOTES.setPositionInForms(3)\nassignment_DATA_SET_ATTACHMENT_NOTES.setShownEdit(False)\n\n# DATA_SET_ATTACHMENT_XMLCOMMENTS\nassignment_DATA_SET_ATTACHMENT_XMLCOMMENTS = tr.assignPropertyType(data_set_type_ATTACHMENT, prop_type_XMLCOMMENTS)\nassignment_DATA_SET_ATTACHMENT_XMLCOMMENTS.setMandatory(False)\nassignment_DATA_SET_ATTACHMENT_XMLCOMMENTS.setSection(None)\nassignment_DATA_SET_ATTACHMENT_XMLCOMMENTS.setPositionInForms(4)\nassignment_DATA_SET_ATTACHMENT_XMLCOMMENTS.setShownEdit(False)\n\n# EXPERIMENT_COLLECTION_NAME\nassignment_EXPERIMENT_COLLECTION_NAME = tr.assignPropertyType(exp_type_COLLECTION, prop_type_NAME)\nassignment_EXPERIMENT_COLLECTION_NAME.setMandatory(False)\nassignment_EXPERIMENT_COLLECTION_NAME.setSection(None)\nassignment_EXPERIMENT_COLLECTION_NAME.setPositionInForms(1)\nassignment_EXPERIMENT_COLLECTION_NAME.setShownEdit(False)\n\n# EXPERIMENT_COLLECTION_DEFAULT_OBJECT_TYPE\nassignment_EXPERIMENT_COLLECTION_DEFAULT_OBJECT_TYPE = tr.assignPropertyType(exp_type_COLLECTION, prop_type_DEFAULT_OBJECT_TYPE)\nassignment_EXPERIMENT_COLLECTION_DEFAULT_OBJECT_TYPE.setMandatory(False)\nassignment_EXPERIMENT_COLLECTION_DEFAULT_OBJECT_TYPE.setSection(None)\nassignment_EXPERIMENT_COLLECTION_DEFAULT_OBJECT_TYPE.setPositionInForms(2)\nassignment_EXPERIMENT_COLLECTION_DEFAULT_OBJECT_TYPE.setShownEdit(False)\n\n# SAMPLE_ORGANIZATION_UNIT_NAME\nassignment_SAMPLE_ORGANIZATION_UNIT_NAME = tr.assignPropertyType(samp_type_ORGANIZATION_UNIT, prop_type_NAME)\nassignment_SAMPLE_ORGANIZATION_UNIT_NAME.setMandatory(False)\nassignment_SAMPLE_ORGANIZATION_UNIT_NAME.setSection(None)\nassignment_SAMPLE_ORGANIZATION_UNIT_NAME.setPositionInForms(1)\nassignment_SAMPLE_ORGANIZATION_UNIT_NAME.setShownEdit(False)\n\n# SAMPLE_ORGANIZATION_UNIT_DESCRIPTION\nassignment_SAMPLE_ORGANIZATION_UNIT_DESCRIPTION = tr.assignPropertyType(samp_type_ORGANIZATION_UNIT, prop_type_DESCRIPTION)\nassignment_SAMPLE_ORGANIZATION_UNIT_DESCRIPTION.setMandatory(False)\nassignment_SAMPLE_ORGANIZATION_UNIT_DESCRIPTION.setSection(None)\nassignment_SAMPLE_ORGANIZATION_UNIT_DESCRIPTION.setPositionInForms(2)\nassignment_SAMPLE_ORGANIZATION_UNIT_DESCRIPTION.setShownEdit(False)\n\n# SAMPLE_ORGANIZATION_UNIT_XMLCOMMENTS\nassignment_SAMPLE_ORGANIZATION_UNIT_XMLCOMMENTS = tr.assignPropertyType(samp_type_ORGANIZATION_UNIT, prop_type_XMLCOMMENTS)\nassignment_SAMPLE_ORGANIZATION_UNIT_XMLCOMMENTS.setMandatory(False)\nassignment_SAMPLE_ORGANIZATION_UNIT_XMLCOMMENTS.setSection(None)\nassignment_SAMPLE_ORGANIZATION_UNIT_XMLCOMMENTS.setPositionInForms(3)\nassignment_SAMPLE_ORGANIZATION_UNIT_XMLCOMMENTS.setShownEdit(False)\n\n# SAMPLE_ORGANIZATION_UNIT_ANNOTATIONS_STATE\nassignment_SAMPLE_ORGANIZATION_UNIT_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_ORGANIZATION_UNIT, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_ORGANIZATION_UNIT_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_ORGANIZATION_UNIT_ANNOTATIONS_STATE.setSection(None)\nassignment_SAMPLE_ORGANIZATION_UNIT_ANNOTATIONS_STATE.setPositionInForms(4)\nassignment_SAMPLE_ORGANIZATION_UNIT_ANNOTATIONS_STATE.setShownEdit(False)\n\n# BD FACS ARIA\n# ------------------------------------------------------------------------------\n\n# SAMPLE_FACS_ARIA_EXPERIMENT_NAME\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_FACS_ARIA_EXPERIMENT, prop_type_NAME)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_NAME.setSection('General Info')\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_NAME.setPositionInForms(1)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_NAME.setShownEdit(False)\n\n# SAMPLE_FACS_ARIA_EXPERIMENT_ANNOTATIONS_STATE\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_FACS_ARIA_EXPERIMENT, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_ANNOTATIONS_STATE.setSection('General Info')\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_ANNOTATIONS_STATE.setShownEdit(False)\n\n# SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_NAME\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_FACS_ARIA_EXPERIMENT, prop_type_FACS_ARIA_EXPERIMENT_NAME)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_NAME.setSection(None)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_NAME.setPositionInForms(3)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_NAME.setShownEdit(False)\n\n# SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_DATE\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_DATE = tr.assignPropertyType(samp_type_FACS_ARIA_EXPERIMENT, prop_type_FACS_ARIA_EXPERIMENT_DATE)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_DATE.setMandatory(False)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_DATE.setSection(None)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_DATE.setPositionInForms(4)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_DATE.setShownEdit(False)\n\n# SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_DESCRIPTION\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_DESCRIPTION = tr.assignPropertyType(samp_type_FACS_ARIA_EXPERIMENT, prop_type_FACS_ARIA_EXPERIMENT_DESCRIPTION)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_DESCRIPTION.setMandatory(False)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_DESCRIPTION.setSection(None)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_DESCRIPTION.setPositionInForms(5)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_DESCRIPTION.setShownEdit(True)\n\n# SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE = tr.assignPropertyType(samp_type_FACS_ARIA_EXPERIMENT, prop_type_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE.setMandatory(False)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE.setSection(None)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE.setPositionInForms(6)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE.setShownEdit(False)\n\n# SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_SOFTWARE\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_SOFTWARE = tr.assignPropertyType(samp_type_FACS_ARIA_EXPERIMENT, prop_type_FACS_ARIA_EXPERIMENT_ACQ_SOFTWARE)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_SOFTWARE.setMandatory(False)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_SOFTWARE.setSection(None)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_SOFTWARE.setPositionInForms(7)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_SOFTWARE.setShownEdit(False)\n\n# SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_VERSION\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_VERSION = tr.assignPropertyType(samp_type_FACS_ARIA_EXPERIMENT, prop_type_FACS_ARIA_EXPERIMENT_VERSION)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_VERSION.setMandatory(False)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_VERSION.setSection(None)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_VERSION.setPositionInForms(8)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_VERSION.setShownEdit(False)\n\n# SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_OWNER\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_OWNER = tr.assignPropertyType(samp_type_FACS_ARIA_EXPERIMENT, prop_type_FACS_ARIA_EXPERIMENT_OWNER)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_OWNER.setMandatory(False)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_OWNER.setSection(None)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_OWNER.setPositionInForms(9)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_OWNER.setShownEdit(False)\n\n# SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.assignPropertyType(samp_type_FACS_ARIA_EXPERIMENT, prop_type_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setMandatory(False)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setSection(None)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setPositionInForms(10)\nassignment_SAMPLE_FACS_ARIA_EXPERIMENT_FACS_ARIA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setShownEdit(True)\n\n# DATA_SET_FACS_ARIA_FCSFILE_FACS_ARIA_FCSFILE_PARAMETERS\nassignment_DATA_SET_FACS_ARIA_FCSFILE_FACS_ARIA_FCSFILE_PARAMETERS = tr.assignPropertyType(data_set_type_FACS_ARIA_FCSFILE, prop_type_FACS_ARIA_FCSFILE_PARAMETERS)\nassignment_DATA_SET_FACS_ARIA_FCSFILE_FACS_ARIA_FCSFILE_PARAMETERS.setMandatory(False)\nassignment_DATA_SET_FACS_ARIA_FCSFILE_FACS_ARIA_FCSFILE_PARAMETERS.setSection(None)\nassignment_DATA_SET_FACS_ARIA_FCSFILE_FACS_ARIA_FCSFILE_PARAMETERS.setPositionInForms(2)\nassignment_DATA_SET_FACS_ARIA_FCSFILE_FACS_ARIA_FCSFILE_PARAMETERS.setShownEdit(False)\n\n# DATA_SET_FACS_ARIA_FCSFILE_FACS_ARIA_FCSFILE_ACQ_DATE\nassignment_DATA_SET_FACS_ARIA_FCSFILE_FACS_ARIA_FCSFILE_ACQ_DATE = tr.assignPropertyType(data_set_type_FACS_ARIA_FCSFILE, prop_type_FACS_ARIA_FCSFILE_ACQ_DATE)\nassignment_DATA_SET_FACS_ARIA_FCSFILE_FACS_ARIA_FCSFILE_ACQ_DATE.setMandatory(False)\nassignment_DATA_SET_FACS_ARIA_FCSFILE_FACS_ARIA_FCSFILE_ACQ_DATE.setSection(None)\nassignment_DATA_SET_FACS_ARIA_FCSFILE_FACS_ARIA_FCSFILE_ACQ_DATE.setPositionInForms(3)\nassignment_DATA_SET_FACS_ARIA_FCSFILE_FACS_ARIA_FCSFILE_ACQ_DATE.setShownEdit(False)\n\n# DATA_SET_FACS_ARIA_FCSFILE_NAME\nassignment_DATA_SET_FACS_ARIA_FCSFILE_NAME = tr.assignPropertyType(data_set_type_FACS_ARIA_FCSFILE, prop_type_NAME)\nassignment_DATA_SET_FACS_ARIA_FCSFILE_NAME.setMandatory(False)\nassignment_DATA_SET_FACS_ARIA_FCSFILE_NAME.setSection(None)\nassignment_DATA_SET_FACS_ARIA_FCSFILE_NAME.setPositionInForms(3)\nassignment_DATA_SET_FACS_ARIA_FCSFILE_NAME.setShownEdit(False)\n\n# SAMPLE_FACS_ARIA_SPECIMEN_NAME\nassignment_SAMPLE_FACS_ARIA_SPECIMEN_NAME = tr.assignPropertyType(samp_type_FACS_ARIA_SPECIMEN, prop_type_NAME)\nassignment_SAMPLE_FACS_ARIA_SPECIMEN_NAME.setMandatory(False)\nassignment_SAMPLE_FACS_ARIA_SPECIMEN_NAME.setSection('General Info')\nassignment_SAMPLE_FACS_ARIA_SPECIMEN_NAME.setPositionInForms(1)\nassignment_SAMPLE_FACS_ARIA_SPECIMEN_NAME.setShownEdit(True)\n\n# SAMPLE_FACS_ARIA_SPECIMEN_ANNOTATIONS_STATE\nassignment_SAMPLE_FACS_ARIA_SPECIMEN_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_FACS_ARIA_SPECIMEN, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_FACS_ARIA_SPECIMEN_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_FACS_ARIA_SPECIMEN_ANNOTATIONS_STATE.setSection('General Info')\nassignment_SAMPLE_FACS_ARIA_SPECIMEN_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_FACS_ARIA_SPECIMEN_ANNOTATIONS_STATE.setShownEdit(False)\n\n# SAMPLE_FACS_ARIA_TUBE_NAME\nassignment_SAMPLE_FACS_ARIA_TUBE_NAME = tr.assignPropertyType(samp_type_FACS_ARIA_TUBE, prop_type_NAME)\nassignment_SAMPLE_FACS_ARIA_TUBE_NAME.setMandatory(False)\nassignment_SAMPLE_FACS_ARIA_TUBE_NAME.setSection('General Info')\nassignment_SAMPLE_FACS_ARIA_TUBE_NAME.setPositionInForms(1)\nassignment_SAMPLE_FACS_ARIA_TUBE_NAME.setShownEdit(True)\n\n# SAMPLE_FACS_ARIA_TUBE_FACS_ARIA_TUBE_ISINDEXSORT\nassignment_SAMPLE_FACS_ARIA_TUBE_FACS_ARIA_TUBE_ISINDEXSORT = tr.assignPropertyType(samp_type_FACS_ARIA_TUBE, prop_type_FACS_ARIA_TUBE_ISINDEXSORT)\nassignment_SAMPLE_FACS_ARIA_TUBE_FACS_ARIA_TUBE_ISINDEXSORT.setMandatory(False)\nassignment_SAMPLE_FACS_ARIA_TUBE_FACS_ARIA_TUBE_ISINDEXSORT.setSection(None)\nassignment_SAMPLE_FACS_ARIA_TUBE_FACS_ARIA_TUBE_ISINDEXSORT.setPositionInForms(3)\nassignment_SAMPLE_FACS_ARIA_TUBE_FACS_ARIA_TUBE_ISINDEXSORT.setShownEdit(False)\n\n# DATA_SET_FACS_ARIA_ACCESSORY_FILE_NAME\nassignment_DATA_SET_FACS_ARIA_ACCESSORY_FILE_NAME = tr.assignPropertyType(data_set_type_FACS_ARIA_ACCESSORY_FILE, prop_type_NAME)\nassignment_DATA_SET_FACS_ARIA_ACCESSORY_FILE_NAME.setMandatory(False)\nassignment_DATA_SET_FACS_ARIA_ACCESSORY_FILE_NAME.setSection(None)\nassignment_DATA_SET_FACS_ARIA_ACCESSORY_FILE_NAME.setPositionInForms(1)\nassignment_DATA_SET_FACS_ARIA_ACCESSORY_FILE_NAME.setShownEdit(False)\n\n# BD INFLUX\n# ------------------------------------------------------------------------------\n\n# SAMPLE_INFLUX_EXPERIMENT_NAME\nassignment_SAMPLE_INFLUX_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_INFLUX_EXPERIMENT, prop_type_NAME)\nassignment_SAMPLE_INFLUX_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_INFLUX_EXPERIMENT_NAME.setSection('General Info')\nassignment_SAMPLE_INFLUX_EXPERIMENT_NAME.setPositionInForms(1)\nassignment_SAMPLE_INFLUX_EXPERIMENT_NAME.setShownEdit(True)\n\n# SAMPLE_INFLUX_EXPERIMENT_ANNOTATIONS_STATE\nassignment_SAMPLE_INFLUX_EXPERIMENT_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_INFLUX_EXPERIMENT, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_INFLUX_EXPERIMENT_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_INFLUX_EXPERIMENT_ANNOTATIONS_STATE.setSection('General Info')\nassignment_SAMPLE_INFLUX_EXPERIMENT_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_INFLUX_EXPERIMENT_ANNOTATIONS_STATE.setShownEdit(False)\n\n# SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_DESCRIPTION\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_DESCRIPTION = tr.assignPropertyType(samp_type_INFLUX_EXPERIMENT, prop_type_INFLUX_EXPERIMENT_DESCRIPTION)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_DESCRIPTION.setMandatory(False)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_DESCRIPTION.setSection(None)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_DESCRIPTION.setPositionInForms(3)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_DESCRIPTION.setShownEdit(True)\n\n# SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_NAME\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_INFLUX_EXPERIMENT, prop_type_INFLUX_EXPERIMENT_NAME)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_NAME.setSection(None)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_NAME.setPositionInForms(4)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_NAME.setShownEdit(False)\n\n# SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_DATE\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_DATE = tr.assignPropertyType(samp_type_INFLUX_EXPERIMENT, prop_type_INFLUX_EXPERIMENT_DATE)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_DATE.setMandatory(False)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_DATE.setSection(None)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_DATE.setPositionInForms(5)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_DATE.setShownEdit(True)\n\n# SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_HARDWARE\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_HARDWARE = tr.assignPropertyType(samp_type_INFLUX_EXPERIMENT, prop_type_INFLUX_EXPERIMENT_ACQ_HARDWARE)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_HARDWARE.setMandatory(False)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_HARDWARE.setSection(None)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_HARDWARE.setPositionInForms(6)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_HARDWARE.setShownEdit(False)\n\n# SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_SOFTWARE\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_SOFTWARE = tr.assignPropertyType(samp_type_INFLUX_EXPERIMENT, prop_type_INFLUX_EXPERIMENT_ACQ_SOFTWARE)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_SOFTWARE.setMandatory(False)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_SOFTWARE.setSection(None)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_SOFTWARE.setPositionInForms(7)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_SOFTWARE.setShownEdit(False)\n\n# SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_OWNER\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_OWNER = tr.assignPropertyType(samp_type_INFLUX_EXPERIMENT, prop_type_INFLUX_EXPERIMENT_OWNER)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_OWNER.setMandatory(False)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_OWNER.setSection(None)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_OWNER.setPositionInForms(8)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_OWNER.setShownEdit(True)\n\n# SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.assignPropertyType(samp_type_INFLUX_EXPERIMENT, prop_type_INFLUX_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setMandatory(False)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setSection(None)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setPositionInForms(9)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setShownEdit(True)\n\n# SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_VERSION\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_VERSION = tr.assignPropertyType(samp_type_INFLUX_EXPERIMENT, prop_type_INFLUX_EXPERIMENT_VERSION)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_VERSION.setMandatory(False)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_VERSION.setSection(None)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_VERSION.setPositionInForms(10)\nassignment_SAMPLE_INFLUX_EXPERIMENT_INFLUX_EXPERIMENT_VERSION.setShownEdit(False)\n\n# DATA_SET_INFLUX_FCSFILE_INFLUX_FCSFILE_PARAMETERS\nassignment_DATA_SET_INFLUX_FCSFILE_INFLUX_FCSFILE_PARAMETERS = tr.assignPropertyType(data_set_type_INFLUX_FCSFILE, prop_type_INFLUX_FCSFILE_PARAMETERS)\nassignment_DATA_SET_INFLUX_FCSFILE_INFLUX_FCSFILE_PARAMETERS.setMandatory(False)\nassignment_DATA_SET_INFLUX_FCSFILE_INFLUX_FCSFILE_PARAMETERS.setSection(None)\nassignment_DATA_SET_INFLUX_FCSFILE_INFLUX_FCSFILE_PARAMETERS.setPositionInForms(2)\nassignment_DATA_SET_INFLUX_FCSFILE_INFLUX_FCSFILE_PARAMETERS.setShownEdit(False)\n\n# DATA_SET_INFLUX_FCSFILE_INFLUX_FCSFILE_ACQ_DATE\nassignment_DATA_SET_INFLUX_FCSFILE_INFLUX_FCSFILE_ACQ_DATE = tr.assignPropertyType(data_set_type_INFLUX_FCSFILE, prop_type_INFLUX_FCSFILE_ACQ_DATE)\nassignment_DATA_SET_INFLUX_FCSFILE_INFLUX_FCSFILE_ACQ_DATE.setMandatory(False)\nassignment_DATA_SET_INFLUX_FCSFILE_INFLUX_FCSFILE_ACQ_DATE.setSection(None)\nassignment_DATA_SET_INFLUX_FCSFILE_INFLUX_FCSFILE_ACQ_DATE.setPositionInForms(3)\nassignment_DATA_SET_INFLUX_FCSFILE_INFLUX_FCSFILE_ACQ_DATE.setShownEdit(False)\n\n# DATA_SET_INFLUX_FCSFILE_NAME\nassignment_DATA_SET_NFLUX_FCSFILE_NAME = tr.assignPropertyType(data_set_type_INFLUX_FCSFILE, prop_type_NAME)\nassignment_DATA_SET_NFLUX_FCSFILE_NAME.setMandatory(False)\nassignment_DATA_SET_NFLUX_FCSFILE_NAME.setSection(None)\nassignment_DATA_SET_NFLUX_FCSFILE_NAME.setPositionInForms(3)\nassignment_DATA_SET_NFLUX_FCSFILE_NAME.setShownEdit(False)\n\n# SAMPLE_INFLUX_SPECIMEN_NAME\nassignment_SAMPLE_INFLUX_SPECIMEN_NAME = tr.assignPropertyType(samp_type_INFLUX_SPECIMEN, prop_type_NAME)\nassignment_SAMPLE_INFLUX_SPECIMEN_NAME.setMandatory(False)\nassignment_SAMPLE_INFLUX_SPECIMEN_NAME.setSection('General Info')\nassignment_SAMPLE_INFLUX_SPECIMEN_NAME.setPositionInForms(1)\nassignment_SAMPLE_INFLUX_SPECIMEN_NAME.setShownEdit(True)\n\n# SAMPLE_INFLUX_SPECIMEN_ANNOTATIONS_STATE\nassignment_SAMPLE_INFLUX_SPECIMEN_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_INFLUX_SPECIMEN, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_INFLUX_SPECIMEN_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_INFLUX_SPECIMEN_ANNOTATIONS_STATE.setSection('General Info')\nassignment_SAMPLE_INFLUX_SPECIMEN_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_INFLUX_SPECIMEN_ANNOTATIONS_STATE.setShownEdit(False)\n\n# SAMPLE_INFLUX_TUBE_NAME\nassignment_SAMPLE_INFLUX_TUBE_NAME = tr.assignPropertyType(samp_type_INFLUX_TUBE, prop_type_NAME)\nassignment_SAMPLE_INFLUX_TUBE_NAME.setMandatory(False)\nassignment_SAMPLE_INFLUX_TUBE_NAME.setSection('General Info')\nassignment_SAMPLE_INFLUX_TUBE_NAME.setPositionInForms(1)\nassignment_SAMPLE_INFLUX_TUBE_NAME.setShownEdit(True)\n\n# SAMPLE_INFLUX_TUBE_INFLUX_TUBE_ISINDEXSORT\nassignment_SAMPLE_INFLUX_TUBE_INFLUX_TUBE_ISINDEXSORT = tr.assignPropertyType(samp_type_INFLUX_TUBE, prop_type_INFLUX_TUBE_ISINDEXSORT)\nassignment_SAMPLE_INFLUX_TUBE_INFLUX_TUBE_ISINDEXSORT.setMandatory(False)\nassignment_SAMPLE_INFLUX_TUBE_INFLUX_TUBE_ISINDEXSORT.setSection(None)\nassignment_SAMPLE_INFLUX_TUBE_INFLUX_TUBE_ISINDEXSORT.setPositionInForms(4)\nassignment_SAMPLE_INFLUX_TUBE_INFLUX_TUBE_ISINDEXSORT.setShownEdit(False)\n\n# DATA_SET_INFLUX_ACCESSORY_FILE_NAME\nassignment_DATA_SET_INFLUX_ACCESSORY_FILE_NAME = tr.assignPropertyType(data_set_type_INFLUX_ACCESSORY_FILE, prop_type_NAME)\nassignment_DATA_SET_INFLUX_ACCESSORY_FILE_NAME.setMandatory(False)\nassignment_DATA_SET_INFLUX_ACCESSORY_FILE_NAME.setSection(None)\nassignment_DATA_SET_INFLUX_ACCESSORY_FILE_NAME.setPositionInForms(1)\nassignment_DATA_SET_INFLUX_ACCESSORY_FILE_NAME.setShownEdit(False)\n\n# BD LSR FORTESSA\n# ------------------------------------------------------------------------------\n\n# SAMPLE_LSR_FORTESSA_EXPERIMENT_NAME\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_LSR_FORTESSA_EXPERIMENT, prop_type_NAME)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_NAME.setSection('General Info')\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_NAME.setPositionInForms(1)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_NAME.setShownEdit(False)\n\n# SAMPLE_LSR_FORTESSA_EXPERIMENT_ANNOTATIONS_STATE\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_LSR_FORTESSA_EXPERIMENT, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_ANNOTATIONS_STATE.setSection('General Info')\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_ANNOTATIONS_STATE.setShownEdit(False)\n\n# SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_NAME\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_LSR_FORTESSA_EXPERIMENT, prop_type_LSR_FORTESSA_EXPERIMENT_NAME)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_NAME.setSection(None)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_NAME.setPositionInForms(3)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_NAME.setShownEdit(False)\n\n# SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_DATE\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_DATE = tr.assignPropertyType(samp_type_LSR_FORTESSA_EXPERIMENT, prop_type_LSR_FORTESSA_EXPERIMENT_DATE)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_DATE.setMandatory(False)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_DATE.setSection(None)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_DATE.setPositionInForms(4)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_DATE.setShownEdit(False)\n\n# SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_DESCRIPTION\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_DESCRIPTION = tr.assignPropertyType(samp_type_LSR_FORTESSA_EXPERIMENT, prop_type_LSR_FORTESSA_EXPERIMENT_DESCRIPTION)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_DESCRIPTION.setMandatory(False)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_DESCRIPTION.setSection(None)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_DESCRIPTION.setPositionInForms(5)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_DESCRIPTION.setShownEdit(True)\n\n# SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE = tr.assignPropertyType(samp_type_LSR_FORTESSA_EXPERIMENT, prop_type_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE.setMandatory(False)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE.setSection(None)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE.setPositionInForms(6)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE.setShownEdit(False)\n\n# SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_SOFTWARE\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_SOFTWARE = tr.assignPropertyType(samp_type_LSR_FORTESSA_EXPERIMENT, prop_type_LSR_FORTESSA_EXPERIMENT_ACQ_SOFTWARE)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_SOFTWARE.setMandatory(False)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_SOFTWARE.setSection(None)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_SOFTWARE.setPositionInForms(7)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_SOFTWARE.setShownEdit(False)\n\n# SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_OWNER\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_OWNER = tr.assignPropertyType(samp_type_LSR_FORTESSA_EXPERIMENT, prop_type_LSR_FORTESSA_EXPERIMENT_OWNER)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_OWNER.setMandatory(False)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_OWNER.setSection(None)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_OWNER.setPositionInForms(8)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_OWNER.setShownEdit(False)\n\n# SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_VERSION\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_VERSION = tr.assignPropertyType(samp_type_LSR_FORTESSA_EXPERIMENT, prop_type_LSR_FORTESSA_EXPERIMENT_VERSION)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_VERSION.setMandatory(False)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_VERSION.setSection(None)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_VERSION.setPositionInForms(9)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_VERSION.setShownEdit(False)\n\n# SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.assignPropertyType(samp_type_LSR_FORTESSA_EXPERIMENT, prop_type_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setMandatory(False)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setSection(None)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setPositionInForms(10)\nassignment_SAMPLE_LSR_FORTESSA_EXPERIMENT_LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setShownEdit(True)\n\n# DATA_SET_LSR_FORTESSA_FCSFILE_LSR_FORTESSA_FCSFILE_PARAMETERS\nassignment_DATA_SET_LSR_FORTESSA_FCSFILE_LSR_FORTESSA_FCSFILE_PARAMETERS = tr.assignPropertyType(data_set_type_LSR_FORTESSA_FCSFILE, prop_type_LSR_FORTESSA_FCSFILE_PARAMETERS)\nassignment_DATA_SET_LSR_FORTESSA_FCSFILE_LSR_FORTESSA_FCSFILE_PARAMETERS.setMandatory(False)\nassignment_DATA_SET_LSR_FORTESSA_FCSFILE_LSR_FORTESSA_FCSFILE_PARAMETERS.setSection(None)\nassignment_DATA_SET_LSR_FORTESSA_FCSFILE_LSR_FORTESSA_FCSFILE_PARAMETERS.setPositionInForms(2)\nassignment_DATA_SET_LSR_FORTESSA_FCSFILE_LSR_FORTESSA_FCSFILE_PARAMETERS.setShownEdit(False)\n\n# DATA_SET_LSR_FORTESSA_FCSFILE_LSR_FORTESSA_FCSFILE_ACQ_DATE\nassignment_DATA_SET_LSR_FORTESSA_FCSFILE_LSR_FORTESSA_FCSFILE_ACQ_DATE = tr.assignPropertyType(data_set_type_LSR_FORTESSA_FCSFILE, prop_type_LSR_FORTESSA_FCSFILE_ACQ_DATE)\nassignment_DATA_SET_LSR_FORTESSA_FCSFILE_LSR_FORTESSA_FCSFILE_ACQ_DATE.setMandatory(False)\nassignment_DATA_SET_LSR_FORTESSA_FCSFILE_LSR_FORTESSA_FCSFILE_ACQ_DATE.setSection(None)\nassignment_DATA_SET_LSR_FORTESSA_FCSFILE_LSR_FORTESSA_FCSFILE_ACQ_DATE.setPositionInForms(3)\nassignment_DATA_SET_LSR_FORTESSA_FCSFILE_LSR_FORTESSA_FCSFILE_ACQ_DATE.setShownEdit(False)\n\n# DATA_SET_LSR_FORTESSA_FCSFILE_NAME\nassignment_DATA_SET_LSR_FORTESSA_FCSFILE_NAME = tr.assignPropertyType(data_set_type_LSR_FORTESSA_FCSFILE, prop_type_NAME)\nassignment_DATA_SET_LSR_FORTESSA_FCSFILE_NAME.setMandatory(False)\nassignment_DATA_SET_LSR_FORTESSA_FCSFILE_NAME.setSection(None)\nassignment_DATA_SET_LSR_FORTESSA_FCSFILE_NAME.setPositionInForms(4)\nassignment_DATA_SET_LSR_FORTESSA_FCSFILE_NAME.setShownEdit(False)\n\n# SAMPLE_LSR_FORTESSA_PLATE_LSR_FORTESSA_PLATE_GEOMETRY\nassignment_SAMPLE_LSR_FORTESSA_PLATE_LSR_FORTESSA_PLATE_GEOMETRY = tr.assignPropertyType(samp_type_LSR_FORTESSA_PLATE, prop_type_LSR_FORTESSA_PLATE_GEOMETRY)\nassignment_SAMPLE_LSR_FORTESSA_PLATE_LSR_FORTESSA_PLATE_GEOMETRY.setMandatory(False)\nassignment_SAMPLE_LSR_FORTESSA_PLATE_LSR_FORTESSA_PLATE_GEOMETRY.setSection(None)\nassignment_SAMPLE_LSR_FORTESSA_PLATE_LSR_FORTESSA_PLATE_GEOMETRY.setPositionInForms(1)\nassignment_SAMPLE_LSR_FORTESSA_PLATE_LSR_FORTESSA_PLATE_GEOMETRY.setShownEdit(True)\n\n# SAMPLE_LSR_FORTESSA_PLATE_NAME\nassignment_SAMPLE_LSR_FORTESSA_PLATE_NAME = tr.assignPropertyType(samp_type_LSR_FORTESSA_PLATE, prop_type_NAME)\nassignment_SAMPLE_LSR_FORTESSA_PLATE_NAME.setMandatory(False)\nassignment_SAMPLE_LSR_FORTESSA_PLATE_NAME.setSection('General Info')\nassignment_SAMPLE_LSR_FORTESSA_PLATE_NAME.setPositionInForms(1)\nassignment_SAMPLE_LSR_FORTESSA_PLATE_NAME.setShownEdit(True)\n\n# SAMPLE_LSR_FORTESSA_SPECIMEN_NAME\nassignment_SAMPLE_LSR_FORTESSA_SPECIMEN_NAME = tr.assignPropertyType(samp_type_LSR_FORTESSA_SPECIMEN, prop_type_NAME)\nassignment_SAMPLE_LSR_FORTESSA_SPECIMEN_NAME.setMandatory(False)\nassignment_SAMPLE_LSR_FORTESSA_SPECIMEN_NAME.setSection('General Info')\nassignment_SAMPLE_LSR_FORTESSA_SPECIMEN_NAME.setPositionInForms(1)\nassignment_SAMPLE_LSR_FORTESSA_SPECIMEN_NAME.setShownEdit(True)\n\n# SAMPLE_LSR_FORTESSA_SPECIMEN_ANNOTATIONS_STATE\nassignment_SAMPLE_LSR_FORTESSA_SPECIMEN_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_LSR_FORTESSA_SPECIMEN, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_LSR_FORTESSA_SPECIMEN_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_LSR_FORTESSA_SPECIMEN_ANNOTATIONS_STATE.setSection('General Info')\nassignment_SAMPLE_LSR_FORTESSA_SPECIMEN_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_LSR_FORTESSA_SPECIMEN_ANNOTATIONS_STATE.setShownEdit(False)\n\n# SAMPLE_LSR_FORTESSA_TUBE_NAME\nassignment_SAMPLE_LSR_FORTESSA_TUBE_NAME = tr.assignPropertyType(samp_type_LSR_FORTESSA_TUBE, prop_type_NAME)\nassignment_SAMPLE_LSR_FORTESSA_TUBE_NAME.setMandatory(False)\nassignment_SAMPLE_LSR_FORTESSA_TUBE_NAME.setSection('General Info')\nassignment_SAMPLE_LSR_FORTESSA_TUBE_NAME.setPositionInForms(1)\nassignment_SAMPLE_LSR_FORTESSA_TUBE_NAME.setShownEdit(True)\n\n# SAMPLE_LSR_FORTESSA_WELL_NAME\nassignment_SAMPLE_LSR_FORTESSA_WELL_NAME = tr.assignPropertyType(samp_type_LSR_FORTESSA_WELL, prop_type_NAME)\nassignment_SAMPLE_LSR_FORTESSA_WELL_NAME.setMandatory(False)\nassignment_SAMPLE_LSR_FORTESSA_WELL_NAME.setSection('General Info')\nassignment_SAMPLE_LSR_FORTESSA_WELL_NAME.setPositionInForms(1)\nassignment_SAMPLE_LSR_FORTESSA_WELL_NAME.setShownEdit(True)\n\n# DATA_SET_LSR_FORTESSA_ACCESSORY_FILE_NAME\nassignment_DATA_SET_LSR_FORTESSA_ACCESSORY_FILE_NAME = tr.assignPropertyType(data_set_type_LSR_FORTESSA_ACCESSORY_FILE, prop_type_NAME)\nassignment_DATA_SET_LSR_FORTESSA_ACCESSORY_FILE_NAME.setMandatory(False)\nassignment_DATA_SET_LSR_FORTESSA_ACCESSORY_FILE_NAME.setSection(None)\nassignment_DATA_SET_LSR_FORTESSA_ACCESSORY_FILE_NAME.setPositionInForms(1)\nassignment_DATA_SET_LSR_FORTESSA_ACCESSORY_FILE_NAME.setShownEdit(False)\n\n# BC CYTOFLEX S\n# ------------------------------------------------------------------------------\n\n# SAMPLE_CYTOFLEX_S_EXPERIMENT_NAME\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_CYTOFLEX_S_EXPERIMENT, prop_type_NAME)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_NAME.setSection('General Info')\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_NAME.setPositionInForms(1)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_NAME.setShownEdit(False)\n\n# SAMPLE_CYTOFLEX_S_EXPERIMENT_ANNOTATIONS_STATE\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_CYTOFLEX_S_EXPERIMENT, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_ANNOTATIONS_STATE.setSection('General Info')\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_ANNOTATIONS_STATE.setShownEdit(False)\n\n# SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_NAME\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_CYTOFLEX_S_EXPERIMENT, prop_type_CYTOFLEX_S_EXPERIMENT_NAME)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_NAME.setSection(None)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_NAME.setPositionInForms(3)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_NAME.setShownEdit(False)\n\n# SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_DATE\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_DATE = tr.assignPropertyType(samp_type_CYTOFLEX_S_EXPERIMENT, prop_type_CYTOFLEX_S_EXPERIMENT_DATE)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_DATE.setMandatory(False)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_DATE.setSection(None)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_DATE.setPositionInForms(4)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_DATE.setShownEdit(False)\n\n# SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_DESCRIPTION\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_DESCRIPTION = tr.assignPropertyType(samp_type_CYTOFLEX_S_EXPERIMENT, prop_type_CYTOFLEX_S_EXPERIMENT_DESCRIPTION)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_DESCRIPTION.setMandatory(False)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_DESCRIPTION.setSection(None)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_DESCRIPTION.setPositionInForms(5)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_DESCRIPTION.setShownEdit(True)\n\n# SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE = tr.assignPropertyType(samp_type_CYTOFLEX_S_EXPERIMENT, prop_type_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE.setMandatory(False)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE.setSection(None)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE.setPositionInForms(6)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE.setShownEdit(False)\n\n# SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_SOFTWARE\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_SOFTWARE = tr.assignPropertyType(samp_type_CYTOFLEX_S_EXPERIMENT, prop_type_CYTOFLEX_S_EXPERIMENT_ACQ_SOFTWARE)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_SOFTWARE.setMandatory(False)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_SOFTWARE.setSection(None)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_SOFTWARE.setPositionInForms(7)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_SOFTWARE.setShownEdit(False)\n\n# SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_OWNER\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_OWNER = tr.assignPropertyType(samp_type_CYTOFLEX_S_EXPERIMENT, prop_type_CYTOFLEX_S_EXPERIMENT_OWNER)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_OWNER.setMandatory(False)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_OWNER.setSection(None)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_OWNER.setPositionInForms(8)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_OWNER.setShownEdit(False)\n\n# SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_VERSION\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_VERSION = tr.assignPropertyType(samp_type_CYTOFLEX_S_EXPERIMENT, prop_type_CYTOFLEX_S_EXPERIMENT_VERSION)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_VERSION.setMandatory(False)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_VERSION.setSection(None)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_VERSION.setPositionInForms(9)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_VERSION.setShownEdit(False)\n\n# SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.assignPropertyType(samp_type_CYTOFLEX_S_EXPERIMENT, prop_type_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setMandatory(False)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setSection(None)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setPositionInForms(10)\nassignment_SAMPLE_CYTOFLEX_S_EXPERIMENT_CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setShownEdit(True)\n\n# DATA_SET_CYTOFLEX_S_FCSFILE_CYTOFLEX_S_FCSFILE_PARAMETERS\nassignment_DATA_SET_CYTOFLEX_S_FCSFILE_CYTOFLEX_S_FCSFILE_PARAMETERS = tr.assignPropertyType(data_set_type_CYTOFLEX_S_FCSFILE, prop_type_CYTOFLEX_S_FCSFILE_PARAMETERS)\nassignment_DATA_SET_CYTOFLEX_S_FCSFILE_CYTOFLEX_S_FCSFILE_PARAMETERS.setMandatory(False)\nassignment_DATA_SET_CYTOFLEX_S_FCSFILE_CYTOFLEX_S_FCSFILE_PARAMETERS.setSection(None)\nassignment_DATA_SET_CYTOFLEX_S_FCSFILE_CYTOFLEX_S_FCSFILE_PARAMETERS.setPositionInForms(2)\nassignment_DATA_SET_CYTOFLEX_S_FCSFILE_CYTOFLEX_S_FCSFILE_PARAMETERS.setShownEdit(False)\n\n# DATA_SET_CYTOFLEX_S_FCSFILE_CYTOFLEX_S_FCSFILE_ACQ_DATE\nassignment_DATA_SET_CYTOFLEX_S_FCSFILE_CYTOFLEX_S_FCSFILE_ACQ_DATE = tr.assignPropertyType(data_set_type_CYTOFLEX_S_FCSFILE, prop_type_CYTOFLEX_S_FCSFILE_ACQ_DATE)\nassignment_DATA_SET_CYTOFLEX_S_FCSFILE_CYTOFLEX_S_FCSFILE_ACQ_DATE.setMandatory(False)\nassignment_DATA_SET_CYTOFLEX_S_FCSFILE_CYTOFLEX_S_FCSFILE_ACQ_DATE.setSection(None)\nassignment_DATA_SET_CYTOFLEX_S_FCSFILE_CYTOFLEX_S_FCSFILE_ACQ_DATE.setPositionInForms(3)\nassignment_DATA_SET_CYTOFLEX_S_FCSFILE_CYTOFLEX_S_FCSFILE_ACQ_DATE.setShownEdit(False)\n\n# DATA_SET_CYTOFLEX_S_FCSFILE_NAME\nassignment_DATA_SET_CYTOFLEX_S_FCSFILE_NAME = tr.assignPropertyType(data_set_type_CYTOFLEX_S_FCSFILE, prop_type_NAME)\nassignment_DATA_SET_CYTOFLEX_S_FCSFILE_NAME.setMandatory(False)\nassignment_DATA_SET_CYTOFLEX_S_FCSFILE_NAME.setSection(None)\nassignment_DATA_SET_CYTOFLEX_S_FCSFILE_NAME.setPositionInForms(4)\nassignment_DATA_SET_CYTOFLEX_S_FCSFILE_NAME.setShownEdit(False)\n\n# SAMPLE_CYTOFLEX_S_PLATE_CYTOFLEX_S_PLATE_GEOMETRY\nassignment_SAMPLE_CYTOFLEX_S_PLATE_CYTOFLEX_S_PLATE_GEOMETRY = tr.assignPropertyType(samp_type_CYTOFLEX_S_PLATE, prop_type_CYTOFLEX_S_PLATE_GEOMETRY)\nassignment_SAMPLE_CYTOFLEX_S_PLATE_CYTOFLEX_S_PLATE_GEOMETRY.setMandatory(False)\nassignment_SAMPLE_CYTOFLEX_S_PLATE_CYTOFLEX_S_PLATE_GEOMETRY.setSection(None)\nassignment_SAMPLE_CYTOFLEX_S_PLATE_CYTOFLEX_S_PLATE_GEOMETRY.setPositionInForms(1)\nassignment_SAMPLE_CYTOFLEX_S_PLATE_CYTOFLEX_S_PLATE_GEOMETRY.setShownEdit(True)\n\n# SAMPLE_CYTOFLEX_S_PLATE_NAME\nassignment_SAMPLE_CYTOFLEX_S_PLATE_NAME = tr.assignPropertyType(samp_type_CYTOFLEX_S_PLATE, prop_type_NAME)\nassignment_SAMPLE_CYTOFLEX_S_PLATE_NAME.setMandatory(False)\nassignment_SAMPLE_CYTOFLEX_S_PLATE_NAME.setSection('General Info')\nassignment_SAMPLE_CYTOFLEX_S_PLATE_NAME.setPositionInForms(1)\nassignment_SAMPLE_CYTOFLEX_S_PLATE_NAME.setShownEdit(True)\n\n# SAMPLE_CYTOFLEX_S_SPECIMEN_NAME\nassignment_SAMPLE_CYTOFLEX_S_SPECIMEN_NAME = tr.assignPropertyType(samp_type_CYTOFLEX_S_SPECIMEN, prop_type_NAME)\nassignment_SAMPLE_CYTOFLEX_S_SPECIMEN_NAME.setMandatory(False)\nassignment_SAMPLE_CYTOFLEX_S_SPECIMEN_NAME.setSection('General Info')\nassignment_SAMPLE_CYTOFLEX_S_SPECIMEN_NAME.setPositionInForms(1)\nassignment_SAMPLE_CYTOFLEX_S_SPECIMEN_NAME.setShownEdit(True)\n\n# SAMPLE_CYTOFLEX_S_SPECIMEN_ANNOTATIONS_STATE\nassignment_SAMPLE_CYTOFLEX_S_SPECIMEN_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_CYTOFLEX_S_SPECIMEN, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_CYTOFLEX_S_SPECIMEN_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_CYTOFLEX_S_SPECIMEN_ANNOTATIONS_STATE.setSection('General Info')\nassignment_SAMPLE_CYTOFLEX_S_SPECIMEN_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_CYTOFLEX_S_SPECIMEN_ANNOTATIONS_STATE.setShownEdit(False)\n\n# SAMPLE_CYTOFLEX_S_TUBE_NAME\nassignment_SAMPLE_CYTOFLEX_S_TUBE_NAME = tr.assignPropertyType(samp_type_CYTOFLEX_S_TUBE, prop_type_NAME)\nassignment_SAMPLE_CYTOFLEX_S_TUBE_NAME.setMandatory(False)\nassignment_SAMPLE_CYTOFLEX_S_TUBE_NAME.setSection('General Info')\nassignment_SAMPLE_CYTOFLEX_S_TUBE_NAME.setPositionInForms(1)\nassignment_SAMPLE_CYTOFLEX_S_TUBE_NAME.setShownEdit(True)\n\n# SAMPLE_CYTOFLEX_S_WELL_NAME\nassignment_SAMPLE_CYTOFLEX_S_WELL_NAME = tr.assignPropertyType(samp_type_CYTOFLEX_S_WELL, prop_type_NAME)\nassignment_SAMPLE_CYTOFLEX_S_WELL_NAME.setMandatory(False)\nassignment_SAMPLE_CYTOFLEX_S_WELL_NAME.setSection('General Info')\nassignment_SAMPLE_CYTOFLEX_S_WELL_NAME.setPositionInForms(1)\nassignment_SAMPLE_CYTOFLEX_S_WELL_NAME.setShownEdit(True)\n\n# DATA_SET_CYTOFLEX_S_ACCESSORY_FILE_NAME\nassignment_DATA_SET_CYTOFLEX_S_ACCESSORY_FILE_NAME = tr.assignPropertyType(data_set_type_CYTOFLEX_S_ACCESSORY_FILE, prop_type_NAME)\nassignment_DATA_SET_CYTOFLEX_S_ACCESSORY_FILE_NAME.setMandatory(False)\nassignment_DATA_SET_CYTOFLEX_S_ACCESSORY_FILE_NAME.setSection(None)\nassignment_DATA_SET_CYTOFLEX_S_ACCESSORY_FILE_NAME.setPositionInForms(1)\nassignment_DATA_SET_CYTOFLEX_S_ACCESSORY_FILE_NAME.setShownEdit(False)\n\n# BC MOFLO XDP\n# ------------------------------------------------------------------------------\n\n# SAMPLE_MOFLO_XDP_EXPERIMENT_NAME\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_MOFLO_XDP_EXPERIMENT, prop_type_NAME)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_NAME.setSection('General Info')\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_NAME.setPositionInForms(1)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_NAME.setShownEdit(True)\n\n# SAMPLE_MOFLO_XDP_EXPERIMENT_ANNOTATIONS_STATE\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_MOFLO_XDP_EXPERIMENT, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_ANNOTATIONS_STATE.setSection('General Info')\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_ANNOTATIONS_STATE.setShownEdit(False)\n\n# SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_DESCRIPTION\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_DESCRIPTION = tr.assignPropertyType(samp_type_MOFLO_XDP_EXPERIMENT, prop_type_MOFLO_XDP_EXPERIMENT_DESCRIPTION)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_DESCRIPTION.setMandatory(False)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_DESCRIPTION.setSection(None)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_DESCRIPTION.setPositionInForms(3)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_DESCRIPTION.setShownEdit(True)\n\n# SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_NAME\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_MOFLO_XDP_EXPERIMENT, prop_type_MOFLO_XDP_EXPERIMENT_NAME)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_NAME.setSection(None)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_NAME.setPositionInForms(4)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_NAME.setShownEdit(False)\n\n# SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_DATE\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_DATE = tr.assignPropertyType(samp_type_MOFLO_XDP_EXPERIMENT, prop_type_MOFLO_XDP_EXPERIMENT_DATE)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_DATE.setMandatory(False)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_DATE.setSection(None)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_DATE.setPositionInForms(5)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_DATE.setShownEdit(True)\n\n# SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE = tr.assignPropertyType(samp_type_MOFLO_XDP_EXPERIMENT, prop_type_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE.setMandatory(False)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE.setSection(None)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE.setPositionInForms(6)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE.setShownEdit(False)\n\n# SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_SOFTWARE\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_SOFTWARE = tr.assignPropertyType(samp_type_MOFLO_XDP_EXPERIMENT, prop_type_MOFLO_XDP_EXPERIMENT_ACQ_SOFTWARE)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_SOFTWARE.setMandatory(False)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_SOFTWARE.setSection(None)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_SOFTWARE.setPositionInForms(7)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_SOFTWARE.setShownEdit(False)\n\n# SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_OWNER\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_OWNER = tr.assignPropertyType(samp_type_MOFLO_XDP_EXPERIMENT, prop_type_MOFLO_XDP_EXPERIMENT_OWNER)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_OWNER.setMandatory(False)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_OWNER.setSection(None)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_OWNER.setPositionInForms(8)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_OWNER.setShownEdit(True)\n\n# SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.assignPropertyType(samp_type_MOFLO_XDP_EXPERIMENT, prop_type_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setMandatory(False)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setSection(None)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setPositionInForms(9)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setShownEdit(True)\n\n# SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_VERSION\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_VERSION = tr.assignPropertyType(samp_type_MOFLO_XDP_EXPERIMENT, prop_type_MOFLO_XDP_EXPERIMENT_VERSION)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_VERSION.setMandatory(False)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_VERSION.setSection(None)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_VERSION.setPositionInForms(10)\nassignment_SAMPLE_MOFLO_XDP_EXPERIMENT_MOFLO_XDP_EXPERIMENT_VERSION.setShownEdit(False)\n\n# DATA_SET_MOFLO_XDP_FCSFILE_MOFLO_XDP_FCSFILE_PARAMETERS\nassignment_DATA_SET_MOFLO_XDP_FCSFILE_MOFLO_XDP_FCSFILE_PARAMETERS = tr.assignPropertyType(data_set_type_MOFLO_XDP_FCSFILE, prop_type_MOFLO_XDP_FCSFILE_PARAMETERS)\nassignment_DATA_SET_MOFLO_XDP_FCSFILE_MOFLO_XDP_FCSFILE_PARAMETERS.setMandatory(False)\nassignment_DATA_SET_MOFLO_XDP_FCSFILE_MOFLO_XDP_FCSFILE_PARAMETERS.setSection(None)\nassignment_DATA_SET_MOFLO_XDP_FCSFILE_MOFLO_XDP_FCSFILE_PARAMETERS.setPositionInForms(2)\nassignment_DATA_SET_MOFLO_XDP_FCSFILE_MOFLO_XDP_FCSFILE_PARAMETERS.setShownEdit(False)\n\n# DATA_SET_MOFLO_XDP_FCSFILE_MOFLO_XDP_FCSFILE_ACQ_DATE\nassignment_DATA_SET_MOFLO_XDP_FCSFILE_MOFLO_XDP_FCSFILE_ACQ_DATE = tr.assignPropertyType(data_set_type_MOFLO_XDP_FCSFILE, prop_type_MOFLO_XDP_FCSFILE_ACQ_DATE)\nassignment_DATA_SET_MOFLO_XDP_FCSFILE_MOFLO_XDP_FCSFILE_ACQ_DATE.setMandatory(False)\nassignment_DATA_SET_MOFLO_XDP_FCSFILE_MOFLO_XDP_FCSFILE_ACQ_DATE.setSection(None)\nassignment_DATA_SET_MOFLO_XDP_FCSFILE_MOFLO_XDP_FCSFILE_ACQ_DATE.setPositionInForms(3)\nassignment_DATA_SET_MOFLO_XDP_FCSFILE_MOFLO_XDP_FCSFILE_ACQ_DATE.setShownEdit(False)\n\n# DATA_SET_MOFLO_XDP_FCSFILE_NAME\nassignment_DATA_SET_MOFLO_XDP_NAME = tr.assignPropertyType(data_set_type_MOFLO_XDP_FCSFILE, prop_type_NAME)\nassignment_DATA_SET_MOFLO_XDP_NAME.setMandatory(False)\nassignment_DATA_SET_MOFLO_XDP_NAME.setSection(None)\nassignment_DATA_SET_MOFLO_XDP_NAME.setPositionInForms(4)\nassignment_DATA_SET_MOFLO_XDP_NAME.setShownEdit(False)\n\n# SAMPLE_MOFLO_XDP_SPECIMEN_NAME\nassignment_SAMPLE_MOFLO_XDP_SPECIMEN_NAME = tr.assignPropertyType(samp_type_MOFLO_XDP_SPECIMEN, prop_type_NAME)\nassignment_SAMPLE_MOFLO_XDP_SPECIMEN_NAME.setMandatory(False)\nassignment_SAMPLE_MOFLO_XDP_SPECIMEN_NAME.setSection('General Info')\nassignment_SAMPLE_MOFLO_XDP_SPECIMEN_NAME.setPositionInForms(1)\nassignment_SAMPLE_MOFLO_XDP_SPECIMEN_NAME.setShownEdit(True)\n\n# SAMPLE_MOFLO_XDP_SPECIMEN_ANNOTATIONS_STATE\nassignment_SAMPLE_MOFLO_XDP_SPECIMEN_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_MOFLO_XDP_SPECIMEN, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_MOFLO_XDP_SPECIMEN_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_MOFLO_XDP_SPECIMEN_ANNOTATIONS_STATE.setSection('General Info')\nassignment_SAMPLE_MOFLO_XDP_SPECIMEN_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_MOFLO_XDP_SPECIMEN_ANNOTATIONS_STATE.setShownEdit(False)\n\n# SAMPLE_MOFLO_XDP_TUBE_NAME\nassignment_SAMPLE_MOFLO_XDP_TUBE_NAME = tr.assignPropertyType(samp_type_MOFLO_XDP_TUBE, prop_type_NAME)\nassignment_SAMPLE_MOFLO_XDP_TUBE_NAME.setMandatory(False)\nassignment_SAMPLE_MOFLO_XDP_TUBE_NAME.setSection('General Info')\nassignment_SAMPLE_MOFLO_XDP_TUBE_NAME.setPositionInForms(1)\nassignment_SAMPLE_MOFLO_XDP_TUBE_NAME.setShownEdit(True)\n\n# SAMPLE_MOFLO_XDP_TUBE_MOFLO_XDP_TUBE_ISINDEXSORT\nassignment_SAMPLE_MOFLO_XDP_TUBE_MOFLO_XDP_TUBE_ISINDEXSORT = tr.assignPropertyType(samp_type_MOFLO_XDP_TUBE, prop_type_MOFLO_XDP_TUBE_ISINDEXSORT)\nassignment_SAMPLE_MOFLO_XDP_TUBE_MOFLO_XDP_TUBE_ISINDEXSORT.setMandatory(False)\nassignment_SAMPLE_MOFLO_XDP_TUBE_MOFLO_XDP_TUBE_ISINDEXSORT.setSection(None)\nassignment_SAMPLE_MOFLO_XDP_TUBE_MOFLO_XDP_TUBE_ISINDEXSORT.setPositionInForms(4)\nassignment_SAMPLE_MOFLO_XDP_TUBE_MOFLO_XDP_TUBE_ISINDEXSORT.setShownEdit(False)\n\n# DATA_SET_MOFLO_XDP_ACCESSORY_FILE_NAME\nassignment_DATA_SET_MOFLO_XDP_ACCESSORY_FILE_NAME = tr.assignPropertyType(data_set_type_MOFLO_XDP_ACCESSORY_FILE, prop_type_NAME)\nassignment_DATA_SET_MOFLO_XDP_ACCESSORY_FILE_NAME.setMandatory(False)\nassignment_DATA_SET_MOFLO_XDP_ACCESSORY_FILE_NAME.setSection(None)\nassignment_DATA_SET_MOFLO_XDP_ACCESSORY_FILE_NAME.setPositionInForms(1)\nassignment_DATA_SET_MOFLO_XDP_ACCESSORY_FILE_NAME.setShownEdit(False)\n\n# BIORAD S3E\n# ------------------------------------------------------------------------------\n\n# SAMPLE_S3E_EXPERIMENT_NAME\nassignment_SAMPLE_S3E_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_S3E_EXPERIMENT, prop_type_NAME)\nassignment_SAMPLE_S3E_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_S3E_EXPERIMENT_NAME.setSection('General Info')\nassignment_SAMPLE_S3E_EXPERIMENT_NAME.setPositionInForms(1)\nassignment_SAMPLE_S3E_EXPERIMENT_NAME.setShownEdit(True)\n\n# SAMPLE_S3E_EXPERIMENT_ANNOTATIONS_STATE\nassignment_SAMPLE_S3E_EXPERIMENT_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_S3E_EXPERIMENT, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_S3E_EXPERIMENT_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_S3E_EXPERIMENT_ANNOTATIONS_STATE.setSection('General Info')\nassignment_SAMPLE_S3E_EXPERIMENT_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_S3E_EXPERIMENT_ANNOTATIONS_STATE.setShownEdit(False)\n\n# SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_DESCRIPTION\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_DESCRIPTION = tr.assignPropertyType(samp_type_S3E_EXPERIMENT, prop_type_S3E_EXPERIMENT_DESCRIPTION)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_DESCRIPTION.setMandatory(False)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_DESCRIPTION.setSection(None)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_DESCRIPTION.setPositionInForms(3)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_DESCRIPTION.setShownEdit(True)\n\n# SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_NAME\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_S3E_EXPERIMENT, prop_type_S3E_EXPERIMENT_NAME)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_NAME.setSection(None)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_NAME.setPositionInForms(4)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_NAME.setShownEdit(False)\n\n# SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_DATE\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_DATE = tr.assignPropertyType(samp_type_S3E_EXPERIMENT, prop_type_S3E_EXPERIMENT_DATE)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_DATE.setMandatory(False)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_DATE.setSection(None)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_DATE.setPositionInForms(5)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_DATE.setShownEdit(True)\n\n# SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_HARDWARE\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_HARDWARE = tr.assignPropertyType(samp_type_S3E_EXPERIMENT, prop_type_S3E_EXPERIMENT_ACQ_HARDWARE)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_HARDWARE.setMandatory(False)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_HARDWARE.setSection(None)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_HARDWARE.setPositionInForms(6)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_HARDWARE.setShownEdit(False)\n\n# SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_SOFTWARE\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_SOFTWARE = tr.assignPropertyType(samp_type_S3E_EXPERIMENT, prop_type_S3E_EXPERIMENT_ACQ_SOFTWARE)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_SOFTWARE.setMandatory(False)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_SOFTWARE.setSection(None)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_SOFTWARE.setPositionInForms(7)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_SOFTWARE.setShownEdit(False)\n\n# SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_OWNER\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_OWNER = tr.assignPropertyType(samp_type_S3E_EXPERIMENT, prop_type_S3E_EXPERIMENT_OWNER)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_OWNER.setMandatory(False)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_OWNER.setSection(None)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_OWNER.setPositionInForms(8)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_OWNER.setShownEdit(True)\n\n# SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.assignPropertyType(samp_type_S3E_EXPERIMENT, prop_type_S3E_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setMandatory(False)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setSection(None)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setPositionInForms(9)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setShownEdit(True)\n\n# SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_VERSION\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_VERSION = tr.assignPropertyType(samp_type_S3E_EXPERIMENT, prop_type_S3E_EXPERIMENT_VERSION)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_VERSION.setMandatory(False)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_VERSION.setSection(None)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_VERSION.setPositionInForms(10)\nassignment_SAMPLE_S3E_EXPERIMENT_S3E_EXPERIMENT_VERSION.setShownEdit(False)\n\n# DATA_SET_S3E_FCSFILE_S3E_FCSFILE_PARAMETERS\nassignment_DATA_SET_S3E_FCSFILE_S3E_FCSFILE_PARAMETERS = tr.assignPropertyType(data_set_type_S3E_FCSFILE, prop_type_S3E_FCSFILE_PARAMETERS)\nassignment_DATA_SET_S3E_FCSFILE_S3E_FCSFILE_PARAMETERS.setMandatory(False)\nassignment_DATA_SET_S3E_FCSFILE_S3E_FCSFILE_PARAMETERS.setSection(None)\nassignment_DATA_SET_S3E_FCSFILE_S3E_FCSFILE_PARAMETERS.setPositionInForms(2)\nassignment_DATA_SET_S3E_FCSFILE_S3E_FCSFILE_PARAMETERS.setShownEdit(False)\n\n# DATA_SET_S3E_FCSFILE_S3E_FCSFILE_ACQ_DATE\nassignment_DATA_SET_S3E_FCSFILE_S3E_FCSFILE_ACQ_DATE = tr.assignPropertyType(data_set_type_S3E_FCSFILE, prop_type_S3E_FCSFILE_ACQ_DATE)\nassignment_DATA_SET_S3E_FCSFILE_S3E_FCSFILE_ACQ_DATE.setMandatory(False)\nassignment_DATA_SET_S3E_FCSFILE_S3E_FCSFILE_ACQ_DATE.setSection(None)\nassignment_DATA_SET_S3E_FCSFILE_S3E_FCSFILE_ACQ_DATE.setPositionInForms(3)\nassignment_DATA_SET_S3E_FCSFILE_S3E_FCSFILE_ACQ_DATE.setShownEdit(False)\n\n# DATA_SET_S3E_FCSFILE_NAME\nassignment_DATA_SET_S3E_FCSFILE_NAME = tr.assignPropertyType(data_set_type_S3E_FCSFILE, prop_type_NAME)\nassignment_DATA_SET_S3E_FCSFILE_NAME.setMandatory(False)\nassignment_DATA_SET_S3E_FCSFILE_NAME.setSection(None)\nassignment_DATA_SET_S3E_FCSFILE_NAME.setPositionInForms(4)\nassignment_DATA_SET_S3E_FCSFILE_NAME.setShownEdit(False)\n\n# SAMPLE_S3E_SPECIMEN_NAME\nassignment_SAMPLE_S3E_SPECIMEN_NAME = tr.assignPropertyType(samp_type_S3E_SPECIMEN, prop_type_NAME)\nassignment_SAMPLE_S3E_SPECIMEN_NAME.setMandatory(False)\nassignment_SAMPLE_S3E_SPECIMEN_NAME.setSection(None)\nassignment_SAMPLE_S3E_SPECIMEN_NAME.setPositionInForms(1)\nassignment_SAMPLE_S3E_SPECIMEN_NAME.setShownEdit(True)\n\n# SAMPLE_S3E_SPECIMEN_ANNOTATIONS_STATE\nassignment_SAMPLE_S3E_SPECIMEN_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_S3E_SPECIMEN, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_S3E_SPECIMEN_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_S3E_SPECIMEN_ANNOTATIONS_STATE.setSection(None)\nassignment_SAMPLE_S3E_SPECIMEN_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_S3E_SPECIMEN_ANNOTATIONS_STATE.setShownEdit(True)\n\n# SAMPLE_S3E_TUBE_NAME\nassignment_SAMPLE_S3_TUBE_NAME = tr.assignPropertyType(samp_type_S3E_TUBE, prop_type_NAME)\nassignment_SAMPLE_S3_TUBE_NAME.setMandatory(False)\nassignment_SAMPLE_S3_TUBE_NAME.setSection('General Info')\nassignment_SAMPLE_S3_TUBE_NAME.setPositionInForms(1)\nassignment_SAMPLE_S3_TUBE_NAME.setShownEdit(True)\n\n# SAMPLE_S3E_TUBE_S3E_TUBE_ISINDEXSORT\nassignment_SAMPLE_S3E_TUBE_S3E_TUBE_ISINDEXSORT = tr.assignPropertyType(samp_type_S3E_TUBE, prop_type_S3E_TUBE_ISINDEXSORT)\nassignment_SAMPLE_S3E_TUBE_S3E_TUBE_ISINDEXSORT.setMandatory(False)\nassignment_SAMPLE_S3E_TUBE_S3E_TUBE_ISINDEXSORT.setSection(None)\nassignment_SAMPLE_S3E_TUBE_S3E_TUBE_ISINDEXSORT.setPositionInForms(4)\nassignment_SAMPLE_S3E_TUBE_S3E_TUBE_ISINDEXSORT.setShownEdit(False)\n\n# DATA_SET_S3E_ACCESSORY_FILE_NAME\nassignment_DATA_SET_S3E_ACCESSORY_FILE_NAME = tr.assignPropertyType(data_set_type_S3E_ACCESSORY_FILE, prop_type_NAME)\nassignment_DATA_SET_S3E_ACCESSORY_FILE_NAME.setMandatory(False)\nassignment_DATA_SET_S3E_ACCESSORY_FILE_NAME.setSection(None)\nassignment_DATA_SET_S3E_ACCESSORY_FILE_NAME.setPositionInForms(1)\nassignment_DATA_SET_S3E_ACCESSORY_FILE_NAME.setShownEdit(False)\n\n# SONY SH800S\n# ------------------------------------------------------------------------------\n\n# SAMPLE_SONY_SH800S_EXPERIMENT_NAME\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_SONY_SH800S_EXPERIMENT, prop_type_NAME)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_NAME.setSection('General Info')\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_NAME.setPositionInForms(1)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_NAME.setShownEdit(True)\n\n# SAMPLE_SONY_SH800S_EXPERIMENT_ANNOTATIONS_STATE\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_SONY_SH800S_EXPERIMENT, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_ANNOTATIONS_STATE.setSection('General Info')\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_ANNOTATIONS_STATE.setShownEdit(False)\n\n# SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_DESCRIPTION\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_DESCRIPTION = tr.assignPropertyType(samp_type_SONY_SH800S_EXPERIMENT, prop_type_SONY_SH800S_EXPERIMENT_DESCRIPTION)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_DESCRIPTION.setMandatory(False)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_DESCRIPTION.setSection(None)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_DESCRIPTION.setPositionInForms(3)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_DESCRIPTION.setShownEdit(True)\n\n# SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_NAME\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_SONY_SH800S_EXPERIMENT, prop_type_SONY_SH800S_EXPERIMENT_NAME)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_NAME.setSection(None)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_NAME.setPositionInForms(4)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_NAME.setShownEdit(False)\n\n# SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_DATE\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_DATE = tr.assignPropertyType(samp_type_SONY_SH800S_EXPERIMENT, prop_type_SONY_SH800S_EXPERIMENT_DATE)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_DATE.setMandatory(False)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_DATE.setSection(None)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_DATE.setPositionInForms(5)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_DATE.setShownEdit(True)\n\n# SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE = tr.assignPropertyType(samp_type_SONY_SH800S_EXPERIMENT, prop_type_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE.setMandatory(False)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE.setSection(None)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE.setPositionInForms(6)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE.setShownEdit(False)\n\n# SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_SOFTWARE\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_SOFTWARE = tr.assignPropertyType(samp_type_SONY_SH800S_EXPERIMENT, prop_type_SONY_SH800S_EXPERIMENT_ACQ_SOFTWARE)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_SOFTWARE.setMandatory(False)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_SOFTWARE.setSection(None)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_SOFTWARE.setPositionInForms(7)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_SOFTWARE.setShownEdit(False)\n\n# SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_OWNER\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_OWNER = tr.assignPropertyType(samp_type_SONY_SH800S_EXPERIMENT, prop_type_SONY_SH800S_EXPERIMENT_OWNER)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_OWNER.setMandatory(False)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_OWNER.setSection(None)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_OWNER.setPositionInForms(8)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_OWNER.setShownEdit(True)\n\n# SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.assignPropertyType(samp_type_SONY_SH800S_EXPERIMENT, prop_type_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setMandatory(False)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setSection(None)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setPositionInForms(9)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setShownEdit(True)\n\n# SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_VERSION\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_VERSION = tr.assignPropertyType(samp_type_SONY_SH800S_EXPERIMENT, prop_type_SONY_SH800S_EXPERIMENT_VERSION)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_VERSION.setMandatory(False)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_VERSION.setSection(None)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_VERSION.setPositionInForms(10)\nassignment_SAMPLE_SONY_SH800S_EXPERIMENT_SONY_SH800S_EXPERIMENT_VERSION.setShownEdit(False)\n\n# DATA_SET_SONY_SH800S_FCSFILE_SONY_SH800S_FCSFILE_PARAMETERS\nassignment_DATA_SET_SONY_SH800S_FCSFILE_SONY_SH800S_FCSFILE_PARAMETERS = tr.assignPropertyType(data_set_type_SONY_SH800S_FCSFILE, prop_type_SONY_SH800S_FCSFILE_PARAMETERS)\nassignment_DATA_SET_SONY_SH800S_FCSFILE_SONY_SH800S_FCSFILE_PARAMETERS.setMandatory(False)\nassignment_DATA_SET_SONY_SH800S_FCSFILE_SONY_SH800S_FCSFILE_PARAMETERS.setSection(None)\nassignment_DATA_SET_SONY_SH800S_FCSFILE_SONY_SH800S_FCSFILE_PARAMETERS.setPositionInForms(2)\nassignment_DATA_SET_SONY_SH800S_FCSFILE_SONY_SH800S_FCSFILE_PARAMETERS.setShownEdit(False)\n\n# DATA_SET_SONY_SH800S_FCSFILE_SONY_SH800S_FCSFILE_ACQ_DATE\nassignment_DATA_SET_SONY_SH800S_FCSFILE_SONY_SH800S_FCSFILE_ACQ_DATE = tr.assignPropertyType(data_set_type_SONY_SH800S_FCSFILE, prop_type_SONY_SH800S_FCSFILE_ACQ_DATE)\nassignment_DATA_SET_SONY_SH800S_FCSFILE_SONY_SH800S_FCSFILE_ACQ_DATE.setMandatory(False)\nassignment_DATA_SET_SONY_SH800S_FCSFILE_SONY_SH800S_FCSFILE_ACQ_DATE.setSection(None)\nassignment_DATA_SET_SONY_SH800S_FCSFILE_SONY_SH800S_FCSFILE_ACQ_DATE.setPositionInForms(3)\nassignment_DATA_SET_SONY_SH800S_FCSFILE_SONY_SH800S_FCSFILE_ACQ_DATE.setShownEdit(False)\n\n# DATA_SET_SONY_SH800S_FCSFILE_NAME\nassignment_DATA_SET_NFLUX_FCSFILE_NAME = tr.assignPropertyType(data_set_type_SONY_SH800S_FCSFILE, prop_type_NAME)\nassignment_DATA_SET_NFLUX_FCSFILE_NAME.setMandatory(False)\nassignment_DATA_SET_NFLUX_FCSFILE_NAME.setSection(None)\nassignment_DATA_SET_NFLUX_FCSFILE_NAME.setPositionInForms(3)\nassignment_DATA_SET_NFLUX_FCSFILE_NAME.setShownEdit(False)\n\n# SAMPLE_SONY_SH800S_SPECIMEN_NAME\nassignment_SAMPLE_SONY_SH800S_SPECIMEN_NAME = tr.assignPropertyType(samp_type_SONY_SH800S_SPECIMEN, prop_type_NAME)\nassignment_SAMPLE_SONY_SH800S_SPECIMEN_NAME.setMandatory(False)\nassignment_SAMPLE_SONY_SH800S_SPECIMEN_NAME.setSection('General Info')\nassignment_SAMPLE_SONY_SH800S_SPECIMEN_NAME.setPositionInForms(1)\nassignment_SAMPLE_SONY_SH800S_SPECIMEN_NAME.setShownEdit(True)\n\n# SAMPLE_SONY_SH800S_SPECIMEN_ANNOTATIONS_STATE\nassignment_SAMPLE_SONY_SH800S_SPECIMEN_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_SONY_SH800S_SPECIMEN, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_SONY_SH800S_SPECIMEN_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_SONY_SH800S_SPECIMEN_ANNOTATIONS_STATE.setSection('General Info')\nassignment_SAMPLE_SONY_SH800S_SPECIMEN_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_SONY_SH800S_SPECIMEN_ANNOTATIONS_STATE.setShownEdit(False)\n\n# SAMPLE_SONY_SH800S_TUBE_NAME\nassignment_SAMPLE_SONY_SH800S_TUBE_NAME = tr.assignPropertyType(samp_type_SONY_SH800S_TUBE, prop_type_NAME)\nassignment_SAMPLE_SONY_SH800S_TUBE_NAME.setMandatory(False)\nassignment_SAMPLE_SONY_SH800S_TUBE_NAME.setSection('General Info')\nassignment_SAMPLE_SONY_SH800S_TUBE_NAME.setPositionInForms(1)\nassignment_SAMPLE_SONY_SH800S_TUBE_NAME.setShownEdit(True)\n\n# SAMPLE_SONY_SH800S_TUBE_SONY_SH800S_TUBE_ISINDEXSORT\nassignment_SAMPLE_SONY_SH800S_TUBE_SONY_SH800S_TUBE_ISINDEXSORT = tr.assignPropertyType(samp_type_SONY_SH800S_TUBE, prop_type_SONY_SH800S_TUBE_ISINDEXSORT)\nassignment_SAMPLE_SONY_SH800S_TUBE_SONY_SH800S_TUBE_ISINDEXSORT.setMandatory(False)\nassignment_SAMPLE_SONY_SH800S_TUBE_SONY_SH800S_TUBE_ISINDEXSORT.setSection(None)\nassignment_SAMPLE_SONY_SH800S_TUBE_SONY_SH800S_TUBE_ISINDEXSORT.setPositionInForms(4)\nassignment_SAMPLE_SONY_SH800S_TUBE_SONY_SH800S_TUBE_ISINDEXSORT.setShownEdit(False)\n\n# DATA_SET_SONY_SH800S_ACCESSORY_FILE_NAME\nassignment_DATA_SET_SONY_SH800S_ACCESSORY_FILE_NAME = tr.assignPropertyType(data_set_type_SONY_SH800S_ACCESSORY_FILE, prop_type_NAME)\nassignment_DATA_SET_SONY_SH800S_ACCESSORY_FILE_NAME.setMandatory(False)\nassignment_DATA_SET_SONY_SH800S_ACCESSORY_FILE_NAME.setSection(None)\nassignment_DATA_SET_SONY_SH800S_ACCESSORY_FILE_NAME.setPositionInForms(1)\nassignment_DATA_SET_SONY_SH800S_ACCESSORY_FILE_NAME.setShownEdit(False)\n\n# SONY MA900\n# ------------------------------------------------------------------------------\n\n# SAMPLE_SONY_MA900_EXPERIMENT_NAME\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_SONY_MA900_EXPERIMENT, prop_type_NAME)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_NAME.setSection('General Info')\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_NAME.setPositionInForms(1)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_NAME.setShownEdit(True)\n\n# SAMPLE_SONY_MA900_EXPERIMENT_ANNOTATIONS_STATE\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_SONY_MA900_EXPERIMENT, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_ANNOTATIONS_STATE.setSection('General Info')\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_ANNOTATIONS_STATE.setShownEdit(False)\n\n# SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_DESCRIPTION\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_DESCRIPTION = tr.assignPropertyType(samp_type_SONY_MA900_EXPERIMENT, prop_type_SONY_MA900_EXPERIMENT_DESCRIPTION)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_DESCRIPTION.setMandatory(False)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_DESCRIPTION.setSection(None)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_DESCRIPTION.setPositionInForms(3)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_DESCRIPTION.setShownEdit(True)\n\n# SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_NAME\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_NAME = tr.assignPropertyType(samp_type_SONY_MA900_EXPERIMENT, prop_type_SONY_MA900_EXPERIMENT_NAME)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_NAME.setMandatory(False)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_NAME.setSection(None)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_NAME.setPositionInForms(4)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_NAME.setShownEdit(False)\n\n# SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_DATE\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_DATE = tr.assignPropertyType(samp_type_SONY_MA900_EXPERIMENT, prop_type_SONY_MA900_EXPERIMENT_DATE)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_DATE.setMandatory(False)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_DATE.setSection(None)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_DATE.setPositionInForms(5)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_DATE.setShownEdit(True)\n\n# SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_HARDWARE\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_HARDWARE = tr.assignPropertyType(samp_type_SONY_MA900_EXPERIMENT, prop_type_SONY_MA900_EXPERIMENT_ACQ_HARDWARE)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_HARDWARE.setMandatory(False)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_HARDWARE.setSection(None)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_HARDWARE.setPositionInForms(6)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_HARDWARE.setShownEdit(False)\n\n# SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_SOFTWARE\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_SOFTWARE = tr.assignPropertyType(samp_type_SONY_MA900_EXPERIMENT, prop_type_SONY_MA900_EXPERIMENT_ACQ_SOFTWARE)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_SOFTWARE.setMandatory(False)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_SOFTWARE.setSection(None)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_SOFTWARE.setPositionInForms(7)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_SOFTWARE.setShownEdit(False)\n\n# SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_OWNER\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_OWNER = tr.assignPropertyType(samp_type_SONY_MA900_EXPERIMENT, prop_type_SONY_MA900_EXPERIMENT_OWNER)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_OWNER.setMandatory(False)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_OWNER.setSection(None)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_OWNER.setPositionInForms(8)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_OWNER.setShownEdit(True)\n\n# SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME = tr.assignPropertyType(samp_type_SONY_MA900_EXPERIMENT, prop_type_SONY_MA900_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setMandatory(False)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setSection(None)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setPositionInForms(9)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME.setShownEdit(True)\n\n# SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_VERSION\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_VERSION = tr.assignPropertyType(samp_type_SONY_MA900_EXPERIMENT, prop_type_SONY_MA900_EXPERIMENT_VERSION)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_VERSION.setMandatory(False)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_VERSION.setSection(None)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_VERSION.setPositionInForms(10)\nassignment_SAMPLE_SONY_MA900_EXPERIMENT_SONY_MA900_EXPERIMENT_VERSION.setShownEdit(False)\n\n# DATA_SET_SONY_MA900_FCSFILE_SONY_MA900_FCSFILE_PARAMETERS\nassignment_DATA_SET_SONY_MA900_FCSFILE_SONY_MA900_FCSFILE_PARAMETERS = tr.assignPropertyType(data_set_type_SONY_MA900_FCSFILE, prop_type_SONY_MA900_FCSFILE_PARAMETERS)\nassignment_DATA_SET_SONY_MA900_FCSFILE_SONY_MA900_FCSFILE_PARAMETERS.setMandatory(False)\nassignment_DATA_SET_SONY_MA900_FCSFILE_SONY_MA900_FCSFILE_PARAMETERS.setSection(None)\nassignment_DATA_SET_SONY_MA900_FCSFILE_SONY_MA900_FCSFILE_PARAMETERS.setPositionInForms(2)\nassignment_DATA_SET_SONY_MA900_FCSFILE_SONY_MA900_FCSFILE_PARAMETERS.setShownEdit(False)\n\n# DATA_SET_SONY_MA900_FCSFILE_SONY_MA900_FCSFILE_ACQ_DATE\nassignment_DATA_SET_SONY_MA900_FCSFILE_SONY_MA900_FCSFILE_ACQ_DATE = tr.assignPropertyType(data_set_type_SONY_MA900_FCSFILE, prop_type_SONY_MA900_FCSFILE_ACQ_DATE)\nassignment_DATA_SET_SONY_MA900_FCSFILE_SONY_MA900_FCSFILE_ACQ_DATE.setMandatory(False)\nassignment_DATA_SET_SONY_MA900_FCSFILE_SONY_MA900_FCSFILE_ACQ_DATE.setSection(None)\nassignment_DATA_SET_SONY_MA900_FCSFILE_SONY_MA900_FCSFILE_ACQ_DATE.setPositionInForms(3)\nassignment_DATA_SET_SONY_MA900_FCSFILE_SONY_MA900_FCSFILE_ACQ_DATE.setShownEdit(False)\n\n# DATA_SET_SONY_MA900_FCSFILE_NAME\nassignment_DATA_SET_NFLUX_FCSFILE_NAME = tr.assignPropertyType(data_set_type_SONY_MA900_FCSFILE, prop_type_NAME)\nassignment_DATA_SET_NFLUX_FCSFILE_NAME.setMandatory(False)\nassignment_DATA_SET_NFLUX_FCSFILE_NAME.setSection(None)\nassignment_DATA_SET_NFLUX_FCSFILE_NAME.setPositionInForms(3)\nassignment_DATA_SET_NFLUX_FCSFILE_NAME.setShownEdit(False)\n\n# SAMPLE_SONY_MA900_SPECIMEN_NAME\nassignment_SAMPLE_SONY_MA900_SPECIMEN_NAME = tr.assignPropertyType(samp_type_SONY_MA900_SPECIMEN, prop_type_NAME)\nassignment_SAMPLE_SONY_MA900_SPECIMEN_NAME.setMandatory(False)\nassignment_SAMPLE_SONY_MA900_SPECIMEN_NAME.setSection('General Info')\nassignment_SAMPLE_SONY_MA900_SPECIMEN_NAME.setPositionInForms(1)\nassignment_SAMPLE_SONY_MA900_SPECIMEN_NAME.setShownEdit(True)\n\n# SAMPLE_SONY_MA900_SPECIMEN_ANNOTATIONS_STATE\nassignment_SAMPLE_SONY_MA900_SPECIMEN_ANNOTATIONS_STATE = tr.assignPropertyType(samp_type_SONY_MA900_SPECIMEN, prop_type_ANNOTATIONS_STATE)\nassignment_SAMPLE_SONY_MA900_SPECIMEN_ANNOTATIONS_STATE.setMandatory(False)\nassignment_SAMPLE_SONY_MA900_SPECIMEN_ANNOTATIONS_STATE.setSection('General Info')\nassignment_SAMPLE_SONY_MA900_SPECIMEN_ANNOTATIONS_STATE.setPositionInForms(2)\nassignment_SAMPLE_SONY_MA900_SPECIMEN_ANNOTATIONS_STATE.setShownEdit(False)\n\n# SAMPLE_SONY_MA900_TUBE_NAME\nassignment_SAMPLE_SONY_MA900_TUBE_NAME = tr.assignPropertyType(samp_type_SONY_MA900_TUBE, prop_type_NAME)\nassignment_SAMPLE_SONY_MA900_TUBE_NAME.setMandatory(False)\nassignment_SAMPLE_SONY_MA900_TUBE_NAME.setSection('General Info')\nassignment_SAMPLE_SONY_MA900_TUBE_NAME.setPositionInForms(1)\nassignment_SAMPLE_SONY_MA900_TUBE_NAME.setShownEdit(True)\n\n# SAMPLE_SONY_MA900_TUBE_SONY_MA900_TUBE_ISINDEXSORT\nassignment_SAMPLE_SONY_MA900_TUBE_SONY_MA900_TUBE_ISINDEXSORT = tr.assignPropertyType(samp_type_SONY_MA900_TUBE, prop_type_SONY_MA900_TUBE_ISINDEXSORT)\nassignment_SAMPLE_SONY_MA900_TUBE_SONY_MA900_TUBE_ISINDEXSORT.setMandatory(False)\nassignment_SAMPLE_SONY_MA900_TUBE_SONY_MA900_TUBE_ISINDEXSORT.setSection(None)\nassignment_SAMPLE_SONY_MA900_TUBE_SONY_MA900_TUBE_ISINDEXSORT.setPositionInForms(4)\nassignment_SAMPLE_SONY_MA900_TUBE_SONY_MA900_TUBE_ISINDEXSORT.setShownEdit(False)\n\n# DATA_SET_SONY_MA900_ACCESSORY_FILE_NAME\nassignment_DATA_SET_SONY_MA900_ACCESSORY_FILE_NAME = tr.assignPropertyType(data_set_type_SONY_MA900_ACCESSORY_FILE, prop_type_NAME)\nassignment_DATA_SET_SONY_MA900_ACCESSORY_FILE_NAME.setMandatory(False)\nassignment_DATA_SET_SONY_MA900_ACCESSORY_FILE_NAME.setSection(None)\nassignment_DATA_SET_SONY_MA900_ACCESSORY_FILE_NAME.setPositionInForms(1)\nassignment_DATA_SET_SONY_MA900_ACCESSORY_FILE_NAME.setShownEdit(False)\n\nprint("Import of Flow Cytometry Core Technology Master Data finished.")\n
\.


--
-- Data for Name: data_all; Type: TABLE DATA; Schema: public; Owner: -
--

COPY data_all (id, code, data_set_kind, dsty_id, dast_id, expe_id, data_producer_code, production_timestamp, samp_id, registration_timestamp, pers_id_registerer, is_valid, modification_timestamp, access_timestamp, is_derived, del_id, orig_del, pers_id_modifier, version, frozen, frozen_for_children, frozen_for_parents, frozen_for_comps, frozen_for_conts, expe_frozen, samp_frozen, tsvector_document) FROM stdin;
\.


--
-- Data for Name: data_set_copies_history; Type: TABLE DATA; Schema: public; Owner: -
--

COPY data_set_copies_history (id, cc_id, data_id, external_code, path, git_commit_hash, git_repository_id, edms_id, edms_code, edms_label, edms_address, pers_id_author, valid_from_timestamp, valid_until_timestamp) FROM stdin;
\.


--
-- Data for Name: data_set_properties; Type: TABLE DATA; Schema: public; Owner: -
--

COPY data_set_properties (id, ds_id, dstpt_id, value, cvte_id, mate_prop_id, samp_prop_id, pers_id_registerer, registration_timestamp, pers_id_author, modification_timestamp, dase_frozen, tsvector_document) FROM stdin;
\.


--
-- Data for Name: data_set_properties_history; Type: TABLE DATA; Schema: public; Owner: -
--

COPY data_set_properties_history (id, ds_id, dstpt_id, value, vocabulary_term, material, sample, pers_id_author, valid_from_timestamp, valid_until_timestamp) FROM stdin;
\.


--
-- Data for Name: data_set_relationships_all; Type: TABLE DATA; Schema: public; Owner: -
--

COPY data_set_relationships_all (data_id_parent, data_id_child, relationship_id, ordinal, del_id, pers_id_author, registration_timestamp, modification_timestamp, parent_frozen, child_frozen, comp_frozen, cont_frozen) FROM stdin;
\.


--
-- Data for Name: data_set_relationships_history; Type: TABLE DATA; Schema: public; Owner: -
--

COPY data_set_relationships_history (id, main_data_id, relation_type, ordinal, expe_id, samp_id, data_id, entity_perm_id, pers_id_author, valid_from_timestamp, valid_until_timestamp) FROM stdin;
\.


--
-- Data for Name: data_set_type_property_types; Type: TABLE DATA; Schema: public; Owner: -
--

COPY data_set_type_property_types (id, dsty_id, prty_id, is_mandatory, is_managed_internally, pers_id_registerer, registration_timestamp, ordinal, section, script_id, is_shown_edit, show_raw_value) FROM stdin;
1	2	7	f	f	1	2020-09-30 09:01:12.416+02	4	\N	\N	f	f
2	2	95	f	f	1	2020-09-30 09:01:12.445+02	5	\N	\N	f	f
3	2	63	f	f	1	2020-09-30 09:01:12.476+02	6	\N	\N	f	f
4	2	80	f	f	1	2020-09-30 09:01:12.503+02	7	\N	\N	f	f
5	2	55	f	f	1	2020-09-30 09:01:12.53+02	8	\N	\N	f	f
6	2	90	f	f	1	2020-09-30 09:01:12.558+02	9	\N	\N	f	f
7	2	45	f	f	1	2020-09-30 09:01:12.583+02	10	\N	\N	f	f
8	3	59	f	f	1	2020-09-30 09:01:12.609+02	4	\N	\N	f	f
9	4	63	f	f	1	2020-09-30 09:01:12.636+02	4	\N	\N	f	f
10	4	95	f	f	1	2020-09-30 09:01:12.665+02	5	\N	\N	f	f
11	4	44	f	f	1	2020-09-30 09:01:12.686+02	6	\N	\N	f	f
12	4	46	f	f	1	2020-09-30 09:01:12.699+02	7	\N	\N	f	f
13	4	71	f	f	1	2020-09-30 09:01:12.711+02	8	\N	\N	f	f
14	4	72	f	f	1	2020-09-30 09:01:12.723+02	9	\N	\N	f	f
15	4	97	f	f	1	2020-09-30 09:01:12.735+02	10	\N	\N	f	f
16	4	14	f	f	1	2020-09-30 09:01:12.748+02	11	\N	\N	f	f
17	4	10	f	f	1	2020-09-30 09:01:12.76+02	12	\N	\N	f	f
18	4	57	f	f	1	2020-09-30 09:01:12.773+02	13	\N	\N	f	f
19	4	58	f	f	1	2020-09-30 09:01:12.785+02	14	\N	\N	f	f
20	4	56	f	f	1	2020-09-30 09:01:12.797+02	15	\N	\N	f	f
21	4	86	f	f	1	2020-09-30 09:01:12.81+02	16	\N	\N	f	f
22	6	63	f	f	1	2020-09-30 09:01:12.822+02	4	\N	\N	f	f
23	6	96	f	f	1	2020-09-30 09:01:12.835+02	5	\N	\N	f	f
24	6	67	f	f	1	2020-09-30 09:01:12.848+02	6	\N	\N	f	f
25	6	39	f	f	1	2020-09-30 09:01:12.86+02	7	\N	\N	f	f
26	6	40	f	f	1	2020-09-30 09:01:12.874+02	8	\N	\N	f	f
27	6	69	f	f	1	2020-09-30 09:01:12.887+02	9	\N	\N	f	f
28	6	68	f	f	1	2020-09-30 09:01:12.903+02	10	\N	\N	f	f
29	6	66	f	f	1	2020-09-30 09:01:12.925+02	11	\N	\N	f	f
30	7	12	f	f	1	2020-09-30 09:01:13.397+02	4	\N	\N	f	f
31	9	54	f	f	1	2020-09-30 09:01:13.798+02	4	\N	\N	f	f
32	9	63	f	f	1	2020-09-30 09:01:13.81+02	5	\N	\N	f	f
33	16	3	f	f	1	2020-09-30 09:01:15.19+02	2	\N	\N	f	f
34	16	1	f	f	1	2020-09-30 09:01:15.21+02	3	\N	\N	f	f
35	16	63	f	f	1	2020-09-30 09:01:15.232+02	4	\N	\N	f	f
36	16	101	f	f	1	2020-09-30 09:01:15.243+02	5	\N	\N	f	f
37	17	3	f	f	1	2020-09-30 09:01:15.322+02	2	\N	\N	f	f
38	19	106	f	f	1	2020-09-30 09:01:15.393+02	2	\N	3	f	f
39	19	3	f	f	1	2020-09-30 09:01:15.55+02	4	\N	\N	f	f
40	20	100	f	f	1	2020-09-30 09:01:15.561+02	3	\N	\N	f	f
41	22	118	f	f	1	2020-09-30 09:01:20.536+02	3	\N	\N	f	f
42	22	117	f	f	1	2020-09-30 09:01:20.551+02	5	\N	\N	f	f
43	22	3	f	f	1	2020-09-30 09:01:20.569+02	4	\N	\N	f	f
44	23	3	f	f	1	2020-09-30 09:01:20.644+02	2	\N	\N	f	f
45	24	129	f	f	1	2020-09-30 09:01:20.829+02	3	\N	\N	f	f
46	24	128	f	f	1	2020-09-30 09:01:20.849+02	5	\N	\N	f	f
47	24	3	f	f	1	2020-09-30 09:01:20.867+02	4	\N	\N	f	f
48	25	3	f	f	1	2020-09-30 09:01:20.948+02	2	\N	\N	f	f
49	26	140	f	f	1	2020-09-30 09:01:21.14+02	3	\N	\N	f	f
50	26	139	f	f	1	2020-09-30 09:01:21.159+02	4	\N	\N	f	f
51	26	3	f	f	1	2020-09-30 09:01:21.177+02	5	\N	\N	f	f
52	27	3	f	f	1	2020-09-30 09:01:21.299+02	2	\N	\N	f	f
53	28	151	f	f	1	2020-09-30 09:01:21.501+02	3	\N	\N	f	f
54	28	150	f	f	1	2020-09-30 09:01:21.52+02	4	\N	\N	f	f
55	28	3	f	f	1	2020-09-30 09:01:21.538+02	5	\N	\N	f	f
56	29	3	f	f	1	2020-09-30 09:01:21.682+02	2	\N	\N	f	f
57	30	162	f	f	1	2020-09-30 09:01:21.887+02	3	\N	\N	f	f
58	30	161	f	f	1	2020-09-30 09:01:21.91+02	4	\N	\N	f	f
59	30	3	f	f	1	2020-09-30 09:01:21.927+02	5	\N	\N	f	f
60	31	3	f	f	1	2020-09-30 09:01:22.019+02	2	\N	\N	f	f
61	32	173	f	f	1	2020-09-30 09:01:22.224+02	3	\N	\N	f	f
62	32	172	f	f	1	2020-09-30 09:01:22.24+02	4	\N	\N	f	f
63	32	3	f	f	1	2020-09-30 09:01:22.26+02	5	\N	\N	f	f
64	33	3	f	f	1	2020-09-30 09:01:22.352+02	2	\N	\N	f	f
65	34	184	f	f	1	2020-09-30 09:01:22.581+02	3	\N	\N	f	f
66	34	183	f	f	1	2020-09-30 09:01:22.603+02	5	\N	\N	f	f
67	34	3	f	f	1	2020-09-30 09:01:22.643+02	4	\N	\N	f	f
68	35	3	f	f	1	2020-09-30 09:01:22.739+02	2	\N	\N	f	f
69	36	195	f	f	1	2020-09-30 09:01:22.949+02	3	\N	\N	f	f
70	36	194	f	f	1	2020-09-30 09:01:22.97+02	5	\N	\N	f	f
71	36	3	f	f	1	2020-09-30 09:01:22.989+02	4	\N	\N	f	f
72	37	3	f	f	1	2020-09-30 09:01:23.084+02	2	\N	\N	f	f
\.


--
-- Data for Name: data_set_types; Type: TABLE DATA; Schema: public; Owner: -
--

COPY data_set_types (id, code, description, modification_timestamp, main_ds_pattern, main_ds_path, deletion_disallow, validation_script_id) FROM stdin;
1	UNKNOWN	Unknown	2020-09-30 09:00:55.015791+02	\N	\N	f	\N
2	ALIGNMENT	Aligner ouput, ideally bam/sam	2020-09-30 09:01:11.939+02	\N	\N	f	\N
3	BASECALL_STATS	Base Call Statistics from the Illumina Pipeline (configureBclToFastq.pl)	2020-09-30 09:01:11.942+02	original/.*/.*/Demultiplex_Stats.htm	\N	f	\N
4	BIGWIGGLE	Visualization	2020-09-30 09:01:11.944+02	\N	\N	f	\N
5	ELAND_ALIGNMENT	Illumina Eland Alignment Output	2020-09-30 09:01:11.947+02	\N	\N	f	\N
6	FASTQ_GZ	Gzipped Fastq file produced by Casava 1.8+	2020-09-30 09:01:11.95+02	\N	\N	f	\N
7	ILLUMINA_HISEQ_OUTPUT	HiSeq2000 Output	2020-09-30 09:01:11.954+02	original/.*/Data/Status.htm	\N	f	\N
8	ILLUMINA_MISEQ_OUTPUT	MiSeq Output	2020-09-30 09:01:11.956+02	\N	\N	f	\N
9	MACS_OUTPUT	MACS Peak Caller output	2020-09-30 09:01:11.959+02	\N	\N	f	\N
10	QUALITY_JPGS	R generated Quality plots	2020-09-30 09:01:11.962+02	\N	\N	f	\N
11	QUALITY_PDFS	R generated pdfs showing quality data	2020-09-30 09:01:11.965+02	\N	\N	f	\N
12	QUALITY_SVG	R generated Quality plots	2020-09-30 09:01:11.967+02	\N	\N	f	\N
13	RUNINFO	Run statstics: Status.html and Status_Files folder	2020-09-30 09:01:11.969+02	original/.*/Data/Status.htm	\N	f	\N
14	THUMBNAILS	Thumbnails provided by the Illumina software	2020-09-30 09:01:11.971+02	\N	\N	f	\N
15	TSV	Tab separated files	2020-09-30 09:01:11.973+02	\N	\N	f	\N
16	ATTACHMENT	Used to attach files to entities.	2020-09-30 09:01:15.13+02	\N	\N	f	\N
17	MICROSCOPY_ACCESSORY_FILE	An accessory dataset file associated with a microscopy experiment.	2020-09-30 09:01:15.132+02	\N	\N	f	\N
18	MICROSCOPY_IMG	Generic Microscopy Image.	2020-09-30 09:01:15.134+02	\N	\N	f	\N
19	MICROSCOPY_IMG_CONTAINER	Generic Microscopy Image Container.	2020-09-30 09:01:15.136+02	\N	\N	f	\N
20	MICROSCOPY_IMG_OVERVIEW	Overview Microscopy Images. Generated from raw images.	2020-09-30 09:01:15.137+02	\N	\N	f	\N
21	MICROSCOPY_IMG_THUMBNAIL	Representative image for the whole dataset.	2020-09-30 09:01:15.139+02	\N	\N	f	\N
22	FACS_ARIA_FCSFILE	An FCS file from the BD FACS Aria III Cell Sorter.	2020-09-30 09:01:19.651+02	.*\\.fcs	\N	f	\N
23	FACS_ARIA_ACCESSORY_FILE	An accessory dataset file associated with a FACS Aria experiment.	2020-09-30 09:01:19.654+02	\N	\N	f	\N
24	INFLUX_FCSFILE	An FCS file from the BD Influx Cell Sorter.	2020-09-30 09:01:19.657+02	.*\\.fcs	\N	f	\N
25	INFLUX_ACCESSORY_FILE	An accessory dataset file associated with an Influx experiment.	2020-09-30 09:01:19.66+02	\N	\N	f	\N
26	LSR_FORTESSA_FCSFILE	An FCS file from the BD LSR Fortessa Flow Cytometer.	2020-09-30 09:01:19.662+02	.*\\.fcs	\N	f	\N
27	LSR_FORTESSA_ACCESSORY_FILE	An accessory dataset file associated with an LSR Fortessa experiment.	2020-09-30 09:01:19.665+02	\N	\N	f	\N
28	CYTOFLEX_S_FCSFILE	An FCS file from the BC CytoFLEX S Flow Cytometer.	2020-09-30 09:01:19.668+02	.*\\.fcs	\N	f	\N
29	CYTOFLEX_S_ACCESSORY_FILE	An accessory dataset file associated with a CytoFLEX S experiment.	2020-09-30 09:01:19.67+02	\N	\N	f	\N
30	MOFLO_XDP_FCSFILE	An FCS file from the BC MoFlo XDP Cell Sorter.	2020-09-30 09:01:19.673+02	.*\\.fcs	\N	f	\N
31	MOFLO_XDP_ACCESSORY_FILE	An accessory dataset file associated with a MOFLO XDP experiment.	2020-09-30 09:01:19.676+02	\N	\N	f	\N
32	S3E_FCSFILE	An FCS file from the BIORAD S3e Cell Sorter.	2020-09-30 09:01:19.678+02	.*\\.fcs	\N	f	\N
33	S3E_ACCESSORY_FILE	An accessory dataset file associated with an S3E experiment.	2020-09-30 09:01:19.681+02	\N	\N	f	\N
34	SONY_SH800S_FCSFILE	An FCS file from the SONY SH800S Cell Sorter.	2020-09-30 09:01:19.683+02	.*\\.fcs	\N	f	\N
35	SONY_SH800S_ACCESSORY_FILE	An accessory dataset file associated with a SONY SH800S experiment.	2020-09-30 09:01:19.686+02	\N	\N	f	\N
36	SONY_MA900_FCSFILE	An FCS file from the SONY MA900 Cell Sorter.	2020-09-30 09:01:19.689+02	.*\\.fcs	\N	f	\N
37	SONY_MA900_ACCESSORY_FILE	An accessory dataset file associated with a SONY MA900 experiment.	2020-09-30 09:01:19.691+02	\N	\N	f	\N
\.


--
-- Data for Name: data_store_service_data_set_types; Type: TABLE DATA; Schema: public; Owner: -
--

COPY data_store_service_data_set_types (data_store_service_id, data_set_type_id) FROM stdin;
11	8
11	35
11	10
11	24
11	21
11	32
11	12
11	3
11	19
11	25
11	13
11	31
11	34
11	11
11	1
11	16
11	22
11	7
11	26
11	5
11	20
11	23
11	27
11	28
11	15
11	33
11	37
11	36
11	30
11	17
11	18
11	2
11	6
11	9
11	4
11	29
11	14
\.


--
-- Data for Name: data_store_services; Type: TABLE DATA; Schema: public; Owner: -
--

COPY data_store_services (id, key, label, kind, data_store_id, reporting_plugin_type) FROM stdin;
1	feature-lists-aggregation-service	Features Lists	QUERIES	1	AGGREGATION_TABLE_MODEL
2	default-plate-image-analysis	Image Analysis Results	QUERIES	1	TABLE_MODEL
3	dataset-uploader-api	Dataset Uploader API	QUERIES	1	AGGREGATION_TABLE_MODEL
4	shared_create_metaproject	Create project	QUERIES	1	AGGREGATION_TABLE_MODEL
5	shared_create_project	Create project	QUERIES	1	AGGREGATION_TABLE_MODEL
6	export_flow_datasets	Export flow datasets	QUERIES	1	AGGREGATION_TABLE_MODEL
7	retrieve_fcs_events	Retrieve FCS events for plotting	QUERIES	1	AGGREGATION_TABLE_MODEL
8	dss-monitoring-initialization	DSS Monitoring Initialization	QUERIES	1	AGGREGATION_TABLE_MODEL
9	export_microscopy_datasets	Copy microscopy datasets to user folder	QUERIES	1	AGGREGATION_TABLE_MODEL
10	upgrade_experiment	Update outdated flow experiment	QUERIES	1	AGGREGATION_TABLE_MODEL
11	path-info-db-consistency-check	Path Info DB consistency check	PROCESSING	1	\N
12	dropboxReporter	Jython dropbox monitor	QUERIES	1	AGGREGATION_TABLE_MODEL
\.


--
-- Data for Name: data_stores; Type: TABLE DATA; Schema: public; Owner: -
--

COPY data_stores (id, uuid, code, download_url, remote_url, session_token, registration_timestamp, modification_timestamp, is_archiver_configured, data_source_definitions) FROM stdin;
1	30D1C134-E7C8-485A-BB8F-B4569DA0333F	DSS1	https://localhost:9003	https://127.0.0.1:9003	200930090153937-6C1EA60A18F8E5DDE5889C16B301A2AD	2020-09-30 09:01:54.320439+02	2020-09-30 09:01:54.482+02	f	code=imaging-db\tdriverClassName=org.postgresql.Driver\thostPart=localhost\tsid=imaging_test_openbis_sync_big_harvester\tusername=felmer\tpassword=\t\ncode=openbis-db\tdriverClassName=org.postgresql.Driver\tsid=openbis_test_openbis_sync_big_harvester\tusername=felmer\tpassword=\t\ncode=path-info-db\tdriverClassName=org.postgresql.Driver\tsid=pathinfo_test_openbis_sync_big_harvester\tusername=felmer\tpassword=\t\n
\.


--
-- Data for Name: data_types; Type: TABLE DATA; Schema: public; Owner: -
--

COPY data_types (id, code, description) FROM stdin;
1	VARCHAR	Short text
2	MULTILINE_VARCHAR	Long text
3	INTEGER	Integer number
4	REAL	Real number, i.e. an inexact, variable-precision numeric type
5	BOOLEAN	True or False
6	TIMESTAMP	Both date and time. Format: yyyy-mm-dd hh:mm:ss
7	CONTROLLEDVOCABULARY	Controlled Vocabulary
8	MATERIAL	Reference to a material
9	HYPERLINK	Address of a web page
10	XML	XML document
11	SAMPLE	Reference to a sample
12	DATE	Date. Format: yyyy-mm-dd
\.


--
-- Data for Name: database_version_logs; Type: TABLE DATA; Schema: public; Owner: -
--

COPY database_version_logs (db_version, module_name, run_status, run_status_timestamp, module_code, run_exception) FROM stdin;
184	./sql/postgresql/184/domains-184.sql	SUCCESS	2020-09-30 09:00:52.693	\\x2d2d204372656174696e6720646f6d61696e730a0a43524541544520444f4d41494e20415554484f52495a4154494f4e5f524f4c4520415320564152434841522834302920434845434b202856414c554520494e20282741444d494e272c2027504f5745525f55534552272c202755534552272c20274f42534552564552272c202745544c5f5345525645522729293b0a43524541544520444f4d41494e20424f4f4c45414e5f4348415220415320424f4f4c45414e2044454641554c542046414c53453b0a43524541544520444f4d41494e20424f4f4c45414e5f434841525f4f525f554e4b4e4f574e20415320434841522831292044454641554c542027552720434845434b202856414c554520494e20282746272c202754272c2027552729293b0a43524541544520444f4d41494e20434f4445204153205641524348415228313030293b0a43524541544520444f4d41494e2053414d504c455f4944454e544946494552204153205641524348415228343034293b202d2d202f434f44452f434f44452f434f44453a434f44450a43524541544520444f4d41494e20434f4c554d4e5f4c4142454c204153205641524348415228313238293b0a43524541544520444f4d41494e20444154415f53544f52455f534552564943455f4b494e4420415320564152434841522834302920434845434b202856414c554520494e20282750524f43455353494e47272c2027515545524945532729293b0a43524541544520444f4d41494e20444154415f53544f52455f534552564943455f5245504f5254494e475f504c5547494e5f5459504520415320564152434841522834302920434845434b202856414c554520494e2028275441424c455f4d4f44454c272c20274453535f4c494e4b272c20274147475245474154494f4e5f5441424c455f4d4f44454c2729293b0a43524541544520444f4d41494e204556454e545f5459504520415320564152434841522834302920434845434b202856414c554520494e20282744454c4554494f4e272c20274d4f56454d454e54272c2027465245455a494e472729293b0a43524541544520444f4d41494e2046494c452041532042595445413b0a43524541544520444f4d41494e2046494c455f4e414d45204153205641524348415228323535293b0a43524541544520444f4d41494e20544558545f56414c554520415320544558543b0a43524541544520444f4d41494e204f424a4543545f4e414d452041532056415243484152283530293b0a43524541544520444f4d41494e205245414c5f56414c5545204153205245414c3b0a43524541544520444f4d41494e20544543485f494420415320424947494e543b0a43524541544520444f4d41494e2054494d455f5354414d502041532054494d455354414d5020574954482054494d45205a4f4e453b0a43524541544520444f4d41494e2054494d455f5354414d505f44464c2041532054494d455354414d5020574954482054494d45205a4f4e45204e4f54204e554c4c2044454641554c542043555252454e545f54494d455354414d503b0a43524541544520444f4d41494e20555345525f49442041532056415243484152283530293b0a43524541544520444f4d41494e205449544c455f313030204153205641524348415228313030293b0a43524541544520444f4d41494e20475249445f45585052455353494f4e20415320564152434841522832303030293b0a43524541544520444f4d41494e20475249445f4944204153205641524348415228323030293b0a43524541544520444f4d41494e204f5244494e414c5f494e5420415320424947494e5420434845434b202856414c5545203e2030293b0a43524541544520444f4d41494e204445534352495054494f4e5f3230303020415320564152434841522832303030293b0a43524541544520444f4d41494e20415243484956494e475f5354415455532041532056415243484152283130302920434845434b202856414c554520494e2028274c4f434b4544272c2027415641494c41424c45272c20274152434849564544272c2027415243484956455f50454e44494e47272c2027554e415243484956455f50454e44494e47272c20274241434b55505f50454e44494e472729293b0a43524541544520444f4d41494e2051554552595f5459504520415320564152434841522834302920434845434b202856414c554520494e20282747454e45524943272c20274558504552494d454e54272c202753414d504c45272c2027444154415f534554272c20274d4154455249414c2729293b0a43524541544520444f4d41494e20454e544954595f4b494e4420415320564152434841522834302920434845434b202856414c554520494e20282753414d504c45272c20274558504552494d454e54272c2027444154415f534554272c20274d4154455249414c2729293b0a43524541544520444f4d41494e205343524950545f5459504520415320564152434841522834302920434845434b202856414c554520494e20282744594e414d49435f50524f5045525459272c20274d414e414745445f50524f5045525459272c2027454e544954595f56414c49444154494f4e2729293b0a43524541544520444f4d41494e204944454e544946494552204153205641524348415228323030293b0a43524541544520444f4d41494e20444154415f5345545f4b494e4420415320564152434841522834302920434845434b202856414c554520494e202827504859534943414c272c20274c494e4b272c2027434f4e5441494e45522729293b0a43524541544520444f4d41494e20504c5547494e5f5459504520415320564152434841522834302920434845434b202856414c554520494e2028274a5954484f4e272c20275052454445504c4f5945442729293b0a43524541544520444f4d41494e204f5045524154494f4e5f455845435554494f4e5f535441544520415320564152434841522834302920434845434b202856414c554520494e2028274e4557272c20275343484544554c4544272c202752554e4e494e47272c202746494e4953484544272c20274641494c45442729293b0a43524541544520444f4d41494e204f5045524154494f4e5f455845435554494f4e5f415641494c4142494c49545920415320564152434841522834302920434845434b202856414c554520494e202827415641494c41424c45272c2744454c4554455f50454e44494e47272c2744454c45544544272c2754494d455f4f55545f50454e44494e47272c2754494d45445f4f55542729293b0a43524541544520444f4d41494e2045444d535f414444524553535f54595045204153205445585420434845434b202856414c554520494e2028274f50454e424953272c202755524c272c202746494c455f53595354454d2729293b0a43524541544520444f4d41494e204c4f434154494f4e5f54595045204153205445585420434845434b202856414c554520494e2028274f50454e424953272c202755524c272c202746494c455f53595354454d5f504c41494e272c202746494c455f53595354454d5f4749542729293b0a	\N
184	./sql/generic/184/schema-184.sql	SUCCESS	2020-09-30 09:00:54.495	\\	\N
184	./sql/postgresql/184/function-184.sql	SUCCESS	2020-09-30 09:00:54.976	\\	\N
184	./sql/postgresql/184/grants-184.sql	SUCCESS	2020-09-30 09:00:55.006	\\	\N
184	./sql/generic/184/data-184.sql	SUCCESS	2020-09-30 09:00:55.145	\\x2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a2d2d2020507572706f73653a2020496e7365727420616e20696e697469616c20646174612073657420696e746f20746865207461626c6520504552534f4e530a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a0a696e7365727420696e746f20706572736f6e730a2869640a2c66697273745f6e616d650a2c6c6173745f6e616d650a2c757365725f69640a2c656d61696c290a76616c7565730a286e65787476616c2827504552534f4e5f49445f53455127290a2c27270a2c2753797374656d2055736572270a2c2773797374656d270a2c2727293b0a0a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a2d2d2020507572706f73653a202043726561746520436f6e74726f6c6c656420566f636162756c6172792053544f524147455f464f524d41540a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a696e7365727420696e746f20636f6e74726f6c6c65645f766f636162756c6172696573200a20202020202020282069640a202020202020202c20636f64650a202020202020202c206465736372697074696f6e0a202020202020202c20706572735f69645f726567697374657265720a202020202020202c2069735f6d616e616765645f696e7465726e616c6c79290a76616c7565732020286e65787476616c2827434f4e54524f4c4c45445f564f434142554c4152595f49445f53455127290a202020202020202c202753544f524147455f464f524d4154270a202020202020202c2027546865206f6e2d6469736b2073746f7261676520666f726d6174206f662061206461746120736574270a202020202020202c202873656c6563742069642066726f6d20706572736f6e7320776865726520757365725f6964203d2773797374656d27290a202020202020202c2074727565293b0a0a0a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a2d2d2020507572706f73653a202043726561746520436f6e74726f6c6c656420566f636162756c617279205465726d7320666f722053544f524147455f464f524d41540a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a696e7365727420696e746f20636f6e74726f6c6c65645f766f636162756c6172795f7465726d73200a20202020202020282069640a202020202020202c20636f64650a202020202020202c20636f766f5f6964200a202020202020202c20706572735f69645f726567697374657265720a202020202020202c206f7264696e616c20290a76616c7565732020286e65787476616c2827435654455f49445f53455127290a202020202020202c202750524f5052494554415259270a202020202020202c202873656c6563742069642066726f6d20636f6e74726f6c6c65645f766f636162756c617269657320776865726520636f6465203d202753544f524147455f464f524d41542720616e642069735f6d616e616765645f696e7465726e616c6c79203d2074727565290a202020202020202c202873656c6563742069642066726f6d20706572736f6e7320776865726520757365725f6964203d2773797374656d27290a202020202020202c2031293b0a0a696e7365727420696e746f20636f6e74726f6c6c65645f766f636162756c6172795f7465726d73200a20202020202020282069640a202020202020202c20636f64650a202020202020202c20636f766f5f6964200a202020202020202c20706572735f69645f726567697374657265720a202020202020202c206f7264696e616c290a76616c7565732020286e65787476616c2827435654455f49445f53455127290a202020202020202c20274244535f4449524543544f5259270a202020202020202c202873656c6563742069642066726f6d20636f6e74726f6c6c65645f766f636162756c617269657320776865726520636f6465203d202753544f524147455f464f524d41542720616e642069735f6d616e616765645f696e7465726e616c6c79203d2074727565290a202020202020202c202873656c6563742069642066726f6d20706572736f6e7320776865726520757365725f6964203d2773797374656d27290a202020202020202c2032293b0a0a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a2d2d2020507572706f73653a2020496e7365727420616e20696e697469616c20646174612073657420696e746f20746865207461626c6520444154415f54595045530a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a0a696e7365727420696e746f20646174615f74797065730a2869640a2c636f64650a2c6465736372697074696f6e290a76616c756573200a286e65787476616c2827444154415f545950455f49445f53455127290a2c2756415243484152270a2c2753686f72742074657874270a293b0a0a696e7365727420696e746f20646174615f74797065730a2869640a202c636f64650a202c6465736372697074696f6e290a2076616c756573200a20286e65787476616c2827444154415f545950455f49445f53455127290a202c274d554c54494c494e455f56415243484152270a202c274c6f6e672074657874270a293b0a0a696e7365727420696e746f20646174615f74797065730a2869640a2c636f64650a2c6465736372697074696f6e290a76616c756573200a286e65787476616c2827444154415f545950455f49445f53455127290a2c27494e5445474552270a2c27496e7465676572206e756d626572270a293b0a0a696e7365727420696e746f20646174615f74797065730a2869640a2c636f64650a2c6465736372697074696f6e290a76616c756573200a286e65787476616c2827444154415f545950455f49445f53455127290a2c275245414c270a2c275265616c206e756d6265722c20692e652e20616e20696e65786163742c207661726961626c652d707265636973696f6e206e756d657269632074797065270a293b0a0a696e7365727420696e746f20646174615f74797065730a2869640a2c636f64650a2c6465736372697074696f6e290a76616c756573200a286e65787476616c2827444154415f545950455f49445f53455127290a2c27424f4f4c45414e270a2c2754727565206f722046616c7365270a293b0a0a696e7365727420696e746f20646174615f74797065730a2869640a2c636f64650a2c6465736372697074696f6e290a76616c756573200a286e65787476616c2827444154415f545950455f49445f53455127290a2c2754494d455354414d50270a2c27426f7468206461746520616e642074696d652e20466f726d61743a20797979792d6d6d2d64642068683a6d6d3a7373270a293b0a0a696e7365727420696e746f20646174615f74797065730a2869640a202c636f64650a202c6465736372697074696f6e290a2076616c756573200a20286e65787476616c2827444154415f545950455f49445f53455127290a202c27434f4e54524f4c4c4544564f434142554c415259270a202c27436f6e74726f6c6c656420566f636162756c617279270a293b0a0a696e7365727420696e746f20646174615f74797065730a2869640a202c636f64650a202c6465736372697074696f6e290a2076616c756573200a20286e65787476616c2827444154415f545950455f49445f53455127290a202c274d4154455249414c270a202c275265666572656e636520746f2061206d6174657269616c270a293b0a0a696e7365727420696e746f20646174615f74797065730a2869640a202c636f64650a202c6465736372697074696f6e290a2076616c756573200a20286e65787476616c2827444154415f545950455f49445f53455127290a202c2748595045524c494e4b270a202c2741646472657373206f662061207765622070616765270a293b0a0a696e7365727420696e746f20646174615f74797065730a2869640a202c636f64650a202c6465736372697074696f6e290a2076616c756573200a20286e65787476616c2827444154415f545950455f49445f53455127290a202c27584d4c270a202c27584d4c20646f63756d656e74270a293b0a0a696e7365727420696e746f20646174615f74797065730a2869640a202c636f64650a202c6465736372697074696f6e290a2076616c756573200a20286e65787476616c2827444154415f545950455f49445f53455127290a202c2753414d504c45270a202c275265666572656e636520746f20612073616d706c65270a293b0a0a696e7365727420696e746f20646174615f74797065730a2869640a2c636f64650a2c6465736372697074696f6e290a76616c756573200a286e65787476616c2827444154415f545950455f49445f53455127290a2c2744415445270a2c27446174652e20466f726d61743a20797979792d6d6d2d6464270a293b0a0a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a2d2d2020507572706f73653a2020496e7365727420616e20696e697469616c20646174612073657420696e746f20746865207461626c652050524f50455254595f54595045530a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a0a696e7365727420696e746f2070726f70657274795f74797065730a2869640a2c636f64650a2c6465736372697074696f6e0a2c6c6162656c0a2c646174795f69640a2c706572735f69645f72656769737465726572290a76616c756573200a286e65787476616c282750524f50455254595f545950455f49445f53455127290a2c274445534352495054494f4e270a2c2741204465736372697074696f6e270a2c274465736372697074696f6e270a2c2873656c6563742069642066726f6d20646174615f747970657320776865726520636f6465203d275641524348415227290a2c2873656c6563742069642066726f6d20706572736f6e7320776865726520757365725f6964203d2773797374656d27290a293b0a0a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a2d2d2020507572706f73653a2020496e7365727420616e20696e697469616c20646174612073657420696e746f20746865207461626c65204558504552494d454e545f54595045530a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a0a696e7365727420696e746f206578706572696d656e745f74797065730a2869640a2c636f64650a2c6465736372697074696f6e290a76616c756573200a286e65787476616c28274558504552494d454e545f545950455f49445f53455127290a2c27554e4b4e4f574e270a2c27556e6b6e6f776e270a293b0a0a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a2d2d2020507572706f73653a2020496e7365727420616e20696e697469616c20646174612073657420696e746f20746865207461626c652053414d504c455f54595045530a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a0a696e7365727420696e746f2073616d706c655f74797065730a2869640a2c636f64650a2c6465736372697074696f6e290a76616c756573200a286e65787476616c282753414d504c455f545950455f49445f53455127290a2c27554e4b4e4f574e270a2c27556e6b6e6f776e270a293b0a0a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a2d2d2020507572706f73653a2020496e7365727420616e20696e697469616c20646174612073657420696e746f20746865207461626c6520444154415f5345545f54595045530a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a0a696e7365727420696e746f20646174615f7365745f74797065730a2869640a2c636f64650a2c6465736372697074696f6e290a76616c756573200a286e65787476616c2827444154415f5345545f545950455f49445f53455127290a2c27554e4b4e4f574e270a2c27556e6b6e6f776e270a293b0a0a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a2d2d2020507572706f73653a2020496e7365727420616e20696e697469616c20646174612073657420696e746f20746865207461626c652046494c455f464f524d41545f54595045530a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a0a696e7365727420696e746f2066696c655f666f726d61745f74797065730a2869640a2c636f64650a2c6465736372697074696f6e290a76616c756573200a286e65787476616c282746494c455f464f524d41545f545950455f49445f53455127290a2c2748444635270a2c2748696572617263686963616c204461746120466f726d61742046696c652c2076657273696f6e2035270a293b0a0a696e7365727420696e746f2066696c655f666f726d61745f74797065730a2869640a2c636f64650a2c6465736372697074696f6e290a76616c756573200a286e65787476616c282746494c455f464f524d41545f545950455f49445f53455127290a2c2750524f5052494554415259270a2c2750726f707269657461727920466f726d61742046696c65270a293b0a0a696e7365727420696e746f2066696c655f666f726d61745f74797065730a2869640a2c636f64650a2c6465736372697074696f6e0a290a76616c756573200a286e65787476616c282746494c455f464f524d41545f545950455f49445f53455127290a2c27535246270a2c2753657175656e6365205265616420466f726d61742046696c65270a293b0a0a696e7365727420696e746f2066696c655f666f726d61745f74797065730a2869640a2c636f64650a2c6465736372697074696f6e0a290a76616c756573200a286e65787476616c282746494c455f464f524d41545f545950455f49445f53455127290a2c2754494646270a2c27544946462046696c65270a293b0a0a696e7365727420696e746f2066696c655f666f726d61745f74797065730a2869640a2c636f64650a2c6465736372697074696f6e0a290a76616c756573200a286e65787476616c282746494c455f464f524d41545f545950455f49445f53455127290a2c27545356270a2c27546162205365706172617465642056616c7565732046696c65270a293b0a0a696e7365727420696e746f2066696c655f666f726d61745f74797065730a2869640a2c636f64650a2c6465736372697074696f6e0a290a76616c756573200a286e65787476616c282746494c455f464f524d41545f545950455f49445f53455127290a2c27584d4c270a2c27584d4c2046696c65270a293b0a0a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a2d2d2020507572706f73653a2020496e7365727420616e20696e697469616c20646174612073657420696e746f20746865207461626c65204c4f4341544f525f54595045530a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a0a696e7365727420696e746f206c6f6361746f725f74797065730a2869640a2c636f64650a2c6465736372697074696f6e290a76616c756573200a286e65787476616c28274c4f4341544f525f545950455f49445f53455127290a2c2752454c41544956455f4c4f434154494f4e270a2c2752656c6174697665204c6f636174696f6e270a293b0a0a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a2d2d2020507572706f73653a2020496e7365727420616e20696e697469616c206461746120696e746f207461626c652052454c4154494f4e534849505f54595045530a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a0a696e7365727420696e746f2072656c6174696f6e736869705f74797065730a2869642c200a636f64652c200a6c6162656c2c200a706172656e745f6c6162656c2c200a6368696c645f6c6162656c2c200a6465736372697074696f6e2c200a706572735f69645f726567697374657265722c200a69735f6d616e616765645f696e7465726e616c6c790a29200a76616c7565730a280a6e65787476616c282752454c4154494f4e534849505f545950455f49445f53455127292c0a27504152454e545f4348494c44272c0a27506172656e74202d204368696c64272c200a27506172656e74272c200a274368696c64272c200a27506172656e74202d204368696c642072656c6174696f6e73686970272c200a2873656c6563742069642066726f6d20706572736f6e7320776865726520757365725f6964203d2773797374656d27292c200a2754270a293b0a0a696e7365727420696e746f2072656c6174696f6e736869705f74797065730a2869642c200a636f64652c200a6c6162656c2c200a706172656e745f6c6162656c2c200a6368696c645f6c6162656c2c200a6465736372697074696f6e2c200a706572735f69645f726567697374657265722c200a69735f6d616e616765645f696e7465726e616c6c7929200a76616c7565730a280a6e65787476616c282752454c4154494f4e534849505f545950455f49445f53455127292c0a27504c4154455f434f4e54524f4c5f4c41594f5554272c0a27506c617465202d20436f6e74726f6c204c61796f7574272c200a27506c617465272c200a27436f6e74726f6c204c61796f7574272c200a27506c617465202d20436f6e74726f6c204c61796f75742072656c6174696f6e73686970272c200a2873656c6563742069642066726f6d20706572736f6e7320776865726520757365725f6964203d2773797374656d27292c200a2754270a293b0a0a696e7365727420696e746f2072656c6174696f6e736869705f74797065730a2869642c200a636f64652c200a6c6162656c2c200a706172656e745f6c6162656c2c200a6368696c645f6c6162656c2c200a6465736372697074696f6e2c200a706572735f69645f726567697374657265722c200a69735f6d616e616765645f696e7465726e616c6c7929200a76616c7565730a280a6e65787476616c282752454c4154494f4e534849505f545950455f49445f53455127292c0a27434f4e5441494e45525f434f4d504f4e454e54272c0a27436f6e7461696e6572202d20436f6d706f6e656e74272c200a27436f6e7461696e6572272c200a27436f6d706f6e656e74272c200a27436f6e7461696e6572202d20436f6d706f6e656e742072656c6174696f6e73686970272c200a2873656c6563742069642066726f6d20706572736f6e7320776865726520757365725f6964203d2773797374656d27292c200a275427293b0a0a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a2d2d2020507572706f73653a20204372656174652064656661756c742073706163650a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a0a696e7365727420696e746f207370616365730a2869642c0a636f64652c0a706572735f69645f72656769737465726572290a76616c7565730a280a6e65787476616c282753504143455f49445f53455127292c0a2744454641554c54272c0a2873656c6563742069642066726f6d20706572736f6e7320776865726520757365725f6964203d2773797374656d27290a293b0a0a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a2d2d2020507572706f73653a20204372656174652064656661756c742070726f6a6563740a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a0a73656c656374206e65787476616c282750524f4a4543545f49445f53455127293b0a696e7365727420696e746f2070726f6a656374730a2869642c0a7065726d5f69642c0a636f64652c0a73706163655f69642c0a706572735f69645f72656769737465726572290a76616c7565730a280a6375727276616c282750524f4a4543545f49445f53455127292c0a746f5f63686172286e6f7728292c2027595959594d4d4444484832344d4953534d5327297c7c272d277c7c6375727276616c282750524f4a4543545f49445f53455127292c0a2744454641554c54272c0a2873656c6563742069642066726f6d2073706163657320776865726520636f6465203d202744454641554c5427292c0a2873656c6563742069642066726f6d20706572736f6e7320776865726520757365725f6964203d2773797374656d27290a293b0a0a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a2d2d2020507572706f73653a20204372656174652064656661756c74206578706572696d656e740a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a0a73656c656374206e65787476616c28274558504552494d454e545f49445f53455127293b0a696e7365727420696e746f206578706572696d656e74735f616c6c0a2869642c0a7065726d5f69642c0a636f64652c0a70726f6a5f69642c0a657874795f69642c0a706572735f69645f726567697374657265722c0a7473766563746f725f646f63756d656e74290a76616c7565730a280a6375727276616c28274558504552494d454e545f49445f53455127292c0a746f5f63686172286e6f7728292c2027595959594d4d4444484832344d4953534d5327297c7c272d277c7c6375727276616c28274558504552494d454e545f49445f53455127292c0a2744454641554c54272c0a2873656c6563742069642066726f6d2070726f6a6563747320776865726520636f6465203d202744454641554c5427292c0a2873656c6563742069642066726f6d206578706572696d656e745f747970657320776865726520636f6465203d2027554e4b4e4f574e27292c0a2873656c6563742069642066726f6d20706572736f6e7320776865726520757365725f6964203d2773797374656d27292c0a28746f5f63686172286e6f7728292c2027595959594d4d4444484832344d4953534d5327297c7c272d277c7c6375727276616c28274558504552494d454e545f49445f5345512729207c7c20273a3127293a3a7473766563746f72207c7c0a20202744454641554c543a31273a3a7473766563746f72207c7c20272f44454641554c542f44454641554c542f44454641554c543a31273a3a7473766563746f720a293b0a0a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a2d2d2020507572706f73653a20204372656174652064656661756c742073616d706c650a2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d0a0a73656c656374206e65787476616c282753414d504c455f49445f53455127293b0a696e7365727420696e746f2073616d706c65735f616c6c0a2869642c0a7065726d5f69642c0a636f64652c0a657870655f69642c0a73706163655f69642c0a736174795f69642c0a706572735f69645f726567697374657265722c0a7473766563746f725f646f63756d656e74290a76616c7565730a280a6375727276616c282753414d504c455f49445f53455127292c0a746f5f63686172286e6f7728292c2027595959594d4d4444484832344d4953534d5327297c7c272d277c7c6375727276616c282753414d504c455f49445f53455127292c0a2744454641554c54272c0a2873656c6563742069642066726f6d206578706572696d656e747320776865726520636f6465203d202744454641554c5427292c0a2873656c6563742069642066726f6d2073706163657320776865726520636f6465203d202744454641554c5427292c0a2873656c6563742069642066726f6d2073616d706c655f747970657320776865726520636f6465203d2027554e4b4e4f574e27292c0a2873656c6563742069642066726f6d20706572736f6e7320776865726520757365725f6964203d2773797374656d27292c0a28746f5f63686172286e6f7728292c2027595959594d4d4444484832344d4953534d5327297c7c272d277c7c6375727276616c282753414d504c455f49445f5345512729207c7c20273a3127293a3a7473766563746f72207c7c0a20202744454641554c543a31273a3a7473766563746f72207c7c20272f44454641554c542f44454641554c543a31273a3a7473766563746f720a293b0a0a	\N
\.


--
-- Data for Name: deletions; Type: TABLE DATA; Schema: public; Owner: -
--

COPY deletions (id, pers_id_registerer, registration_timestamp, reason) FROM stdin;
\.


--
-- Data for Name: entity_operations_log; Type: TABLE DATA; Schema: public; Owner: -
--

COPY entity_operations_log (id, registration_id) FROM stdin;
\.


--
-- Data for Name: events; Type: TABLE DATA; Schema: public; Owner: -
--

COPY events (id, event_type, description, reason, pers_id_registerer, registration_timestamp, entity_type, identifiers, content, exac_id) FROM stdin;
\.


--
-- Data for Name: experiment_properties; Type: TABLE DATA; Schema: public; Owner: -
--

COPY experiment_properties (id, expe_id, etpt_id, value, cvte_id, mate_prop_id, samp_prop_id, pers_id_registerer, registration_timestamp, pers_id_author, modification_timestamp, expe_frozen, tsvector_document) FROM stdin;
\.


--
-- Data for Name: experiment_properties_history; Type: TABLE DATA; Schema: public; Owner: -
--

COPY experiment_properties_history (id, expe_id, etpt_id, value, vocabulary_term, material, sample, pers_id_author, valid_from_timestamp, valid_until_timestamp) FROM stdin;
\.


--
-- Data for Name: experiment_relationships_history; Type: TABLE DATA; Schema: public; Owner: -
--

COPY experiment_relationships_history (id, main_expe_id, relation_type, samp_id, data_id, entity_perm_id, pers_id_author, valid_from_timestamp, valid_until_timestamp, proj_id) FROM stdin;
1	1	OWNED	\N	\N	20200930090055015-1	\N	2020-09-30 09:00:55.015791+02	\N	1
2	1	OWNER	1	\N	20200930090055015-1	\N	2020-09-30 09:00:55.015791+02	\N	\N
\.


--
-- Data for Name: experiment_type_property_types; Type: TABLE DATA; Schema: public; Owner: -
--

COPY experiment_type_property_types (id, exty_id, prty_id, is_mandatory, is_managed_internally, pers_id_registerer, registration_timestamp, ordinal, section, script_id, is_shown_edit, show_raw_value) FROM stdin;
1	2	32	f	f	1	2020-09-30 09:01:12.98+02	4	\N	\N	f	f
2	3	3	f	f	1	2020-09-30 09:01:15.277+02	2	\N	\N	f	f
3	3	99	f	f	1	2020-09-30 09:01:15.311+02	3	\N	\N	f	f
\.


--
-- Data for Name: experiment_types; Type: TABLE DATA; Schema: public; Owner: -
--

COPY experiment_types (id, code, description, modification_timestamp, validation_script_id) FROM stdin;
1	UNKNOWN	Unknown	2020-09-30 09:00:55.015791+02	\N
2	HT_SEQUENCING	High Throughput Sequencing (e.g. Illumina HiSeq, Illumina GA)	2020-09-30 09:01:11.893+02	\N
3	COLLECTION	Used as a folder for things.	2020-09-30 09:01:15.107+02	\N
\.


--
-- Data for Name: experiments_all; Type: TABLE DATA; Schema: public; Owner: -
--

COPY experiments_all (id, perm_id, code, exty_id, pers_id_registerer, registration_timestamp, modification_timestamp, proj_id, del_id, orig_del, is_public, pers_id_modifier, version, frozen, frozen_for_samp, frozen_for_data, proj_frozen, tsvector_document) FROM stdin;
1	20200930090055015-1	DEFAULT	1	1	2020-09-30 09:00:55.015791+02	2020-09-30 09:00:55.015791+02	1	\N	\N	f	\N	0	f	f	f	f	'/default/default/default':3 '20200930090055015-1':1 'default':2
\.


--
-- Data for Name: external_data; Type: TABLE DATA; Schema: public; Owner: -
--

COPY external_data (id, share_id, size, location, ffty_id, loty_id, cvte_id_stor_fmt, is_complete, cvte_id_store, status, present_in_archive, speed_hint, storage_confirmation, h5_folders, h5ar_folders, archiving_requested) FROM stdin;
\.


--
-- Data for Name: external_data_management_systems; Type: TABLE DATA; Schema: public; Owner: -
--

COPY external_data_management_systems (id, code, label, address, address_type) FROM stdin;
\.


--
-- Data for Name: file_format_types; Type: TABLE DATA; Schema: public; Owner: -
--

COPY file_format_types (id, code, description) FROM stdin;
1	HDF5	Hierarchical Data Format File, version 5
2	PROPRIETARY	Proprietary Format File
3	SRF	Sequence Read Format File
4	TIFF	TIFF File
5	TSV	Tab Separated Values File
6	XML	XML File
7	FASTQ_PHRED_64	FastQ Format with PHRED+64 quality values (as deliverd by Illumina GA Pipeline >= 1.3)
8	JPG	\N
9	PNG	\N
10	UNKNOWN	Unknown file format
11	CSV	files with values separated by comma or semicolon
12	FCS	Flow Cytometry Standard file.
\.


--
-- Data for Name: filters; Type: TABLE DATA; Schema: public; Owner: -
--

COPY filters (id, name, description, registration_timestamp, pers_id_registerer, modification_timestamp, expression, is_public, grid_id) FROM stdin;
\.


--
-- Data for Name: grid_custom_columns; Type: TABLE DATA; Schema: public; Owner: -
--

COPY grid_custom_columns (id, code, label, description, registration_timestamp, pers_id_registerer, modification_timestamp, expression, is_public, grid_id) FROM stdin;
\.


--
-- Data for Name: link_data; Type: TABLE DATA; Schema: public; Owner: -
--

COPY link_data (id, data_frozen) FROM stdin;
\.


--
-- Data for Name: locator_types; Type: TABLE DATA; Schema: public; Owner: -
--

COPY locator_types (id, code, description) FROM stdin;
1	RELATIVE_LOCATION	Relative Location
\.


--
-- Data for Name: material_properties; Type: TABLE DATA; Schema: public; Owner: -
--

COPY material_properties (id, mate_id, mtpt_id, value, registration_timestamp, pers_id_author, modification_timestamp, pers_id_registerer, cvte_id, mate_prop_id, tsvector_document) FROM stdin;
\.


--
-- Data for Name: material_properties_history; Type: TABLE DATA; Schema: public; Owner: -
--

COPY material_properties_history (id, mate_id, mtpt_id, value, vocabulary_term, material, pers_id_author, valid_from_timestamp, valid_until_timestamp) FROM stdin;
\.


--
-- Data for Name: material_type_property_types; Type: TABLE DATA; Schema: public; Owner: -
--

COPY material_type_property_types (id, maty_id, prty_id, is_mandatory, is_managed_internally, registration_timestamp, pers_id_registerer, ordinal, section, script_id, is_shown_edit, show_raw_value) FROM stdin;
\.


--
-- Data for Name: material_types; Type: TABLE DATA; Schema: public; Owner: -
--

COPY material_types (id, code, description, modification_timestamp, validation_script_id) FROM stdin;
\.


--
-- Data for Name: materials; Type: TABLE DATA; Schema: public; Owner: -
--

COPY materials (id, code, maty_id, pers_id_registerer, registration_timestamp, modification_timestamp, tsvector_document) FROM stdin;
\.


--
-- Data for Name: metaproject_assignments_all; Type: TABLE DATA; Schema: public; Owner: -
--

COPY metaproject_assignments_all (id, mepr_id, expe_id, samp_id, data_id, mate_id, del_id, creation_date) FROM stdin;
\.


--
-- Data for Name: metaprojects; Type: TABLE DATA; Schema: public; Owner: -
--

COPY metaprojects (id, name, description, owner, private, creation_date) FROM stdin;
\.


--
-- Data for Name: operation_executions; Type: TABLE DATA; Schema: public; Owner: -
--

COPY operation_executions (id, code, state, owner, description, notification, availability, availability_time, summary_operations, summary_progress, summary_error, summary_results, summary_availability, summary_availability_time, details_path, details_availability, details_availability_time, creation_date, start_date, finish_date) FROM stdin;
\.


--
-- Data for Name: persons; Type: TABLE DATA; Schema: public; Owner: -
--

COPY persons (id, first_name, last_name, user_id, email, space_id, registration_timestamp, pers_id_registerer, display_settings, is_active) FROM stdin;
1		System User	system		\N	2020-09-30 09:00:55.015791+02	\N	\N	t
2	Ryszard	Grass	etlserver	franz-josef.elmer@systemsx.ch	\N	2020-09-30 09:01:53.828477+02	1	\\xaced00057372004163682e73797374656d73782e636973642e6f70656e6269732e67656e657269632e7368617265642e62617369632e64746f2e446973706c617953657474696e6773000000000000000102000f5a0009646562756767696e675a001669676e6f72654c617374486973746f7279546f6b656e5a00176c65676163794d656461646174615549456e61626c65644c000e636f6c756d6e53657474696e677374000f4c6a6176612f7574696c2f4d61703b4c001b637573746f6d576562417070446973706c617953657474696e677371007e00014c000e64656661756c7450726f6a6563747400124c6a6176612f6c616e672f537472696e673b4c001064726f70446f776e53657474696e677371007e00014c00166c617374486973746f7279546f6b656e4f724e756c6c71007e00024c001670616e656c436f6c6c617073656453657474696e677371007e00014c001170616e656c53697a6553657474696e677371007e00014c0015706f72746c6574436f6e66696775726174696f6e7371007e00014c001d7265616c4e756d626572466f726d6174696e67506172616d65746572737400514c63682f73797374656d73782f636973642f6f70656e6269732f67656e657269632f7368617265642f62617369632f64746f2f5265616c4e756d626572466f726d6174696e67506172616d65746572733b4c000b74616253657474696e677371007e00014c001a746563686e6f6c6f6779537065636966696353657474696e677371007e00014c00067669736974737400104c6a6176612f7574696c2f4c6973743b7870000000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000000770800000010000000007870707371007e00063f400000000000007708000000100000000078707371007e00063f4000000000000077080000001000000000787371007e00063f400000000000007708000000100000000078707372004f63682e73797374656d73782e636973642e6f70656e6269732e67656e657269632e7368617265642e62617369632e64746f2e5265616c4e756d626572466f726d6174696e67506172616d657465727300000000000000010200035a0010666f726d6174696e67456e61626c6564490009707265636973696f6e5a000a736369656e746966696378700100000004007371007e00063f4000000000000077080000001000000000787371007e00063f40000000000000770800000010000000007870	t
3	Karel	Mallarmé	admin	franz-josef.elmer@systemsx.ch	\N	2020-09-30 09:02:11.925544+02	1	\\xaced00057372004163682e73797374656d73782e636973642e6f70656e6269732e67656e657269632e7368617265642e62617369632e64746f2e446973706c617953657474696e6773000000000000000102000f5a0009646562756767696e675a001669676e6f72654c617374486973746f7279546f6b656e5a00176c65676163794d656461646174615549456e61626c65644c000e636f6c756d6e53657474696e677374000f4c6a6176612f7574696c2f4d61703b4c001b637573746f6d576562417070446973706c617953657474696e677371007e00014c000e64656661756c7450726f6a6563747400124c6a6176612f6c616e672f537472696e673b4c001064726f70446f776e53657474696e677371007e00014c00166c617374486973746f7279546f6b656e4f724e756c6c71007e00024c001670616e656c436f6c6c617073656453657474696e677371007e00014c001170616e656c53697a6553657474696e677371007e00014c0015706f72746c6574436f6e66696775726174696f6e7371007e00014c001d7265616c4e756d626572466f726d6174696e67506172616d65746572737400514c63682f73797374656d73782f636973642f6f70656e6269732f67656e657269632f7368617265642f62617369632f64746f2f5265616c4e756d626572466f726d6174696e67506172616d65746572733b4c000b74616253657474696e677371007e00014c001a746563686e6f6c6f6779537065636966696353657474696e677371007e00014c00067669736974737400104c6a6176612f7574696c2f4c6973743b7870000000737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000000770800000010000000007870707371007e00063f400000000000007708000000100000000078707371007e00063f4000000000000077080000001000000000787371007e00063f400000000000007708000000100000000078707372004f63682e73797374656d73782e636973642e6f70656e6269732e67656e657269632e7368617265642e62617369632e64746f2e5265616c4e756d626572466f726d6174696e67506172616d657465727300000000000000010200035a0010666f726d6174696e67456e61626c6564490009707265636973696f6e5a000a736369656e746966696378700100000004007371007e00063f4000000000000077080000001000000000787371007e00063f40000000000000770800000010000000007870	t
\.


--
-- Data for Name: post_registration_dataset_queue; Type: TABLE DATA; Schema: public; Owner: -
--

COPY post_registration_dataset_queue (id, ds_id) FROM stdin;
\.


--
-- Data for Name: project_relationships_history; Type: TABLE DATA; Schema: public; Owner: -
--

COPY project_relationships_history (id, main_proj_id, relation_type, expe_id, space_id, entity_perm_id, pers_id_author, valid_from_timestamp, valid_until_timestamp) FROM stdin;
1	1	OWNED	\N	1	DEFAULT	\N	2020-09-30 09:00:55.015791+02	\N
2	1	OWNER	1	\N	20200930090055015-1	\N	2020-09-30 09:00:55.015791+02	\N
\.


--
-- Data for Name: projects; Type: TABLE DATA; Schema: public; Owner: -
--

COPY projects (id, perm_id, code, space_id, pers_id_leader, description, pers_id_registerer, registration_timestamp, modification_timestamp, pers_id_modifier, version, frozen, frozen_for_exp, frozen_for_samp, space_frozen) FROM stdin;
1	20200930090055015-1	DEFAULT	1	\N	\N	1	2020-09-30 09:00:55.015791+02	2020-09-30 09:00:55.015791+02	\N	0	f	f	f	f
\.


--
-- Data for Name: property_types; Type: TABLE DATA; Schema: public; Owner: -
--

COPY property_types (id, code, description, label, daty_id, registration_timestamp, pers_id_registerer, covo_id, is_managed_internally, maty_prop_id, saty_prop_id, schema, transformation, meta_data) FROM stdin;
1	DESCRIPTION	A Description	Description	1	2020-09-30 09:00:55.015791+02	1	\N	f	\N	\N	\N	\N	\N
2	SEARCH_QUERY.CUSTOM_DATA	Additional data in custom format	Custom data	10	2020-09-30 09:01:06.833+02	1	\N	t	\N	\N	\N	\N	\N
3	NAME	Name	Name	1	2020-09-30 09:01:06.849+02	1	\N	t	\N	\N	\N	\N	\N
4	SEARCH_QUERY.FETCH_OPTIONS	V3 API fetch options	Fetch options	10	2020-09-30 09:01:06.853+02	1	\N	t	\N	\N	\N	\N	\N
5	SEARCH_QUERY.SEARCH_CRITERIA	V3 API search criteria	Search criteria	10	2020-09-30 09:01:06.858+02	1	\N	t	\N	\N	\N	\N	\N
6	AGILENT_KIT		Agilent Kit	7	2020-09-30 09:01:11.99+02	1	2	f	\N	\N	\N	\N	\N
7	ALIGNMENT_SOFTWARE		Alignment software	7	2020-09-30 09:01:12+02	1	3	f	\N	\N	\N	\N	\N
8	ANALYSIS_FINISHED		Analysis finished	6	2020-09-30 09:01:12.005+02	1	\N	f	\N	\N	\N	\N	\N
9	BARCODE_COMPLEXITY_CHECKER		Barcode_Complexity_Checker	2	2020-09-30 09:01:12.009+02	1	\N	f	\N	\N	\N	\N	\N
10	BASESCOVERED		bases Covered	3	2020-09-30 09:01:12.014+02	1	\N	f	\N	\N	\N	\N	\N
11	BIOLOGICAL_SAMPLE_ARRIVED		Arrival Date of Biological Sample	6	2020-09-30 09:01:12.018+02	1	\N	f	\N	\N	\N	\N	\N
12	CASAVA_VERSION		Casava Version	7	2020-09-30 09:01:12.024+02	1	4	f	\N	\N	\N	\N	\N
13	CELL_PLASTICITY_SYSTEMSX		Cell Plasticity (SystemsX)	5	2020-09-30 09:01:12.028+02	1	\N	f	\N	\N	\N	\N	\N
14	CHROMCOUNT		chrom Count	3	2020-09-30 09:01:12.032+02	1	\N	f	\N	\N	\N	\N	\N
15	CLUSTER_GENERATION_KIT_VERSION		CS Generation Kit Version	7	2020-09-30 09:01:12.037+02	1	5	f	\N	\N	\N	\N	\N
16	CLUSTER_STATION		Cluster Station	7	2020-09-30 09:01:12.042+02	1	6	f	\N	\N	\N	\N	\N
17	CONCENTRATION		Conc. [ng/μl]	4	2020-09-30 09:01:12.046+02	1	\N	f	\N	\N	\N	\N	\N
18	CONCENTRATION_FLOWLANE		Concentration in flow lane [pM]	4	2020-09-30 09:01:12.05+02	1	\N	f	\N	\N	\N	\N	\N
19	CONCENTRATION_ORIGINAL_ILLUMINA		Concentration (original) [ng/μl]	4	2020-09-30 09:01:12.054+02	1	\N	f	\N	\N	\N	\N	\N
20	CONCENTRATION_PREPARED_ILLUMINA		Concentration (prepared) [ng/μl]	4	2020-09-30 09:01:12.057+02	1	\N	f	\N	\N	\N	\N	\N
21	CONTACT_PERSON_EMAIL		Email of Contact Person	1	2020-09-30 09:01:12.06+02	1	\N	f	\N	\N	\N	\N	\N
22	CONTACT_PERSON_NAME		Name of Contact Person	1	2020-09-30 09:01:12.063+02	1	\N	f	\N	\N	\N	\N	\N
23	CONTROL_LANE		Control Lane	7	2020-09-30 09:01:12.069+02	1	7	f	\N	\N	\N	\N	\N
24	CREATED_ON_CS		Clustering date	6	2020-09-30 09:01:12.073+02	1	\N	f	\N	\N	\N	\N	\N
25	CS_PROTOCOL_VERSION		CS Protocol Version	1	2020-09-30 09:01:12.077+02	1	\N	f	\N	\N	\N	\N	\N
26	CYCLES		Cycles	3	2020-09-30 09:01:12.08+02	1	\N	f	\N	\N	\N	\N	\N
27	DATA_TRANSFERRED		Data transferred	6	2020-09-30 09:01:12.083+02	1	\N	f	\N	\N	\N	\N	\N
28	DNA_CONCENTRATION_OF_LIBRARY		DNA concentration of library (nM)	3	2020-09-30 09:01:12.087+02	1	\N	f	\N	\N	\N	\N	\N
29	DNA_CONCENTRATION_POOL		DNA conc. [nM] - customer value	4	2020-09-30 09:01:12.091+02	1	\N	f	\N	\N	\N	\N	\N
30	DNA_CONCENTRATION_QGF		DNA concentration of Pool [nM]	4	2020-09-30 09:01:12.095+02	1	\N	f	\N	\N	\N	\N	\N
31	END_TYPE		Paired End / Single Read	7	2020-09-30 09:01:12.1+02	1	8	f	\N	\N	\N	\N	\N
32	EXPERIMENT_DESIGN		Experiment Design	7	2020-09-30 09:01:12.105+02	1	9	f	\N	\N	\N	\N	\N
33	EXTERNAL_SAMPLE_NAME		External Sample Name	1	2020-09-30 09:01:12.109+02	1	\N	f	\N	\N	\N	\N	\N
34	FLOWCELLTYPE		Flow Cell Type	1	2020-09-30 09:01:12.112+02	1	\N	f	\N	\N	\N	\N	\N
35	FLOW_CELL_SEQUENCED_ON		Sequencing started	6	2020-09-30 09:01:12.116+02	1	\N	f	\N	\N	\N	\N	\N
36	FRAGMENT_SIZE_BASE_PAIRS		Fragment Size [base pairs]	3	2020-09-30 09:01:12.12+02	1	\N	f	\N	\N	\N	\N	\N
37	FRAGMENT_SIZE_PREPARED_ILLUMINA		Fragment Size (prepared) [base (pairs)]	3	2020-09-30 09:01:12.124+02	1	\N	f	\N	\N	\N	\N	\N
38	ILLUMINA_PIPELINE_VERSION		Pipeline Version	7	2020-09-30 09:01:12.13+02	1	17	f	\N	\N	\N	\N	\N
39	INDEX1		Index 1	7	2020-09-30 09:01:12.135+02	1	10	f	\N	\N	\N	\N	\N
40	INDEX2		Index 2	7	2020-09-30 09:01:12.141+02	1	11	f	\N	\N	\N	\N	\N
41	INDEXREAD		Length of Index Read1	3	2020-09-30 09:01:12.145+02	1	\N	f	\N	\N	\N	\N	\N
42	INDEXREAD2		Length of Index Read2	3	2020-09-30 09:01:12.15+02	1	\N	f	\N	\N	\N	\N	\N
43	INVOICE		Invoice sent?	5	2020-09-30 09:01:12.155+02	1	\N	f	\N	\N	\N	\N	\N
44	ISCOMPRESSED		Is Compressed	5	2020-09-30 09:01:12.159+02	1	\N	f	\N	\N	\N	\N	\N
45	ISSUED_COMMAND		Issued Command	2	2020-09-30 09:01:12.162+02	1	\N	f	\N	\N	\N	\N	\N
46	ISSWAPPED		Is byte swapped	3	2020-09-30 09:01:12.166+02	1	\N	f	\N	\N	\N	\N	\N
47	KIT		Library preparation kit	7	2020-09-30 09:01:12.171+02	1	12	f	\N	\N	\N	\N	\N
48	KIT_PREPARED		Sample processed	6	2020-09-30 09:01:12.174+02	1	\N	f	\N	\N	\N	\N	\N
49	LANECOUNT		Lane Count	3	2020-09-30 09:01:12.178+02	1	\N	f	\N	\N	\N	\N	\N
50	LIBRARY_PROCESSING_FAILED		Library processing failed	5	2020-09-30 09:01:12.181+02	1	\N	f	\N	\N	\N	\N	\N
51	LIBRARY_PROCESSING_POSSIBLE_YES_NO		Library processing possible	7	2020-09-30 09:01:12.187+02	1	22	f	\N	\N	\N	\N	\N
52	LIBRARY_PROCESSING_SUCCESSFUL		Library processing successful	5	2020-09-30 09:01:12.191+02	1	\N	f	\N	\N	\N	\N	\N
53	LOT		Kit Lot #	3	2020-09-30 09:01:12.194+02	1	\N	f	\N	\N	\N	\N	\N
54	MACS_VERSION		MACS VERSION	7	2020-09-30 09:01:12.2+02	1	13	f	\N	\N	\N	\N	\N
55	MAPPED_READS		Mapped reads	3	2020-09-30 09:01:12.204+02	1	\N	f	\N	\N	\N	\N	\N
56	MAX		Maximum	4	2020-09-30 09:01:12.208+02	1	\N	f	\N	\N	\N	\N	\N
57	MEAN		Mean	4	2020-09-30 09:01:12.212+02	1	\N	f	\N	\N	\N	\N	\N
58	MIN		Minimum	4	2020-09-30 09:01:12.215+02	1	\N	f	\N	\N	\N	\N	\N
59	MISMATCH_IN_INDEX		Mismatch in Index	7	2020-09-30 09:01:12.22+02	1	14	f	\N	\N	\N	\N	\N
60	NANO_DROP		Nano Drop	7	2020-09-30 09:01:12.225+02	1	15	f	\N	\N	\N	\N	\N
61	NCBI_ORGANISM_TAXONOMY		Organism (NCBI Taxonomy)	7	2020-09-30 09:01:12.231+02	1	16	f	\N	\N	\N	\N	\N
62	NM_DNA		Calculated DNA concentration of library (nM)	4	2020-09-30 09:01:12.235+02	1	\N	f	\N	\N	\N	\N	\N
63	NOTES		Notes	2	2020-09-30 09:01:12.239+02	1	\N	f	\N	\N	\N	\N	\N
64	NUMBER_OF_ATTACHMENTS		Number of Attachments	3	2020-09-30 09:01:12.243+02	1	\N	f	\N	\N	\N	\N	\N
65	PAIRED_END_KIT		Paired End Kit	1	2020-09-30 09:01:12.247+02	1	\N	f	\N	\N	\N	\N	\N
66	PERCENTAGE_ONE_MISMATCH_READS_INDEX		% One Mismatch Reads (Index)	4	2020-09-30 09:01:12.252+02	1	\N	f	\N	\N	\N	\N	\N
67	PERCENTAGE_PASSED_FILTERING		% Passes Illumina Filtering (PF)	4	2020-09-30 09:01:12.256+02	1	\N	f	\N	\N	\N	\N	\N
68	PERCENTAGE_PERFECT_INDEX_READS		% Perfect Index Reads	4	2020-09-30 09:01:12.26+02	1	\N	f	\N	\N	\N	\N	\N
69	PERCENTAGE_RAW_CLUSTERS_PER_LANE		% of raw clusters per lane	4	2020-09-30 09:01:12.265+02	1	\N	f	\N	\N	\N	\N	\N
70	PREPARED_BY		Prepared by	1	2020-09-30 09:01:12.268+02	1	\N	f	\N	\N	\N	\N	\N
71	PRIMARYDATASIZE		primary Data Size	3	2020-09-30 09:01:12.272+02	1	\N	f	\N	\N	\N	\N	\N
72	PRIMARYINDEXSIZE		primary Index Size	3	2020-09-30 09:01:12.276+02	1	\N	f	\N	\N	\N	\N	\N
73	PRINCIPAL_INVESTIGATOR_EMAIL		Email of Principal Investigator	1	2020-09-30 09:01:12.28+02	1	\N	f	\N	\N	\N	\N	\N
74	PRINCIPAL_INVESTIGATOR_NAME		Name of Principal Investigator	1	2020-09-30 09:01:12.284+02	1	\N	f	\N	\N	\N	\N	\N
75	QC_AT_DBSSE		QC at D-BSSE	7	2020-09-30 09:01:12.289+02	1	22	f	\N	\N	\N	\N	\N
76	QC_REQUIRED		QC required	7	2020-09-30 09:01:12.294+02	1	22	f	\N	\N	\N	\N	\N
77	RUNNINGTIME		Running Time	1	2020-09-30 09:01:12.299+02	1	\N	f	\N	\N	\N	\N	\N
78	RUN_FOLDER_NAME		Run Folder Name	1	2020-09-30 09:01:12.302+02	1	\N	f	\N	\N	\N	\N	\N
79	SAMPLE_KIND		Sample Kind	7	2020-09-30 09:01:12.308+02	1	18	f	\N	\N	\N	\N	\N
80	SAMTOOLS_FLAGSTAT		Samtools Flagstat Output	2	2020-09-30 09:01:12.312+02	1	\N	f	\N	\N	\N	\N	\N
81	SBS_KIT		SBS Kit	1	2020-09-30 09:01:12.316+02	1	\N	f	\N	\N	\N	\N	\N
82	SBS_SEQUENCING_KIT_VERSION		SBS Sequencing Kit Version	7	2020-09-30 09:01:12.321+02	1	19	f	\N	\N	\N	\N	\N
83	SEQUENCER		Sequencer	7	2020-09-30 09:01:12.326+02	1	20	f	\N	\N	\N	\N	\N
84	SEQUENCER_FINISHED		Sequencer finished	6	2020-09-30 09:01:12.33+02	1	\N	f	\N	\N	\N	\N	\N
85	STARTING_AMOUNT_OF_SAMPLE_IN_NG		Starting amount of sample (ng)	4	2020-09-30 09:01:12.334+02	1	\N	f	\N	\N	\N	\N	\N
86	STD		Standard deviation	4	2020-09-30 09:01:12.338+02	1	\N	f	\N	\N	\N	\N	\N
87	SURFACECOUNT		Surface Count	3	2020-09-30 09:01:12.342+02	1	\N	f	\N	\N	\N	\N	\N
88	SWATHCOUNT		Swath Count	3	2020-09-30 09:01:12.346+02	1	\N	f	\N	\N	\N	\N	\N
89	TILECOUNT		Tile Count	3	2020-09-30 09:01:12.35+02	1	\N	f	\N	\N	\N	\N	\N
90	TOTAL_READS		Total reads	3	2020-09-30 09:01:12.354+02	1	\N	f	\N	\N	\N	\N	\N
91	UL_DNA		Calculated ul DNA for 2nM stock	4	2020-09-30 09:01:12.357+02	1	\N	f	\N	\N	\N	\N	\N
92	UL_EB		Calculated ul EB for 2nM stock 	4	2020-09-30 09:01:12.361+02	1	\N	f	\N	\N	\N	\N	\N
93	UL_STOCK		ul of 2nM stock	3	2020-09-30 09:01:12.365+02	1	\N	f	\N	\N	\N	\N	\N
94	UNIQUE_BARCODES		Unique Barcodes in Pool?	1	2020-09-30 09:01:12.37+02	1	\N	f	\N	\N	\N	\N	\N
95	VERSION		Version	1	2020-09-30 09:01:12.374+02	1	\N	f	\N	\N	\N	\N	\N
96	YIELD_MBASES		Yield(Mbases)	3	2020-09-30 09:01:12.379+02	1	\N	f	\N	\N	\N	\N	\N
97	ZOOMLEVELS		zoom Levels	3	2020-09-30 09:01:12.383+02	1	\N	f	\N	\N	\N	\N	\N
98	ANNOTATIONS_STATE		Annotations State	10	2020-09-30 09:01:15.142+02	1	\N	t	\N	\N	\N	\N	\N
99	DEFAULT_OBJECT_TYPE		Default Object Type	1	2020-09-30 09:01:15.146+02	1	\N	t	\N	\N	\N	\N	\N
100	RESOLUTION		Resolution	1	2020-09-30 09:01:15.149+02	1	\N	t	\N	\N	\N	\N	\N
101	XMLCOMMENTS		XML Comments	10	2020-09-30 09:01:15.153+02	1	\N	t	\N	\N	\N	\N	\N
102	MICROSCOPY_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME		Acquisition station name	1	2020-09-30 09:01:15.156+02	1	\N	f	\N	\N	\N	\N	\N
103	MICROSCOPY_EXPERIMENT_DESCRIPTION		Description	2	2020-09-30 09:01:15.16+02	1	\N	f	\N	\N	\N	\N	\N
104	MICROSCOPY_EXPERIMENT_NAME		Experiment name	1	2020-09-30 09:01:15.163+02	1	\N	f	\N	\N	\N	\N	\N
105	MICROSCOPY_EXPERIMENT_VERSION		Version	3	2020-09-30 09:01:15.167+02	1	\N	f	\N	\N	\N	\N	\N
106	MICROSCOPY_IMG_CONTAINER_METADATA		Series metadata	10	2020-09-30 09:01:15.171+02	1	\N	f	\N	\N	\N	\N	\N
107	MICROSCOPY_SAMPLE_DESCRIPTION		Description	2	2020-09-30 09:01:15.174+02	1	\N	f	\N	\N	\N	\N	\N
108	MICROSCOPY_SAMPLE_SIZE_IN_BYTES		Size	3	2020-09-30 09:01:15.178+02	1	\N	f	\N	\N	\N	\N	\N
109	FACS_ARIA_EXPERIMENT_ACQ_HARDWARE		Acquisition hardware	1	2020-09-30 09:01:19.696+02	1	\N	f	\N	\N	\N	\N	\N
110	FACS_ARIA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME		Acquisition station name	1	2020-09-30 09:01:19.771+02	1	\N	f	\N	\N	\N	\N	\N
111	FACS_ARIA_EXPERIMENT_ACQ_SOFTWARE		Acquisition software	1	2020-09-30 09:01:19.776+02	1	\N	f	\N	\N	\N	\N	\N
112	FACS_ARIA_EXPERIMENT_DATE		Experiment date	6	2020-09-30 09:01:19.781+02	1	\N	f	\N	\N	\N	\N	\N
113	FACS_ARIA_EXPERIMENT_DESCRIPTION		Description	2	2020-09-30 09:01:19.785+02	1	\N	f	\N	\N	\N	\N	\N
114	FACS_ARIA_EXPERIMENT_NAME		Experiment name	1	2020-09-30 09:01:19.79+02	1	\N	f	\N	\N	\N	\N	\N
115	FACS_ARIA_EXPERIMENT_OWNER		Owner	1	2020-09-30 09:01:19.796+02	1	\N	f	\N	\N	\N	\N	\N
116	FACS_ARIA_EXPERIMENT_VERSION		Version	3	2020-09-30 09:01:19.802+02	1	\N	f	\N	\N	\N	\N	\N
117	FACS_ARIA_FCSFILE_ACQ_DATE		Acquisition date	6	2020-09-30 09:01:19.807+02	1	\N	f	\N	\N	\N	\N	\N
118	FACS_ARIA_FCSFILE_PARAMETERS		FCS parameters	2	2020-09-30 09:01:19.811+02	1	\N	f	\N	\N	\N	\N	\N
119	FACS_ARIA_TUBE_ISINDEXSORT		Index sort	5	2020-09-30 09:01:19.816+02	1	\N	f	\N	\N	\N	\N	\N
120	INFLUX_EXPERIMENT_ACQ_HARDWARE		Acquisition hardware	1	2020-09-30 09:01:19.823+02	1	\N	f	\N	\N	\N	\N	\N
121	INFLUX_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME		Acquisition station name	1	2020-09-30 09:01:19.83+02	1	\N	f	\N	\N	\N	\N	\N
122	INFLUX_EXPERIMENT_ACQ_SOFTWARE		Acquisition software	1	2020-09-30 09:01:19.836+02	1	\N	f	\N	\N	\N	\N	\N
123	INFLUX_EXPERIMENT_DATE		Experiment date	6	2020-09-30 09:01:19.841+02	1	\N	f	\N	\N	\N	\N	\N
124	INFLUX_EXPERIMENT_DESCRIPTION		Description	2	2020-09-30 09:01:19.846+02	1	\N	f	\N	\N	\N	\N	\N
125	INFLUX_EXPERIMENT_NAME		Experiment name	1	2020-09-30 09:01:19.852+02	1	\N	f	\N	\N	\N	\N	\N
126	INFLUX_EXPERIMENT_OWNER		Owner	1	2020-09-30 09:01:19.858+02	1	\N	f	\N	\N	\N	\N	\N
127	INFLUX_EXPERIMENT_VERSION		Version	3	2020-09-30 09:01:19.863+02	1	\N	f	\N	\N	\N	\N	\N
128	INFLUX_FCSFILE_ACQ_DATE		Acquisition date	6	2020-09-30 09:01:19.868+02	1	\N	f	\N	\N	\N	\N	\N
129	INFLUX_FCSFILE_PARAMETERS		FCS parameters	2	2020-09-30 09:01:19.874+02	1	\N	f	\N	\N	\N	\N	\N
130	INFLUX_TUBE_ISINDEXSORT		Index sort	5	2020-09-30 09:01:19.88+02	1	\N	f	\N	\N	\N	\N	\N
131	LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE		Acquisition hardware	1	2020-09-30 09:01:19.885+02	1	\N	f	\N	\N	\N	\N	\N
132	LSR_FORTESSA_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME		Acquisition station name	1	2020-09-30 09:01:19.89+02	1	\N	f	\N	\N	\N	\N	\N
133	LSR_FORTESSA_EXPERIMENT_ACQ_SOFTWARE		Acquisition software	1	2020-09-30 09:01:19.917+02	1	\N	f	\N	\N	\N	\N	\N
134	LSR_FORTESSA_EXPERIMENT_DATE		Experiment date	6	2020-09-30 09:01:19.922+02	1	\N	f	\N	\N	\N	\N	\N
135	LSR_FORTESSA_EXPERIMENT_DESCRIPTION		Description	2	2020-09-30 09:01:19.927+02	1	\N	f	\N	\N	\N	\N	\N
136	LSR_FORTESSA_EXPERIMENT_NAME		Experiment name	1	2020-09-30 09:01:19.933+02	1	\N	f	\N	\N	\N	\N	\N
137	LSR_FORTESSA_EXPERIMENT_OWNER		Owner	1	2020-09-30 09:01:19.938+02	1	\N	f	\N	\N	\N	\N	\N
138	LSR_FORTESSA_EXPERIMENT_VERSION		Version	3	2020-09-30 09:01:19.943+02	1	\N	f	\N	\N	\N	\N	\N
139	LSR_FORTESSA_FCSFILE_ACQ_DATE		Acquisition date	6	2020-09-30 09:01:19.948+02	1	\N	f	\N	\N	\N	\N	\N
140	LSR_FORTESSA_FCSFILE_PARAMETERS		FCS parameters	2	2020-09-30 09:01:19.955+02	1	\N	f	\N	\N	\N	\N	\N
141	LSR_FORTESSA_PLATE_GEOMETRY		Plate Geometry	7	2020-09-30 09:01:19.963+02	1	23	f	\N	\N	\N	\N	\N
142	CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE		Acquisition hardware	1	2020-09-30 09:01:19.968+02	1	\N	f	\N	\N	\N	\N	\N
143	CYTOFLEX_S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME		Acquisition station name	1	2020-09-30 09:01:19.973+02	1	\N	f	\N	\N	\N	\N	\N
144	CYTOFLEX_S_EXPERIMENT_ACQ_SOFTWARE		Acquisition software	1	2020-09-30 09:01:19.979+02	1	\N	f	\N	\N	\N	\N	\N
145	CYTOFLEX_S_EXPERIMENT_DATE		Experiment date	6	2020-09-30 09:01:19.984+02	1	\N	f	\N	\N	\N	\N	\N
146	CYTOFLEX_S_EXPERIMENT_DESCRIPTION		Description	2	2020-09-30 09:01:19.99+02	1	\N	f	\N	\N	\N	\N	\N
147	CYTOFLEX_S_EXPERIMENT_NAME		Experiment name	1	2020-09-30 09:01:19.995+02	1	\N	f	\N	\N	\N	\N	\N
148	CYTOFLEX_S_EXPERIMENT_OWNER		Owner	1	2020-09-30 09:01:20.001+02	1	\N	f	\N	\N	\N	\N	\N
149	CYTOFLEX_S_EXPERIMENT_VERSION		Version	3	2020-09-30 09:01:20.006+02	1	\N	f	\N	\N	\N	\N	\N
150	CYTOFLEX_S_FCSFILE_ACQ_DATE		Acquisition date	6	2020-09-30 09:01:20.011+02	1	\N	f	\N	\N	\N	\N	\N
151	CYTOFLEX_S_FCSFILE_PARAMETERS		FCS parameters	2	2020-09-30 09:01:20.016+02	1	\N	f	\N	\N	\N	\N	\N
152	CYTOFLEX_S_PLATE_GEOMETRY		Plate Geometry	7	2020-09-30 09:01:20.023+02	1	24	f	\N	\N	\N	\N	\N
153	MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE		Acquisition hardware	1	2020-09-30 09:01:20.029+02	1	\N	f	\N	\N	\N	\N	\N
154	MOFLO_XDP_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME		Acquisition station name	1	2020-09-30 09:01:20.035+02	1	\N	f	\N	\N	\N	\N	\N
155	MOFLO_XDP_EXPERIMENT_ACQ_SOFTWARE		Acquisition software	1	2020-09-30 09:01:20.042+02	1	\N	f	\N	\N	\N	\N	\N
156	MOFLO_XDP_EXPERIMENT_DATE		Experiment date	6	2020-09-30 09:01:20.054+02	1	\N	f	\N	\N	\N	\N	\N
157	MOFLO_XDP_EXPERIMENT_DESCRIPTION		Description	2	2020-09-30 09:01:20.06+02	1	\N	f	\N	\N	\N	\N	\N
158	MOFLO_XDP_EXPERIMENT_NAME		Experiment name	1	2020-09-30 09:01:20.076+02	1	\N	f	\N	\N	\N	\N	\N
159	MOFLO_XDP_EXPERIMENT_OWNER		Owner	1	2020-09-30 09:01:20.086+02	1	\N	f	\N	\N	\N	\N	\N
160	MOFLO_XDP_EXPERIMENT_VERSION		Version	3	2020-09-30 09:01:20.099+02	1	\N	f	\N	\N	\N	\N	\N
161	MOFLO_XDP_FCSFILE_ACQ_DATE		Acquisition date	6	2020-09-30 09:01:20.105+02	1	\N	f	\N	\N	\N	\N	\N
162	MOFLO_XDP_FCSFILE_PARAMETERS		FCS parameters	2	2020-09-30 09:01:20.11+02	1	\N	f	\N	\N	\N	\N	\N
163	MOFLO_XDP_TUBE_ISINDEXSORT		Index sort	5	2020-09-30 09:01:20.123+02	1	\N	f	\N	\N	\N	\N	\N
164	S3E_EXPERIMENT_ACQ_HARDWARE		Acquisition hardware	1	2020-09-30 09:01:20.136+02	1	\N	f	\N	\N	\N	\N	\N
165	S3E_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME		Acquisition station name	1	2020-09-30 09:01:20.148+02	1	\N	f	\N	\N	\N	\N	\N
166	S3E_EXPERIMENT_ACQ_SOFTWARE		Acquisition software	1	2020-09-30 09:01:20.156+02	1	\N	f	\N	\N	\N	\N	\N
167	S3E_EXPERIMENT_DATE		Experiment date	6	2020-09-30 09:01:20.163+02	1	\N	f	\N	\N	\N	\N	\N
168	S3E_EXPERIMENT_DESCRIPTION		Description	2	2020-09-30 09:01:20.169+02	1	\N	f	\N	\N	\N	\N	\N
169	S3E_EXPERIMENT_NAME		Experiment name	1	2020-09-30 09:01:20.174+02	1	\N	f	\N	\N	\N	\N	\N
170	S3E_EXPERIMENT_OWNER		Owner	1	2020-09-30 09:01:20.18+02	1	\N	f	\N	\N	\N	\N	\N
171	S3E_EXPERIMENT_VERSION		Version	3	2020-09-30 09:01:20.186+02	1	\N	f	\N	\N	\N	\N	\N
172	S3E_FCSFILE_ACQ_DATE		Acquisition date	6	2020-09-30 09:01:20.192+02	1	\N	f	\N	\N	\N	\N	\N
173	S3E_FCSFILE_PARAMETERS		FCS parameters	2	2020-09-30 09:01:20.198+02	1	\N	f	\N	\N	\N	\N	\N
174	S3E_TUBE_ISINDEXSORT		Index sort	5	2020-09-30 09:01:20.206+02	1	\N	f	\N	\N	\N	\N	\N
175	SONY_SH800S_EXPERIMENT_ACQ_HARDWARE		Acquisition hardware	1	2020-09-30 09:01:20.214+02	1	\N	f	\N	\N	\N	\N	\N
176	SONY_SH800S_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME		Acquisition station name	1	2020-09-30 09:01:20.22+02	1	\N	f	\N	\N	\N	\N	\N
177	SONY_SH800S_EXPERIMENT_ACQ_SOFTWARE		Acquisition software	1	2020-09-30 09:01:20.226+02	1	\N	f	\N	\N	\N	\N	\N
178	SONY_SH800S_EXPERIMENT_DATE		Experiment date	6	2020-09-30 09:01:20.232+02	1	\N	f	\N	\N	\N	\N	\N
179	SONY_SH800S_EXPERIMENT_DESCRIPTION		Description	2	2020-09-30 09:01:20.238+02	1	\N	f	\N	\N	\N	\N	\N
180	SONY_SH800S_EXPERIMENT_NAME		Experiment name	1	2020-09-30 09:01:20.244+02	1	\N	f	\N	\N	\N	\N	\N
181	SONY_SH800S_EXPERIMENT_OWNER		Owner	1	2020-09-30 09:01:20.249+02	1	\N	f	\N	\N	\N	\N	\N
182	SONY_SH800S_EXPERIMENT_VERSION		Version	3	2020-09-30 09:01:20.256+02	1	\N	f	\N	\N	\N	\N	\N
183	SONY_SH800S_FCSFILE_ACQ_DATE		Acquisition date	6	2020-09-30 09:01:20.264+02	1	\N	f	\N	\N	\N	\N	\N
184	SONY_SH800S_FCSFILE_PARAMETERS		FCS parameters	2	2020-09-30 09:01:20.273+02	1	\N	f	\N	\N	\N	\N	\N
185	SONY_SH800S_TUBE_ISINDEXSORT		Index sort	5	2020-09-30 09:01:20.278+02	1	\N	f	\N	\N	\N	\N	\N
186	SONY_MA900_EXPERIMENT_ACQ_HARDWARE		Acquisition hardware	1	2020-09-30 09:01:20.284+02	1	\N	f	\N	\N	\N	\N	\N
187	SONY_MA900_EXPERIMENT_ACQ_HARDWARE_FRIENDLY_NAME		Acquisition station name	1	2020-09-30 09:01:20.29+02	1	\N	f	\N	\N	\N	\N	\N
188	SONY_MA900_EXPERIMENT_ACQ_SOFTWARE		Acquisition software	1	2020-09-30 09:01:20.296+02	1	\N	f	\N	\N	\N	\N	\N
189	SONY_MA900_EXPERIMENT_DATE		Experiment date	6	2020-09-30 09:01:20.302+02	1	\N	f	\N	\N	\N	\N	\N
190	SONY_MA900_EXPERIMENT_DESCRIPTION		Description	2	2020-09-30 09:01:20.308+02	1	\N	f	\N	\N	\N	\N	\N
191	SONY_MA900_EXPERIMENT_NAME		Experiment name	1	2020-09-30 09:01:20.314+02	1	\N	f	\N	\N	\N	\N	\N
192	SONY_MA900_EXPERIMENT_OWNER		Owner	1	2020-09-30 09:01:20.32+02	1	\N	f	\N	\N	\N	\N	\N
193	SONY_MA900_EXPERIMENT_VERSION		Version	3	2020-09-30 09:01:20.325+02	1	\N	f	\N	\N	\N	\N	\N
194	SONY_MA900_FCSFILE_ACQ_DATE		Acquisition date	6	2020-09-30 09:01:20.331+02	1	\N	f	\N	\N	\N	\N	\N
195	SONY_MA900_FCSFILE_PARAMETERS		FCS parameters	2	2020-09-30 09:01:20.337+02	1	\N	f	\N	\N	\N	\N	\N
196	SONY_MA900_TUBE_ISINDEXSORT		Index sort	5	2020-09-30 09:01:20.343+02	1	\N	f	\N	\N	\N	\N	\N
\.


--
-- Data for Name: queries; Type: TABLE DATA; Schema: public; Owner: -
--

COPY queries (id, name, description, registration_timestamp, pers_id_registerer, modification_timestamp, expression, is_public, query_type, entity_type_code, db_key) FROM stdin;
\.


--
-- Data for Name: relationship_types; Type: TABLE DATA; Schema: public; Owner: -
--

COPY relationship_types (id, code, label, parent_label, child_label, description, registration_timestamp, pers_id_registerer, is_managed_internally) FROM stdin;
1	PARENT_CHILD	Parent - Child	Parent	Child	Parent - Child relationship	2020-09-30 09:00:55.015791+02	1	t
2	PLATE_CONTROL_LAYOUT	Plate - Control Layout	Plate	Control Layout	Plate - Control Layout relationship	2020-09-30 09:00:55.015791+02	1	t
3	CONTAINER_COMPONENT	Container - Component	Container	Component	Container - Component relationship	2020-09-30 09:00:55.015791+02	1	t
\.


--
-- Data for Name: role_assignments; Type: TABLE DATA; Schema: public; Owner: -
--

COPY role_assignments (id, role_code, space_id, project_id, pers_id_grantee, ag_id_grantee, pers_id_registerer, registration_timestamp) FROM stdin;
1	ETL_SERVER	\N	\N	2	\N	1	2020-09-30 09:01:53.828477+02
2	ADMIN	\N	\N	3	\N	1	2020-09-30 09:02:11.925544+02
3	ADMIN	\N	\N	1	\N	1	2020-09-30 09:18:05.720881+02
\.


--
-- Data for Name: sample_properties; Type: TABLE DATA; Schema: public; Owner: -
--

COPY sample_properties (id, samp_id, stpt_id, value, cvte_id, mate_prop_id, samp_prop_id, pers_id_registerer, registration_timestamp, pers_id_author, modification_timestamp, samp_frozen, tsvector_document) FROM stdin;
\.


--
-- Data for Name: sample_properties_history; Type: TABLE DATA; Schema: public; Owner: -
--

COPY sample_properties_history (id, samp_id, stpt_id, value, vocabulary_term, material, sample, pers_id_author, valid_from_timestamp, valid_until_timestamp) FROM stdin;
\.


--
-- Data for Name: sample_relationships_all; Type: TABLE DATA; Schema: public; Owner: -
--

COPY sample_relationships_all (id, sample_id_parent, relationship_id, sample_id_child, del_id, pers_id_author, registration_timestamp, modification_timestamp, parent_frozen, child_frozen, child_annotations, parent_annotations) FROM stdin;
\.


--
-- Data for Name: sample_relationships_history; Type: TABLE DATA; Schema: public; Owner: -
--

COPY sample_relationships_history (id, main_samp_id, relation_type, expe_id, samp_id, data_id, entity_perm_id, pers_id_author, valid_from_timestamp, valid_until_timestamp, space_id, proj_id, annotations) FROM stdin;
1	1	OWNED	1	\N	\N	20200930090055015-1	\N	2020-09-30 09:00:55.015791+02	\N	\N	\N	\N
\.


--
-- Data for Name: sample_type_property_types; Type: TABLE DATA; Schema: public; Owner: -
--

COPY sample_type_property_types (id, saty_id, prty_id, is_mandatory, is_managed_internally, pers_id_registerer, registration_timestamp, is_displayed, ordinal, section, script_id, is_shown_edit, show_raw_value) FROM stdin;
1	2	3	t	f	1	2020-09-30 09:01:06.949+02	t	1	General	\N	t	f
2	2	5	t	f	1	2020-09-30 09:01:06.976+02	t	2	General	\N	f	f
3	2	4	f	f	1	2020-09-30 09:01:06.998+02	t	3	General	\N	f	f
4	2	2	f	f	1	2020-09-30 09:01:07.02+02	t	4	General	\N	f	f
5	3	78	f	f	1	2020-09-30 09:01:13.005+02	t	2	\N	\N	f	f
6	3	83	f	f	1	2020-09-30 09:01:13.027+02	t	6	\N	\N	f	f
7	3	31	f	f	1	2020-09-30 09:01:13.048+02	t	8	\N	\N	f	f
8	3	35	f	f	1	2020-09-30 09:01:13.07+02	t	9	\N	\N	f	f
9	3	84	f	f	1	2020-09-30 09:01:13.09+02	t	10	\N	\N	f	f
10	3	77	f	f	1	2020-09-30 09:01:13.116+02	t	11	\N	1	f	f
11	3	38	f	f	1	2020-09-30 09:01:13.132+02	t	12	\N	\N	f	f
12	3	26	f	f	1	2020-09-30 09:01:13.144+02	t	15	\N	\N	f	f
13	3	41	f	f	1	2020-09-30 09:01:13.157+02	t	18	\N	\N	f	f
14	3	42	f	f	1	2020-09-30 09:01:13.17+02	t	19	\N	\N	f	f
15	3	23	f	f	1	2020-09-30 09:01:13.182+02	t	20	\N	\N	f	f
16	3	34	f	f	1	2020-09-30 09:01:13.195+02	t	21	\N	\N	f	f
17	3	49	f	f	1	2020-09-30 09:01:13.208+02	t	22	\N	\N	f	f
18	3	87	f	f	1	2020-09-30 09:01:13.22+02	t	23	\N	\N	f	f
19	3	88	f	f	1	2020-09-30 09:01:13.232+02	t	24	\N	\N	f	f
20	3	89	f	f	1	2020-09-30 09:01:13.245+02	t	25	\N	\N	f	f
21	3	81	f	f	1	2020-09-30 09:01:13.257+02	t	26	\N	\N	f	f
22	3	65	f	f	1	2020-09-30 09:01:13.27+02	t	27	\N	\N	f	f
23	3	16	f	f	1	2020-09-30 09:01:13.282+02	t	28	Clustering	\N	f	f
24	3	24	f	f	1	2020-09-30 09:01:13.296+02	t	29	Clustering	\N	f	f
25	3	25	f	f	1	2020-09-30 09:01:13.309+02	t	30	Clustering	\N	f	f
26	3	15	f	f	1	2020-09-30 09:01:13.322+02	t	31	Clustering	\N	f	f
27	3	82	f	f	1	2020-09-30 09:01:13.335+02	t	33	\N	\N	f	f
28	3	8	f	f	1	2020-09-30 09:01:13.348+02	t	35	\N	\N	f	f
29	3	63	f	f	1	2020-09-30 09:01:13.36+02	t	36	\N	\N	f	f
30	4	18	f	f	1	2020-09-30 09:01:13.372+02	t	21	\N	\N	f	f
31	4	63	f	f	1	2020-09-30 09:01:13.385+02	t	24	\N	\N	f	f
32	5	33	f	f	1	2020-09-30 09:01:13.41+02	t	2	\N	\N	f	f
33	5	47	f	f	1	2020-09-30 09:01:13.422+02	t	3	\N	\N	f	f
34	5	70	f	f	1	2020-09-30 09:01:13.435+02	t	4	\N	\N	f	f
35	5	85	f	f	1	2020-09-30 09:01:13.448+02	t	5	\N	\N	f	f
36	5	39	f	f	1	2020-09-30 09:01:13.46+02	t	8	\N	\N	f	f
37	5	40	f	f	1	2020-09-30 09:01:13.473+02	t	9	\N	\N	f	f
38	5	53	f	f	1	2020-09-30 09:01:13.485+02	t	10	\N	\N	f	f
39	5	6	f	f	1	2020-09-30 09:01:13.498+02	t	11	QC Data	\N	f	f
40	5	37	f	f	1	2020-09-30 09:01:13.511+02	t	12	QC Data	\N	f	f
41	5	60	f	f	1	2020-09-30 09:01:13.523+02	t	13	QC Data	\N	f	f
42	5	20	f	f	1	2020-09-30 09:01:13.536+02	t	14	QC Data	\N	f	f
43	5	28	f	f	1	2020-09-30 09:01:13.551+02	t	15	QC Data	\N	f	f
44	5	52	f	f	1	2020-09-30 09:01:13.564+02	t	16	QC Data	\N	f	f
45	5	50	f	f	1	2020-09-30 09:01:13.579+02	t	17	QC Data	\N	f	f
46	5	75	f	f	1	2020-09-30 09:01:13.593+02	t	18	QC Data	\N	f	f
47	5	48	f	f	1	2020-09-30 09:01:13.607+02	t	19	\N	\N	f	f
48	5	27	f	f	1	2020-09-30 09:01:13.62+02	t	20	\N	\N	f	f
49	5	43	f	f	1	2020-09-30 09:01:13.639+02	t	21	\N	\N	f	f
50	5	63	f	f	1	2020-09-30 09:01:13.652+02	t	34	\N	\N	f	f
51	6	33	f	f	1	2020-09-30 09:01:13.665+02	t	2	\N	\N	f	f
52	6	70	f	f	1	2020-09-30 09:01:13.678+02	t	3	\N	\N	f	f
53	6	29	f	f	1	2020-09-30 09:01:13.691+02	t	4	\N	\N	f	f
54	6	76	f	f	1	2020-09-30 09:01:13.704+02	t	5	\N	\N	f	f
55	6	6	f	f	1	2020-09-30 09:01:13.715+02	t	6	QC Data	\N	f	f
56	6	36	f	f	1	2020-09-30 09:01:13.727+02	t	7	QC Data	\N	f	f
57	6	60	f	f	1	2020-09-30 09:01:13.739+02	t	8	QC Data	\N	f	f
58	6	17	f	f	1	2020-09-30 09:01:13.75+02	t	9	QC Data	\N	f	f
59	6	30	f	f	1	2020-09-30 09:01:13.763+02	t	10	QC Data	\N	f	f
60	6	43	f	f	1	2020-09-30 09:01:13.775+02	t	11	\N	\N	f	f
61	6	63	f	f	1	2020-09-30 09:01:13.786+02	t	12	\N	\N	f	f
62	7	11	t	f	1	2020-09-30 09:01:13.822+02	t	2	\N	\N	f	f
63	7	21	t	f	1	2020-09-30 09:01:13.836+02	t	3	\N	\N	f	f
64	7	22	t	f	1	2020-09-30 09:01:13.85+02	t	4	\N	\N	f	f
65	7	73	t	f	1	2020-09-30 09:01:13.863+02	t	5	\N	\N	f	f
66	7	74	t	f	1	2020-09-30 09:01:13.878+02	t	6	\N	\N	f	f
67	7	61	t	f	1	2020-09-30 09:01:13.892+02	t	8	\N	\N	f	f
68	7	79	t	f	1	2020-09-30 09:01:13.906+02	t	22	\N	\N	f	f
69	7	63	f	f	1	2020-09-30 09:01:13.92+02	t	23	\N	\N	f	f
70	8	33	f	f	1	2020-09-30 09:01:13.932+02	t	2	\N	\N	f	f
71	8	19	f	f	1	2020-09-30 09:01:13.944+02	t	5	\N	\N	f	f
72	8	70	f	f	1	2020-09-30 09:01:13.957+02	t	9	\N	\N	f	f
73	8	48	f	f	1	2020-09-30 09:01:13.968+02	t	10	\N	\N	f	f
74	8	51	f	f	1	2020-09-30 09:01:13.98+02	t	11	\N	\N	f	f
75	8	63	f	f	1	2020-09-30 09:01:13.993+02	t	14	\N	\N	f	f
76	9	3	f	f	1	2020-09-30 09:01:15.332+02	t	2	General Info	\N	t	f
77	9	98	f	f	1	2020-09-30 09:01:15.341+02	t	3	General Info	\N	f	f
78	9	104	f	f	1	2020-09-30 09:01:15.351+02	t	4	\N	\N	t	f
79	9	103	f	f	1	2020-09-30 09:01:15.361+02	t	5	\N	\N	t	f
80	9	105	f	f	1	2020-09-30 09:01:15.371+02	t	6	\N	\N	f	f
81	9	102	f	f	1	2020-09-30 09:01:15.382+02	t	7	\N	\N	t	f
82	10	3	f	f	1	2020-09-30 09:01:15.571+02	t	2	\N	\N	f	f
83	10	107	f	f	1	2020-09-30 09:01:15.581+02	t	3	\N	\N	t	f
84	10	108	f	f	1	2020-09-30 09:01:15.591+02	t	4	\N	\N	f	f
85	11	3	f	f	1	2020-09-30 09:01:15.604+02	t	2	\N	\N	f	f
86	11	1	f	f	1	2020-09-30 09:01:15.614+02	t	3	\N	\N	f	f
87	11	101	f	f	1	2020-09-30 09:01:15.624+02	t	4	\N	\N	f	f
88	11	98	f	f	1	2020-09-30 09:01:15.634+02	t	5	\N	\N	f	f
89	12	3	f	f	1	2020-09-30 09:01:20.359+02	t	2	General Info	\N	f	f
90	12	98	f	f	1	2020-09-30 09:01:20.376+02	t	3	General Info	\N	f	f
91	12	114	f	f	1	2020-09-30 09:01:20.392+02	t	4	\N	\N	f	f
92	12	112	f	f	1	2020-09-30 09:01:20.413+02	t	5	\N	\N	f	f
93	12	113	f	f	1	2020-09-30 09:01:20.427+02	t	6	\N	\N	t	f
94	12	109	f	f	1	2020-09-30 09:01:20.443+02	t	7	\N	\N	f	f
95	12	111	f	f	1	2020-09-30 09:01:20.468+02	t	8	\N	\N	f	f
96	12	116	f	f	1	2020-09-30 09:01:20.483+02	t	9	\N	\N	f	f
97	12	115	f	f	1	2020-09-30 09:01:20.498+02	t	10	\N	\N	f	f
98	12	110	f	f	1	2020-09-30 09:01:20.519+02	t	11	\N	\N	t	f
99	13	3	f	f	1	2020-09-30 09:01:20.583+02	t	2	General Info	\N	t	f
100	13	98	f	f	1	2020-09-30 09:01:20.598+02	t	3	General Info	\N	f	f
101	14	3	f	f	1	2020-09-30 09:01:20.613+02	t	2	General Info	\N	t	f
102	14	119	f	f	1	2020-09-30 09:01:20.628+02	t	4	\N	\N	f	f
103	16	3	f	f	1	2020-09-30 09:01:20.661+02	t	2	General Info	\N	t	f
104	16	98	f	f	1	2020-09-30 09:01:20.679+02	t	3	General Info	\N	f	f
105	16	124	f	f	1	2020-09-30 09:01:20.696+02	t	4	\N	\N	t	f
106	16	125	f	f	1	2020-09-30 09:01:20.711+02	t	5	\N	\N	f	f
107	16	123	f	f	1	2020-09-30 09:01:20.726+02	t	6	\N	\N	t	f
108	16	120	f	f	1	2020-09-30 09:01:20.742+02	t	7	\N	\N	f	f
109	16	122	f	f	1	2020-09-30 09:01:20.759+02	t	8	\N	\N	f	f
110	16	126	f	f	1	2020-09-30 09:01:20.775+02	t	9	\N	\N	t	f
111	16	121	f	f	1	2020-09-30 09:01:20.791+02	t	10	\N	\N	t	f
112	16	127	f	f	1	2020-09-30 09:01:20.81+02	t	11	\N	\N	f	f
113	17	3	f	f	1	2020-09-30 09:01:20.882+02	t	2	General Info	\N	t	f
114	17	98	f	f	1	2020-09-30 09:01:20.898+02	t	3	General Info	\N	f	f
115	18	3	f	f	1	2020-09-30 09:01:20.914+02	t	2	General Info	\N	t	f
116	18	130	f	f	1	2020-09-30 09:01:20.931+02	t	5	\N	\N	f	f
117	20	3	f	f	1	2020-09-30 09:01:20.964+02	t	2	General Info	\N	f	f
118	20	98	f	f	1	2020-09-30 09:01:20.98+02	t	3	General Info	\N	f	f
119	20	136	f	f	1	2020-09-30 09:01:20.996+02	t	4	\N	\N	f	f
120	20	134	f	f	1	2020-09-30 09:01:21.015+02	t	5	\N	\N	f	f
121	20	135	f	f	1	2020-09-30 09:01:21.031+02	t	6	\N	\N	t	f
122	20	131	f	f	1	2020-09-30 09:01:21.048+02	t	7	\N	\N	f	f
123	20	133	f	f	1	2020-09-30 09:01:21.065+02	t	8	\N	\N	f	f
124	20	137	f	f	1	2020-09-30 09:01:21.082+02	t	9	\N	\N	f	f
125	20	138	f	f	1	2020-09-30 09:01:21.1+02	t	10	\N	\N	f	f
126	20	132	f	f	1	2020-09-30 09:01:21.118+02	t	11	\N	\N	t	f
127	21	141	f	f	1	2020-09-30 09:01:21.194+02	t	3	\N	\N	t	f
128	21	3	f	f	1	2020-09-30 09:01:21.212+02	t	2	General Info	\N	t	f
129	22	3	f	f	1	2020-09-30 09:01:21.228+02	t	2	General Info	\N	t	f
130	22	98	f	f	1	2020-09-30 09:01:21.244+02	t	3	General Info	\N	f	f
131	23	3	f	f	1	2020-09-30 09:01:21.262+02	t	2	General Info	\N	t	f
132	25	3	f	f	1	2020-09-30 09:01:21.28+02	t	2	General Info	\N	t	f
133	26	3	f	f	1	2020-09-30 09:01:21.322+02	t	2	General Info	\N	f	f
134	26	98	f	f	1	2020-09-30 09:01:21.338+02	t	3	General Info	\N	f	f
135	26	147	f	f	1	2020-09-30 09:01:21.359+02	t	4	\N	\N	f	f
136	26	145	f	f	1	2020-09-30 09:01:21.379+02	t	5	\N	\N	f	f
137	26	146	f	f	1	2020-09-30 09:01:21.396+02	t	6	\N	\N	t	f
138	26	142	f	f	1	2020-09-30 09:01:21.413+02	t	7	\N	\N	f	f
139	26	144	f	f	1	2020-09-30 09:01:21.432+02	t	8	\N	\N	f	f
140	26	148	f	f	1	2020-09-30 09:01:21.45+02	t	9	\N	\N	f	f
141	26	149	f	f	1	2020-09-30 09:01:21.468+02	t	10	\N	\N	f	f
142	26	143	f	f	1	2020-09-30 09:01:21.484+02	t	11	\N	\N	t	f
143	27	152	f	f	1	2020-09-30 09:01:21.556+02	t	3	\N	\N	t	f
144	27	3	f	f	1	2020-09-30 09:01:21.572+02	t	2	General Info	\N	t	f
145	28	3	f	f	1	2020-09-30 09:01:21.59+02	t	2	General Info	\N	t	f
146	28	98	f	f	1	2020-09-30 09:01:21.609+02	t	3	General Info	\N	f	f
147	29	3	f	f	1	2020-09-30 09:01:21.633+02	t	2	General Info	\N	t	f
148	31	3	f	f	1	2020-09-30 09:01:21.65+02	t	2	General Info	\N	t	f
149	32	3	f	f	1	2020-09-30 09:01:21.7+02	t	2	General Info	\N	t	f
150	32	98	f	f	1	2020-09-30 09:01:21.723+02	t	3	General Info	\N	f	f
151	32	157	f	f	1	2020-09-30 09:01:21.74+02	t	4	\N	\N	t	f
152	32	158	f	f	1	2020-09-30 09:01:21.758+02	t	5	\N	\N	f	f
153	32	156	f	f	1	2020-09-30 09:01:21.774+02	t	6	\N	\N	t	f
154	32	153	f	f	1	2020-09-30 09:01:21.794+02	t	7	\N	\N	f	f
155	32	155	f	f	1	2020-09-30 09:01:21.817+02	t	8	\N	\N	f	f
156	32	159	f	f	1	2020-09-30 09:01:21.834+02	t	9	\N	\N	t	f
157	32	154	f	f	1	2020-09-30 09:01:21.853+02	t	10	\N	\N	t	f
158	32	160	f	f	1	2020-09-30 09:01:21.869+02	t	11	\N	\N	f	f
159	33	3	f	f	1	2020-09-30 09:01:21.945+02	t	2	General Info	\N	t	f
160	33	98	f	f	1	2020-09-30 09:01:21.965+02	t	3	General Info	\N	f	f
161	34	3	f	f	1	2020-09-30 09:01:21.982+02	t	2	General Info	\N	t	f
162	34	163	f	f	1	2020-09-30 09:01:22+02	t	5	\N	\N	f	f
163	36	3	f	f	1	2020-09-30 09:01:22.038+02	t	2	General Info	\N	t	f
164	36	98	f	f	1	2020-09-30 09:01:22.056+02	t	3	General Info	\N	f	f
165	36	168	f	f	1	2020-09-30 09:01:22.075+02	t	4	\N	\N	t	f
166	36	169	f	f	1	2020-09-30 09:01:22.093+02	t	5	\N	\N	f	f
167	36	167	f	f	1	2020-09-30 09:01:22.112+02	t	6	\N	\N	t	f
168	36	164	f	f	1	2020-09-30 09:01:22.13+02	t	7	\N	\N	f	f
169	36	166	f	f	1	2020-09-30 09:01:22.15+02	t	8	\N	\N	f	f
170	36	170	f	f	1	2020-09-30 09:01:22.168+02	t	9	\N	\N	t	f
171	36	165	f	f	1	2020-09-30 09:01:22.186+02	t	10	\N	\N	t	f
172	36	171	f	f	1	2020-09-30 09:01:22.203+02	t	11	\N	\N	f	f
173	37	3	f	f	1	2020-09-30 09:01:22.281+02	t	2	\N	\N	t	f
174	37	98	f	f	1	2020-09-30 09:01:22.298+02	t	3	\N	\N	t	f
175	38	3	f	f	1	2020-09-30 09:01:22.316+02	t	2	General Info	\N	t	f
176	38	174	f	f	1	2020-09-30 09:01:22.335+02	t	5	\N	\N	f	f
177	40	3	f	f	1	2020-09-30 09:01:22.371+02	t	2	General Info	\N	t	f
178	40	98	f	f	1	2020-09-30 09:01:22.391+02	t	3	General Info	\N	f	f
179	40	179	f	f	1	2020-09-30 09:01:22.417+02	t	4	\N	\N	t	f
180	40	180	f	f	1	2020-09-30 09:01:22.44+02	t	5	\N	\N	f	f
181	40	178	f	f	1	2020-09-30 09:01:22.461+02	t	6	\N	\N	t	f
182	40	175	f	f	1	2020-09-30 09:01:22.48+02	t	7	\N	\N	f	f
183	40	177	f	f	1	2020-09-30 09:01:22.504+02	t	8	\N	\N	f	f
184	40	181	f	f	1	2020-09-30 09:01:22.523+02	t	9	\N	\N	t	f
185	40	176	f	f	1	2020-09-30 09:01:22.543+02	t	10	\N	\N	t	f
186	40	182	f	f	1	2020-09-30 09:01:22.561+02	t	11	\N	\N	f	f
187	41	3	f	f	1	2020-09-30 09:01:22.662+02	t	2	General Info	\N	t	f
188	41	98	f	f	1	2020-09-30 09:01:22.684+02	t	3	General Info	\N	f	f
189	42	3	f	f	1	2020-09-30 09:01:22.703+02	t	2	General Info	\N	t	f
190	42	185	f	f	1	2020-09-30 09:01:22.721+02	t	5	\N	\N	f	f
191	44	3	f	f	1	2020-09-30 09:01:22.759+02	t	2	General Info	\N	t	f
192	44	98	f	f	1	2020-09-30 09:01:22.778+02	t	3	General Info	\N	f	f
193	44	190	f	f	1	2020-09-30 09:01:22.796+02	t	4	\N	\N	t	f
194	44	191	f	f	1	2020-09-30 09:01:22.814+02	t	5	\N	\N	f	f
195	44	189	f	f	1	2020-09-30 09:01:22.831+02	t	6	\N	\N	t	f
196	44	186	f	f	1	2020-09-30 09:01:22.851+02	t	7	\N	\N	f	f
197	44	188	f	f	1	2020-09-30 09:01:22.871+02	t	8	\N	\N	f	f
198	44	192	f	f	1	2020-09-30 09:01:22.889+02	t	9	\N	\N	t	f
199	44	187	f	f	1	2020-09-30 09:01:22.909+02	t	10	\N	\N	t	f
200	44	193	f	f	1	2020-09-30 09:01:22.929+02	t	11	\N	\N	f	f
201	45	3	f	f	1	2020-09-30 09:01:23.01+02	t	2	General Info	\N	t	f
202	45	98	f	f	1	2020-09-30 09:01:23.029+02	t	3	General Info	\N	f	f
203	46	3	f	f	1	2020-09-30 09:01:23.046+02	t	2	General Info	\N	t	f
204	46	196	f	f	1	2020-09-30 09:01:23.065+02	t	5	\N	\N	f	f
\.


--
-- Data for Name: sample_types; Type: TABLE DATA; Schema: public; Owner: -
--

COPY sample_types (id, code, description, is_listable, generated_from_depth, part_of_depth, modification_timestamp, is_auto_generated_code, generated_code_prefix, is_subcode_unique, inherit_properties, validation_script_id, show_parent_metadata) FROM stdin;
1	UNKNOWN	Unknown	t	0	0	2020-09-30 09:00:55.015791+02	f	S	f	f	\N	f
2	SEARCH_QUERY	\N	t	1	0	2020-09-30 09:01:06.884+02	t	SEARCH_QUERY.	f	f	\N	f
3	ILLUMINA_FLOW_CELL	Container of ILLUMINA_FLOW_LANES\\ Can be created automatically by a drop box and the properties can be filled from the RunInfo.xml and runParameters.xml files	t	0	0	2020-09-30 09:01:11.897+02	f	FLOWCELL-	f	f	\N	f
4	ILLUMINA_FLOW_LANE	Child of LIBRARY or POOL	t	1	1	2020-09-30 09:01:11.903+02	f	FLOWLANE-	f	f	\N	t
5	LIBRARY	Child of RAW and potential parent of POOL	t	1	0	2020-09-30 09:01:11.911+02	t	BSSE-QGF-LIBRARY-	f	f	2	t
6	LIBRARY_POOL	Child of several LIBRARY samples, used for multiplexing	t	1	0	2020-09-30 09:01:11.919+02	t	BSSE-QGF-POOL-	f	f	2	t
7	MASTER_SAMPLE	Sample Type holding Master Data and a parent to RAW	t	0	0	2020-09-30 09:01:11.925+02	t	BSSE-QGF-MASTER-	f	f	\N	f
8	RAW_SAMPLE	Child of MASTER	t	1	0	2020-09-30 09:01:11.931+02	t	BSSE-QGF-RAW-	f	f	2	t
9	MICROSCOPY_EXPERIMENT	Generic microscopy experiment.	t	1	0	2020-09-30 09:01:15.118+02	f	MICROSCOPY_EXPERIMENT.	f	f	\N	f
10	MICROSCOPY_SAMPLE_TYPE	Sample type for microscopy data sets.	t	1	0	2020-09-30 09:01:15.122+02	t	M	f	f	\N	f
11	ORGANIZATION_UNIT	Used to create different organisations for samples since they can't belong to more than one experiment.	t	1	0	2020-09-30 09:01:15.126+02	t	OU.	f	f	\N	f
12	FACS_ARIA_EXPERIMENT	Experiments from the BD FACS Aria III Cell Sorter.	t	1	0	2020-09-30 09:01:19.469+02	f	FACS_ARIA_EXPERIMENT.	f	f	\N	f
13	FACS_ARIA_SPECIMEN	A specimen for the BD FACS Aria III Cell Sorter.	t	1	0	2020-09-30 09:01:19.474+02	t	FACS_ARIA_SPECIMEN.	f	f	\N	f
14	FACS_ARIA_TUBE	A tube for the BD FACS Aria III Cell Sorter.	t	1	0	2020-09-30 09:01:19.479+02	t	FACS_ARIA_TUBE.	f	f	\N	f
15	FACS_ARIA_TUBESET	A virtual container for tubes for the BD FACS Aria III Cell Sorter.	f	1	0	2020-09-30 09:01:19.485+02	t	FACS_ARIA_TUBESET.	f	f	\N	f
16	INFLUX_EXPERIMENT	Experiments from the BD Influx Cell Sorter.	t	1	0	2020-09-30 09:01:19.49+02	f	INFLUX_EXPERIMENT.	f	f	\N	f
17	INFLUX_SPECIMEN	A specimen for the BD Influx Cell Sorter.	t	1	0	2020-09-30 09:01:19.494+02	t	INFLUX_SPECIMEN.	f	f	\N	f
18	INFLUX_TUBE	A tube for the BD Influx Cell Sorter.	t	1	0	2020-09-30 09:01:19.501+02	t	INFLUX_TUBE.	f	f	\N	f
19	INFLUX_TUBESET	A virtual container for tubes for the BD Influx Cell Sorter.	t	1	0	2020-09-30 09:01:19.506+02	t	INFLUX_TUBESET.	f	f	\N	f
20	LSR_FORTESSA_EXPERIMENT	Experiments from the BD LSR Fortessa Flow Cytometer.	t	1	0	2020-09-30 09:01:19.512+02	f	LSR_FORTESSA_EXPERIMENT.	f	f	\N	f
21	LSR_FORTESSA_PLATE	A plate for the BD LSR Fortessa Flow Cytometer.	t	1	0	2020-09-30 09:01:19.517+02	t	LSR_FORTESSA_PLATE.	f	f	\N	f
22	LSR_FORTESSA_SPECIMEN	A specimen for the BD LSR Fortessa Flow Cytometer.	t	1	0	2020-09-30 09:01:19.522+02	t	LSR_FORTESSA_SPECIMEN.	f	f	\N	f
23	LSR_FORTESSA_TUBE	A tube for the BD LSR Fortessa Flow Cytometer.	t	1	0	2020-09-30 09:01:19.527+02	t	LSR_FORTESSA_TUBE.	f	f	\N	f
24	LSR_FORTESSA_TUBESET	A virtual container for tubes for the BD LSR Fortessa Flow Cytometer.	f	1	0	2020-09-30 09:01:19.532+02	t	LSR_FORTESSA_TUBESET.	f	f	\N	f
25	LSR_FORTESSA_WELL	A well for the BD LSR Fortessa Flow Cytometer.	t	1	1	2020-09-30 09:01:19.537+02	t	LSR_FORTESSA_WELL.	f	f	\N	f
26	CYTOFLEX_S_EXPERIMENT	Experiments from the BC CytoFLEX S Flow Cytometer.	t	1	0	2020-09-30 09:01:19.541+02	f	CYTOFLEX_S_EXPERIMENT.	f	f	\N	f
27	CYTOFLEX_S_PLATE	A plate for the BC CytoFLEX S Flow Cytometer.	t	1	0	2020-09-30 09:01:19.546+02	t	CYTOFLEX_S_PLATE.	f	f	\N	f
28	CYTOFLEX_S_SPECIMEN	A specimen for the BC CytoFLEX S Flow Cytometer.	t	1	0	2020-09-30 09:01:19.55+02	t	CYTOFLEX_S_SPECIMEN.	f	f	\N	f
29	CYTOFLEX_S_TUBE	A tube for the BC CytoFLEX S Flow Cytometer.	t	1	0	2020-09-30 09:01:19.555+02	t	CYTOFLEX_S_TUBE.	f	f	\N	f
30	CYTOFLEX_S_TUBESET	A virtual container for tubes for the BC CytoFLEX S Flow Cytometer.	f	1	0	2020-09-30 09:01:19.56+02	t	CYTOFLEX_S_TUBESET.	f	f	\N	f
31	CYTOFLEX_S_WELL	A well for the BC CytoFLEX S Flow Cytometer.	t	1	1	2020-09-30 09:01:19.565+02	t	CYTOFLEX_S_WELL.	f	f	\N	f
32	MOFLO_XDP_EXPERIMENT	Experiments from the BC MoFlo XDP Cell Sorter.	t	1	0	2020-09-30 09:01:19.57+02	f	MOFLO_XDP_EXPERIMENT.	f	f	\N	f
33	MOFLO_XDP_SPECIMEN	A specimen for the BC MoFlo XDP Cell Sorter.	t	1	0	2020-09-30 09:01:19.574+02	t	MOFLO_XDP_SPECIMEN.	f	f	\N	f
34	MOFLO_XDP_TUBE	A tube for the BC MoFlo XDP Cell Sorter.	t	1	0	2020-09-30 09:01:19.578+02	t	MOFLO_XDP_TUBE.	f	f	\N	f
35	MOFLO_XDP_TUBESET	A virtual container for tubes for the BC MoFlo XDP Cell Sorter.	t	1	0	2020-09-30 09:01:19.583+02	t	MOFLO_XDP_TUBESET.	f	f	\N	f
36	S3E_EXPERIMENT	Experiments from the BIORAD S3e Cell Sorter.	t	1	0	2020-09-30 09:01:19.587+02	f	S3E_EXPERIMENT.	f	f	\N	f
37	S3E_SPECIMEN	A specimen for the BIORAD S3e Cell Sorter.	t	1	0	2020-09-30 09:01:19.592+02	t	S3E_SPECIMEN.	f	f	\N	f
38	S3E_TUBE	A tube for the BIORAD S3e Cell Sorter.	t	1	0	2020-09-30 09:01:19.598+02	t	S3E_TUBE.	f	f	\N	f
39	S3E_TUBESET	A virtual container for tubes for the BIORAD S3e Cell Sorter.	t	1	0	2020-09-30 09:01:19.603+02	t	S3E_TUBESET.	f	f	\N	f
40	SONY_SH800S_EXPERIMENT	Experiments from the SONY SH800S Cell Sorter.	t	1	0	2020-09-30 09:01:19.609+02	f	SONY_SH800S_EXPERIMENT.	f	f	\N	f
41	SONY_SH800S_SPECIMEN	A specimen for the SONY SH800S Cell Sorter.	t	1	0	2020-09-30 09:01:19.614+02	t	SONY_SH800S_SPECIMEN.	f	f	\N	f
42	SONY_SH800S_TUBE	A tube for the SONY SH800S Cell Sorter.	t	1	0	2020-09-30 09:01:19.619+02	t	SONY_SH800S_TUBE.	f	f	\N	f
43	SONY_SH800S_TUBESET	A virtual container for tubes for the SONY SH800S Cell Sorter.	f	1	0	2020-09-30 09:01:19.624+02	t	SONY_SH800S_TUBESET.	f	f	\N	f
44	SONY_MA900_EXPERIMENT	Experiments from the SONY MA900 Cell Sorter.	t	1	0	2020-09-30 09:01:19.629+02	f	SONY_MA900_EXPERIMENT.	f	f	\N	f
45	SONY_MA900_SPECIMEN	A specimen for the SONY MA900 Cell Sorter.	t	1	0	2020-09-30 09:01:19.634+02	t	SONY_MA900_SPECIMEN.	f	f	\N	f
46	SONY_MA900_TUBE	A tube for the SONY MA900 Cell Sorter.	t	1	0	2020-09-30 09:01:19.639+02	t	SONY_MA900_TUBE.	f	f	\N	f
47	SONY_MA900_TUBESET	A virtual container for tubes for the SONY MA900 Cell Sorter.	f	1	0	2020-09-30 09:01:19.644+02	t	SONY_MA900_TUBESET.	f	f	\N	f
\.


--
-- Data for Name: samples_all; Type: TABLE DATA; Schema: public; Owner: -
--

COPY samples_all (id, perm_id, sample_identifier, code, expe_id, saty_id, registration_timestamp, modification_timestamp, pers_id_registerer, del_id, orig_del, space_id, samp_id_part_of, pers_id_modifier, code_unique_check, subcode_unique_check, version, proj_id, frozen, frozen_for_comp, frozen_for_children, frozen_for_parents, frozen_for_data, space_frozen, proj_frozen, expe_frozen, cont_frozen, tsvector_document) FROM stdin;
1	20200930090055015-1	/DEFAULT/DEFAULT/DEFAULT	DEFAULT	1	1	2020-09-30 09:00:55.015791+02	2020-09-30 09:00:55.015791+02	1	\N	\N	1	\N	\N	DEFAULT,-1,1,1	\N	0	1	f	f	f	f	f	f	f	f	f	'/default/default/default':3 '20200930090055015-1':1 'default':2
\.


--
-- Data for Name: scripts; Type: TABLE DATA; Schema: public; Owner: -
--

COPY scripts (id, name, script_type, description, script, registration_timestamp, pers_id_registerer, entity_kind, plugin_type, is_available) FROM stdin;
1	Diff_time	DYNAMIC_PROPERTY	Calculates the difference of two given dates	from datetime import datetime\n\ndef dateTimeSplitter(openbisDate):\n  dateAndTime, tz = openbisDate.rsplit(" ", 1)\n  pythonDateTime = datetime.strptime(dateAndTime, "%Y-%m-%d %H:%M:%S")  \n  return pythonDateTime\n\ndef calculate():\n  \n  try:\n    start = dateTimeSplitter(entity.propertyValue('FLOW_CELL_SEQUENCED_ON'))\n    end = dateTimeSplitter(entity.propertyValue('SEQUENCER_FINISHED'))\n    diffTime = end-start\n    return str(diffTime)\n  except:\n    return "N/A"\n	2020-09-30 09:01:11.64+02	1	SAMPLE	JYTHON	t
2	Has_Parents	ENTITY_VALIDATION	Check if the Entity has a parent	def validate(entity, isNew):\n  parents = entity.entityPE().parents\n  if parents:\n    return None\n  else:\n    return "No Parents have been selected!"\n	2020-09-30 09:01:11.887+02	1	SAMPLE	JYTHON	t
3	MICROSCOPY_SERIES_METADATA_EDITOR	MANAGED_PROPERTY	Plug-in for viewing and editing microscopy series metadata information.	import xml.etree.ElementTree as ET\n\ndef configureUI():\n\n    # Create a table builder\n    tableBuilder = createTableBuilder()\n\n    try:\n\n        # Get the property value and create an XML tree\n        root = ET.fromstring(property.getValue().encode('UTF-8'))\n\n        # Extract and sort the metadata attributes\n        keys = root.attrib.keys()\n        keys.sort()\n\n        # Create the header\n        for key in keys: \n            tableBuilder.addHeader(key)\n\n        # Fill in the values\n        row = tableBuilder.addRow()\n        for key in keys:\n            row.setCell(key, root.attrib[key])\n\n    except Exception:\n\n        # Report an error\n        tableBuilder.addHeader("Error")\n        row = tableBuilder.addRow()\n        row.setCell("Error", "Could not retrieve metadata information.")\n\n    # Return the table\n    property.setOwnTab(True)\n    uiDesc = property.getUiDescription()\n    uiDesc.useTableOutput(tableBuilder.getTableModel())\n	2020-09-30 09:01:15.1+02	1	DATA_SET	JYTHON	t
4	DS1_ANNOTATIONS_ENZYME	MANAGED_PROPERTY	Annotations Handler for ENZYME	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "ENZYME"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:12.291+02	3	SAMPLE	JYTHON	t
5	DS1_ANNOTATIONS_PCR_PROTOCOL	MANAGED_PROPERTY	Annotations Handler for PCR_PROTOCOL	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "PCR_PROTOCOL"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:12.589+02	3	SAMPLE	JYTHON	t
6	DS1_MICROSCOPY_SERIES_METADATA_EDITOR	MANAGED_PROPERTY	Plug-in for viewing and editing microscopy series metadata information.	import xml.etree.ElementTree as ET\n\ndef configureUI():\n\n    # Create a table builder\n    tableBuilder = createTableBuilder()\n\n    try:\n\n        # Get the property value and create an XML tree\n        root = ET.fromstring(property.getValue().encode('UTF-8'))\n\n        # Extract and sort the metadata attributes\n        keys = root.attrib.keys()\n        keys.sort()\n\n        # Create the header\n        for key in keys: \n            tableBuilder.addHeader(key)\n\n        # Fill in the values\n        row = tableBuilder.addRow()\n        for key in keys:\n            row.setCell(key, root.attrib[key])\n\n    except Exception:\n\n        # Report an error\n        tableBuilder.addHeader("Error")\n        row = tableBuilder.addRow()\n        row.setCell("Error", "Could not retrieve metadata information.")\n\n    # Return the table\n    property.setOwnTab(True)\n    uiDesc = property.getUiDescription()\n    uiDesc.useTableOutput(tableBuilder.getTableModel())\n	2020-09-30 09:02:12.875+02	3	DATA_SET	JYTHON	t
7	DS1_REQUESTS_CHILDREN_CODE_SAMPLE	DYNAMIC_PROPERTY	Retrieve order code in requests	def retrieve_childrenCode(): \n\n    sample= entity.samplePE()\n    children=sample.children\n    if len(children) != 0: \n        children_code = children[0].getCode()\n    else:\n        children_code="n.a."\n        \n\n    return children_code\n     \ndef calculate():\n    return retrieve_childrenCode()\n	2020-09-30 09:02:13.13+02	3	SAMPLE	JYTHON	t
8	DS1_COMMENTS_DATA_SET	MANAGED_PROPERTY	Comments Handler	from java.util import Date\n\n"""\nExample XML property value handled by this script:\n<root>\n  <commentEntry date="2011-02-20 14:15:28 GMT+01:00" person="buczekp">Here is the 1st  entry text.<commentEntry>\n  <commentEntry date="2011-02-20 14:16:28 GMT+01:00" person="kohleman">Here is the 2nd  entry text - a warning!<commentEntry>\n  <commentEntry date="2011-02-20 14:17:28 GMT+01:00" person="tpylak">Here is the 3rd  entry text - an error!!!<commentEntry>\n  <commentEntry date="2011-02-20 14:18:28 GMT+01:00" person="brinn">Here is the 4th  entry text - an error!!!<commentEntry>\n  <commentEntry date="2011-02-20 14:19:28 GMT+01:00" person="felmer">Here is the 5th  entry text - a warning!<commentEntry>\n</root>\n"""\n##\n## Configuration\n##\nCOMMENT_ENTRY_ELEMENT_LABEL = 'commentEntry'\n\n""" labels of table columns and corresponding input fields """\nDATE_LABEL = 'Date'\nPERSON_LABEL = 'Person'\nCOMMENT_TEXT_LABEL = 'Comment Text'\n  \n""" names of attributes of XML elements for comment entries """\nDATE_ATTRIBUTE = 'date'\nPERSON_ATTRIBUTE = 'person'\n  \n""" action labels (shown as button labels in UI) """\nADD_ACTION_LABEL = 'Add Comment Entry'\nEDIT_ACTION_LABEL = 'Edit'\nDELETE_ACTION_LABEL = 'Delete'\n  \n##\n## Main Methods\n##\ndef configureUI():\n    """Create table builder and add headers of columns."""\n    builder = createTableBuilder()\n    builder.addHeader(DATE_LABEL, 250) # date and comment text values are long, override default width (150)\n    builder.addHeader(PERSON_LABEL)\n    builder.addHeader(COMMENT_TEXT_LABEL, 400)\n      \n    """\n       Extract XML elements from property value to a Python list.\n       For each element (comment entry) add add a row to the table.  \n    """\n    elements = list(propertyConverter().convertToElements(property))\n    for commentEntry in elements:\n        row = builder.addRow()\n        row.setCell(DATE_LABEL, Date(long(commentEntry.getAttribute(DATE_ATTRIBUTE))))\n        row.setCell(PERSON_LABEL, commentEntry.getAttribute(PERSON_ATTRIBUTE))\n        row.setCell(COMMENT_TEXT_LABEL, commentEntry.getData())\n  \n    """Specify that the property should be shown in a tab and set the table output."""\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(builder.getTableModel())\n  \n    """\n       Define and add actions with input fields used to:\n       1. specify attributes of new comment entry,\n    """\n    addAction = uiDescription.addTableAction(ADD_ACTION_LABEL)\\\n                             .setDescription('Add a new comment entry:')\n    widgets = [\n        inputWidgetFactory().createMultilineTextInputField(COMMENT_TEXT_LABEL)\\\n                            .setMandatory(True)\n    ]\n    addAction.addInputWidgets(widgets)\n      \n    """\n       2. modify attributes of a selected comment entry,\n    """\n    editAction = uiDescription.addTableAction(EDIT_ACTION_LABEL)\\\n                              .setDescription('Edit selected comment entry:')\n    # Exactly 1 row needs to be selected to enable action.\n    editAction.setRowSelectionRequiredSingle()            \n    widgets = [\n        inputWidgetFactory().createMultilineTextInputField(COMMENT_TEXT_LABEL).setMandatory(True)\n    ]\n    editAction.addInputWidgets(widgets)\n    # Bind field name with column name.\n    editAction.addBinding(COMMENT_TEXT_LABEL, COMMENT_TEXT_LABEL)\n  \n    """\n       3. delete selected comment entries.\n    """\n    deleteAction = uiDescription.addTableAction(DELETE_ACTION_LABEL)\\\n                                .setDescription('Are you sure you want to delete selected comment entry?')\n    # Delete is enabled when at least 1 row is selected.\n    deleteAction.setRowSelectionRequired()\n    \n  \ndef updateFromUI(action):\n    """Extract list of elements from old value of the property."""\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n  \n    """Implement behaviour of user actions."""\n    if action.name == ADD_ACTION_LABEL:\n        """\n           For 'add' action create new comment entry element with values from input fields\n           and add it to existing elements.\n        """\n        element = elementFactory().createElement(COMMENT_ENTRY_ELEMENT_LABEL)\n        """Fill element attributes with appropriate values."""\n        element.addAttribute(DATE_ATTRIBUTE, str(Date().getTime()))            # current date\n        element.addAttribute(PERSON_ATTRIBUTE, action.getPerson().getUserId()) # invoker the action\n        """Retrieve values from input fields filled by user on the client side."""\n\n        """Set comment text as a text element, not an attribute."""\n        element.setData(action.getInputValue(COMMENT_TEXT_LABEL))\n        """Add the new entry to the end of the element list."""\n        elements.append(element)\n    elif action.name == EDIT_ACTION_LABEL:\n        """\n           For 'edit' action find the comment entry element corresponding to selected row\n           and replace it with an element with values from input fields.\n        """\n        \n        selectedRowId = action.getSelectedRows()[0]\n        xmlUser = elements[selectedRowId].getAttribute(PERSON_ATTRIBUTE)\n        if action.getPerson().getUserId() == xmlUser:\n          elements[selectedRowId].setData(action.getInputValue(COMMENT_TEXT_LABEL))\n        else:\n          raise ValidationException('Comment creator and current user differ:\\n' + str(xmlUser) + "!=" + str(action.getPerson().getUserId()) )\n    elif action.name == DELETE_ACTION_LABEL:\n        """\n           For 'delete' action delete the entries that correspond to selected rows.\n           NOTE: As many rows can be deleted at once it is easier to delete them in reversed order.\n        """\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()       \n        for rowId in rowIds:\n              xmlUser = elements[rowId].getAttribute(PERSON_ATTRIBUTE)\n              if action.getPerson().getUserId() == xmlUser:\n                elements.pop(rowId)\n              else:\n                raise ValidationException('Comment creator and current user differ:\\n' +  str(xmlUser) + "!=" + str(action.getPerson().getUserId()) )\n    else:\n        raise ValidationException('action not supported')\n      \n    """Update value of the managed property to XML string created from modified list of elements."""\n    property.value = converter.convertToString(elements)\n\n##\n## Form Methods\n##\ndef showRawValueInForms():\n    return False\n \ndef updateFromRegistrationForm(bindings):\n    elements = []\n    for item in bindings:\n        comment_text_list = item.get('COMMENTENTRY')\n        sampleLink = _createCommentEntry(comment_text_list)\n        elements.append(sampleLink)\n            \n    property.value = propertyConverter().convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    return [COMMENT_ENTRY_ELEMENT_LABEL]\n\ndef updateFromBatchInput(bindings):\n    elements = []\n    input = bindings.get('COMMENTENTRY')\n    if input is not None:\n        commentEntry = _createCommentEntry(input)\n        elements.append(commentEntry)\n        property.value = propertyConverter().convertToString(elements)\n        \n##\n## Help Methods\n##\ndef _createCommentEntry(comment_text_list):\n    #if comment_text_list is not None:\n    commentEntry = elementFactory().createElement(COMMENT_ENTRY_ELEMENT_LABEL)\n    commentEntry.addAttribute(PERSON_ATTRIBUTE, person.getUserId())\n    commentEntry.addAttribute(DATE_ATTRIBUTE,str(Date().getTime()))\n    commentEntry.setData(comment_text_list)\n    return commentEntry   	2020-09-30 09:02:13.368+02	3	DATA_SET	JYTHON	t
9	DS1_ANNOTATIONS_SOLUTION_BUFFER	MANAGED_PROPERTY	Annotations Handler for SOLUTION_BUFFER	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "SOLUTION_BUFFER"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:13.701+02	3	SAMPLE	JYTHON	t
10	DS1_ANNOTATIONS_ANTIBODY	MANAGED_PROPERTY	Annotations Handler for ANTIBODY	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "ANTIBODY"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:13.973+02	3	SAMPLE	JYTHON	t
11	DS1_ANNOTATIONS_EXPERIMENTAL_STEP	MANAGED_PROPERTY	Annotations Handler for EXPERIMENTAL_STEP	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "EXPERIMENTAL_STEP"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:14.218+02	3	SAMPLE	JYTHON	t
12	DS1_ANNOTATIONS_YEAST	MANAGED_PROPERTY	Annotations Handler for YEAST	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "YEAST"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:14.46+02	3	SAMPLE	JYTHON	t
13	DS1_ANNOTATIONS_BACTERIA	MANAGED_PROPERTY	Annotations Handler for BACTERIA	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "BACTERIA"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:14.713+02	3	SAMPLE	JYTHON	t
14	DS1_ANNOTATIONS_SEARCH_QUERY	MANAGED_PROPERTY	Annotations Handler for SEARCH_QUERY	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "SEARCH_QUERY"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:14.96+02	3	SAMPLE	JYTHON	t
15	DS1_COMMENTS_EXPERIMENT	MANAGED_PROPERTY	Comments Handler	from java.util import Date\n\n"""\nExample XML property value handled by this script:\n<root>\n  <commentEntry date="2011-02-20 14:15:28 GMT+01:00" person="buczekp">Here is the 1st  entry text.<commentEntry>\n  <commentEntry date="2011-02-20 14:16:28 GMT+01:00" person="kohleman">Here is the 2nd  entry text - a warning!<commentEntry>\n  <commentEntry date="2011-02-20 14:17:28 GMT+01:00" person="tpylak">Here is the 3rd  entry text - an error!!!<commentEntry>\n  <commentEntry date="2011-02-20 14:18:28 GMT+01:00" person="brinn">Here is the 4th  entry text - an error!!!<commentEntry>\n  <commentEntry date="2011-02-20 14:19:28 GMT+01:00" person="felmer">Here is the 5th  entry text - a warning!<commentEntry>\n</root>\n"""\n##\n## Configuration\n##\nCOMMENT_ENTRY_ELEMENT_LABEL = 'commentEntry'\n\n""" labels of table columns and corresponding input fields """\nDATE_LABEL = 'Date'\nPERSON_LABEL = 'Person'\nCOMMENT_TEXT_LABEL = 'Comment Text'\n  \n""" names of attributes of XML elements for comment entries """\nDATE_ATTRIBUTE = 'date'\nPERSON_ATTRIBUTE = 'person'\n  \n""" action labels (shown as button labels in UI) """\nADD_ACTION_LABEL = 'Add Comment Entry'\nEDIT_ACTION_LABEL = 'Edit'\nDELETE_ACTION_LABEL = 'Delete'\n  \n##\n## Main Methods\n##\ndef configureUI():\n    """Create table builder and add headers of columns."""\n    builder = createTableBuilder()\n    builder.addHeader(DATE_LABEL, 250) # date and comment text values are long, override default width (150)\n    builder.addHeader(PERSON_LABEL)\n    builder.addHeader(COMMENT_TEXT_LABEL, 400)\n      \n    """\n       Extract XML elements from property value to a Python list.\n       For each element (comment entry) add add a row to the table.  \n    """\n    elements = list(propertyConverter().convertToElements(property))\n    for commentEntry in elements:\n        row = builder.addRow()\n        row.setCell(DATE_LABEL, Date(long(commentEntry.getAttribute(DATE_ATTRIBUTE))))\n        row.setCell(PERSON_LABEL, commentEntry.getAttribute(PERSON_ATTRIBUTE))\n        row.setCell(COMMENT_TEXT_LABEL, commentEntry.getData())\n  \n    """Specify that the property should be shown in a tab and set the table output."""\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(builder.getTableModel())\n  \n    """\n       Define and add actions with input fields used to:\n       1. specify attributes of new comment entry,\n    """\n    addAction = uiDescription.addTableAction(ADD_ACTION_LABEL)\\\n                             .setDescription('Add a new comment entry:')\n    widgets = [\n        inputWidgetFactory().createMultilineTextInputField(COMMENT_TEXT_LABEL)\\\n                            .setMandatory(True)\n    ]\n    addAction.addInputWidgets(widgets)\n      \n    """\n       2. modify attributes of a selected comment entry,\n    """\n    editAction = uiDescription.addTableAction(EDIT_ACTION_LABEL)\\\n                              .setDescription('Edit selected comment entry:')\n    # Exactly 1 row needs to be selected to enable action.\n    editAction.setRowSelectionRequiredSingle()            \n    widgets = [\n        inputWidgetFactory().createMultilineTextInputField(COMMENT_TEXT_LABEL).setMandatory(True)\n    ]\n    editAction.addInputWidgets(widgets)\n    # Bind field name with column name.\n    editAction.addBinding(COMMENT_TEXT_LABEL, COMMENT_TEXT_LABEL)\n  \n    """\n       3. delete selected comment entries.\n    """\n    deleteAction = uiDescription.addTableAction(DELETE_ACTION_LABEL)\\\n                                .setDescription('Are you sure you want to delete selected comment entry?')\n    # Delete is enabled when at least 1 row is selected.\n    deleteAction.setRowSelectionRequired()\n    \n  \ndef updateFromUI(action):\n    """Extract list of elements from old value of the property."""\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n  \n    """Implement behaviour of user actions."""\n    if action.name == ADD_ACTION_LABEL:\n        """\n           For 'add' action create new comment entry element with values from input fields\n           and add it to existing elements.\n        """\n        element = elementFactory().createElement(COMMENT_ENTRY_ELEMENT_LABEL)\n        """Fill element attributes with appropriate values."""\n        element.addAttribute(DATE_ATTRIBUTE, str(Date().getTime()))            # current date\n        element.addAttribute(PERSON_ATTRIBUTE, action.getPerson().getUserId()) # invoker the action\n        """Retrieve values from input fields filled by user on the client side."""\n\n        """Set comment text as a text element, not an attribute."""\n        element.setData(action.getInputValue(COMMENT_TEXT_LABEL))\n        """Add the new entry to the end of the element list."""\n        elements.append(element)\n    elif action.name == EDIT_ACTION_LABEL:\n        """\n           For 'edit' action find the comment entry element corresponding to selected row\n           and replace it with an element with values from input fields.\n        """\n        \n        selectedRowId = action.getSelectedRows()[0]\n        xmlUser = elements[selectedRowId].getAttribute(PERSON_ATTRIBUTE)\n        if action.getPerson().getUserId() == xmlUser:\n          elements[selectedRowId].setData(action.getInputValue(COMMENT_TEXT_LABEL))\n        else:\n          raise ValidationException('Comment creator and current user differ:\\n' + str(xmlUser) + "!=" + str(action.getPerson().getUserId()) )\n    elif action.name == DELETE_ACTION_LABEL:\n        """\n           For 'delete' action delete the entries that correspond to selected rows.\n           NOTE: As many rows can be deleted at once it is easier to delete them in reversed order.\n        """\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()       \n        for rowId in rowIds:\n              xmlUser = elements[rowId].getAttribute(PERSON_ATTRIBUTE)\n              if action.getPerson().getUserId() == xmlUser:\n                elements.pop(rowId)\n              else:\n                raise ValidationException('Comment creator and current user differ:\\n' +  str(xmlUser) + "!=" + str(action.getPerson().getUserId()) )\n    else:\n        raise ValidationException('action not supported')\n      \n    """Update value of the managed property to XML string created from modified list of elements."""\n    property.value = converter.convertToString(elements)\n\n##\n## Form Methods\n##\ndef showRawValueInForms():\n    return False\n \ndef updateFromRegistrationForm(bindings):\n    elements = []\n    for item in bindings:\n        comment_text_list = item.get('COMMENTENTRY')\n        sampleLink = _createCommentEntry(comment_text_list)\n        elements.append(sampleLink)\n            \n    property.value = propertyConverter().convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    return [COMMENT_ENTRY_ELEMENT_LABEL]\n\ndef updateFromBatchInput(bindings):\n    elements = []\n    input = bindings.get('COMMENTENTRY')\n    if input is not None:\n        commentEntry = _createCommentEntry(input)\n        elements.append(commentEntry)\n        property.value = propertyConverter().convertToString(elements)\n        \n##\n## Help Methods\n##\ndef _createCommentEntry(comment_text_list):\n    #if comment_text_list is not None:\n    commentEntry = elementFactory().createElement(COMMENT_ENTRY_ELEMENT_LABEL)\n    commentEntry.addAttribute(PERSON_ATTRIBUTE, person.getUserId())\n    commentEntry.addAttribute(DATE_ATTRIBUTE,str(Date().getTime()))\n    commentEntry.setData(comment_text_list)\n    return commentEntry   	2020-09-30 09:02:15.18+02	3	EXPERIMENT	JYTHON	t
16	DS1_Diff_time	DYNAMIC_PROPERTY	Calculates the difference of two given dates	from datetime import datetime\n\ndef dateTimeSplitter(openbisDate):\n  dateAndTime, tz = openbisDate.rsplit(" ", 1)\n  pythonDateTime = datetime.strptime(dateAndTime, "%Y-%m-%d %H:%M:%S")  \n  return pythonDateTime\n\ndef calculate():\n  \n  try:\n    start = dateTimeSplitter(entity.propertyValue('FLOW_CELL_SEQUENCED_ON'))\n    end = dateTimeSplitter(entity.propertyValue('SEQUENCER_FINISHED'))\n    diffTime = end-start\n    return str(diffTime)\n  except:\n    return "N/A"\n	2020-09-30 09:02:15.2+02	3	SAMPLE	JYTHON	t
17	DS1_ANNOTATIONS_PLASMID	MANAGED_PROPERTY	Annotations Handler for PLASMID	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "PLASMID"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:15.435+02	3	SAMPLE	JYTHON	t
18	DS1_ANNOTATIONS_FLY	MANAGED_PROPERTY	Annotations Handler for FLY	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "FLY"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:15.67+02	3	SAMPLE	JYTHON	t
19	DS1_ANNOTATIONS_GENERAL_PROTOCOL	MANAGED_PROPERTY	Annotations Handler for GENERAL_PROTOCOL	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "GENERAL_PROTOCOL"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:15.919+02	3	SAMPLE	JYTHON	t
20	DS1_GENETIC_MODIFICATIONS_SAMPLE	DYNAMIC_PROPERTY	Genetic Modifications Handler	import xml.dom.minidom\nfrom ch.systemsx.cisd.common.exceptions import UserFailureException\n\nconfiguration = {}\nconfiguration["YEAST"] = ["PLASMID"]\nconfiguration["BACTERIA"] = ["PLASMID"]\nconfiguration["CELL_LINE"] = ["PLASMID"]\nconfiguration["FLY"] = ["PLASMID"]\n\ndef getSampleTypeCode(sampleAdaptor):\n    return sampleAdaptor.samplePE().getSampleType().getCode()\n\ndef calculate():\n    #Configuration\n    sampleTypeCode = getSampleTypeCode(entity)\n    typesForGenotype = configuration[sampleTypeCode]\n    \n    genotypeResult = ""\n    isFirst = True\n    parentIterables = [{\n                        "child" : entity,\n                        "parents" : entity.parents(),\n                        "lost" : []\n                        }]\n\n    while len(parentIterables) > 0:\n        parentGroup = parentIterables.pop(0)\n        parents = parentGroup["parents"]\n        child = parentGroup["child"]\n        lostList = parentGroup["lost"][:]\n        \n        newLostList = []\n        newParentIterables = []\n        for parent in parents:\n            parentTypeCode = getSampleTypeCode(parent)\n            if parentTypeCode in typesForGenotype:\n                parentCode = parent.code()\n                #Add the code\n                annotationMap = getAnnotationsForParent(parent, child)\n                if(annotationMap["PLASMID_RELATIONSHIP"] == "LOT"):\n                    newLostList.append(parent.entityPE().getPermId())\n                elif parent.entityPE().getPermId() not in lostList:\n                     #Check if is the first to add the separator or not\n                    if isFirst:\n                        isFirst = False\n                    else:\n                        genotypeResult = genotypeResult + "\\n"\n                    genotypeResult = genotypeResult + parent.code() + " " + getAnnotationString(annotationMap)\n            else:\n                newParentIterables.append({\n                                        "child" : parent,\n                                        "parents" : parent.parents()\n                                        })\n        for newParentIterable in newParentIterables:\n            lostList.extend(newLostList);\n            newParentIterable["lost"] = lostList;\n            parentIterables.append(newParentIterable);\n    return genotypeResult\n\ndef getAnnotationString(annotationMap):\n    return annotationMap["PLASMID_RELATIONSHIP"] + " " + annotationMap["PLASMID_ANNOTATION"]\n\ndef getAnnotationsForParent(parent, child):\n    permId = parent.entityPE().getPermId()\n    annotations = child.propertyValue("ANNOTATIONS_STATE")\n    if (annotations is not None) and ('<root' in annotations):\n        relationshipValue = getAnnotationFromPermId(annotations, permId, "PLASMID_RELATIONSHIP")\n        if relationshipValue is None:\n            relationshipValue = "None"\n        annotationValue = getAnnotationFromPermId(annotations, permId, "PLASMID_ANNOTATION");\n        if annotationValue is None:\n            annotationValue = ""\n        annotation = "\\"" + str(annotationValue) + "\\""\n        return {"PLASMID_RELATIONSHIP" : str(relationshipValue), "PLASMID_ANNOTATION" : str(annotation)}; \n    return "No Annotations Found"\n    \ndef getAnnotationFromPermId(annotations, permId, key):\n    dom = xml.dom.minidom.parseString(annotations)\n    for child in dom.childNodes[0].childNodes:\n        if child.localName != None:\n            permIdFound = child.attributes["permId"].value\n            if permIdFound == permId:\n                keys = child.attributes.keys();\n                for keyFound in keys:\n                    if keyFound == key:\n                        return child.attributes[key].value\n    return None\n    \ndef getValueOrNull(map, key):\n    if key in map:\n        value = map[key]\n        if not value: #Check for null strings\n            return None\n        else:\n            return value\n    else:\n        return None	2020-09-30 09:02:16.298+02	3	SAMPLE	JYTHON	t
21	DS1_ANNOTATIONS_MEDIA	MANAGED_PROPERTY	Annotations Handler for MEDIA	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "MEDIA"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:16.537+02	3	SAMPLE	JYTHON	t
22	DS1_ANNOTATIONS_WESTERN_BLOTTING_PROTOCOL	MANAGED_PROPERTY	Annotations Handler for WESTERN_BLOTTING_PROTOCOL	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "WESTERN_BLOTTING_PROTOCOL"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:16.764+02	3	SAMPLE	JYTHON	t
23	DS1_ANNOTATIONS_RNA	MANAGED_PROPERTY	Annotations Handler for RNA	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "RNA"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:17.026+02	3	SAMPLE	JYTHON	t
24	DS1_Has_Parents	ENTITY_VALIDATION	Check if the Entity has a parent	def validate(entity, isNew):\n  parents = entity.entityPE().parents\n  if parents:\n    return None\n  else:\n    return "No Parents have been selected!"\n	2020-09-30 09:02:17.048+02	3	SAMPLE	JYTHON	t
25	DS1_COMMENTS_SAMPLE	MANAGED_PROPERTY	Comments Handler	from java.util import Date\n\n"""\nExample XML property value handled by this script:\n<root>\n  <commentEntry date="2011-02-20 14:15:28 GMT+01:00" person="buczekp">Here is the 1st  entry text.<commentEntry>\n  <commentEntry date="2011-02-20 14:16:28 GMT+01:00" person="kohleman">Here is the 2nd  entry text - a warning!<commentEntry>\n  <commentEntry date="2011-02-20 14:17:28 GMT+01:00" person="tpylak">Here is the 3rd  entry text - an error!!!<commentEntry>\n  <commentEntry date="2011-02-20 14:18:28 GMT+01:00" person="brinn">Here is the 4th  entry text - an error!!!<commentEntry>\n  <commentEntry date="2011-02-20 14:19:28 GMT+01:00" person="felmer">Here is the 5th  entry text - a warning!<commentEntry>\n</root>\n"""\n##\n## Configuration\n##\nCOMMENT_ENTRY_ELEMENT_LABEL = 'commentEntry'\n\n""" labels of table columns and corresponding input fields """\nDATE_LABEL = 'Date'\nPERSON_LABEL = 'Person'\nCOMMENT_TEXT_LABEL = 'Comment Text'\n  \n""" names of attributes of XML elements for comment entries """\nDATE_ATTRIBUTE = 'date'\nPERSON_ATTRIBUTE = 'person'\n  \n""" action labels (shown as button labels in UI) """\nADD_ACTION_LABEL = 'Add Comment Entry'\nEDIT_ACTION_LABEL = 'Edit'\nDELETE_ACTION_LABEL = 'Delete'\n  \n##\n## Main Methods\n##\ndef configureUI():\n    """Create table builder and add headers of columns."""\n    builder = createTableBuilder()\n    builder.addHeader(DATE_LABEL, 250) # date and comment text values are long, override default width (150)\n    builder.addHeader(PERSON_LABEL)\n    builder.addHeader(COMMENT_TEXT_LABEL, 400)\n      \n    """\n       Extract XML elements from property value to a Python list.\n       For each element (comment entry) add add a row to the table.  \n    """\n    elements = list(propertyConverter().convertToElements(property))\n    for commentEntry in elements:\n        row = builder.addRow()\n        row.setCell(DATE_LABEL, Date(long(commentEntry.getAttribute(DATE_ATTRIBUTE))))\n        row.setCell(PERSON_LABEL, commentEntry.getAttribute(PERSON_ATTRIBUTE))\n        row.setCell(COMMENT_TEXT_LABEL, commentEntry.getData())\n  \n    """Specify that the property should be shown in a tab and set the table output."""\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(builder.getTableModel())\n  \n    """\n       Define and add actions with input fields used to:\n       1. specify attributes of new comment entry,\n    """\n    addAction = uiDescription.addTableAction(ADD_ACTION_LABEL)\\\n                             .setDescription('Add a new comment entry:')\n    widgets = [\n        inputWidgetFactory().createMultilineTextInputField(COMMENT_TEXT_LABEL)\\\n                            .setMandatory(True)\n    ]\n    addAction.addInputWidgets(widgets)\n      \n    """\n       2. modify attributes of a selected comment entry,\n    """\n    editAction = uiDescription.addTableAction(EDIT_ACTION_LABEL)\\\n                              .setDescription('Edit selected comment entry:')\n    # Exactly 1 row needs to be selected to enable action.\n    editAction.setRowSelectionRequiredSingle()            \n    widgets = [\n        inputWidgetFactory().createMultilineTextInputField(COMMENT_TEXT_LABEL).setMandatory(True)\n    ]\n    editAction.addInputWidgets(widgets)\n    # Bind field name with column name.\n    editAction.addBinding(COMMENT_TEXT_LABEL, COMMENT_TEXT_LABEL)\n  \n    """\n       3. delete selected comment entries.\n    """\n    deleteAction = uiDescription.addTableAction(DELETE_ACTION_LABEL)\\\n                                .setDescription('Are you sure you want to delete selected comment entry?')\n    # Delete is enabled when at least 1 row is selected.\n    deleteAction.setRowSelectionRequired()\n    \n  \ndef updateFromUI(action):\n    """Extract list of elements from old value of the property."""\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n  \n    """Implement behaviour of user actions."""\n    if action.name == ADD_ACTION_LABEL:\n        """\n           For 'add' action create new comment entry element with values from input fields\n           and add it to existing elements.\n        """\n        element = elementFactory().createElement(COMMENT_ENTRY_ELEMENT_LABEL)\n        """Fill element attributes with appropriate values."""\n        element.addAttribute(DATE_ATTRIBUTE, str(Date().getTime()))            # current date\n        element.addAttribute(PERSON_ATTRIBUTE, action.getPerson().getUserId()) # invoker the action\n        """Retrieve values from input fields filled by user on the client side."""\n\n        """Set comment text as a text element, not an attribute."""\n        element.setData(action.getInputValue(COMMENT_TEXT_LABEL))\n        """Add the new entry to the end of the element list."""\n        elements.append(element)\n    elif action.name == EDIT_ACTION_LABEL:\n        """\n           For 'edit' action find the comment entry element corresponding to selected row\n           and replace it with an element with values from input fields.\n        """\n        \n        selectedRowId = action.getSelectedRows()[0]\n        xmlUser = elements[selectedRowId].getAttribute(PERSON_ATTRIBUTE)\n        if action.getPerson().getUserId() == xmlUser:\n          elements[selectedRowId].setData(action.getInputValue(COMMENT_TEXT_LABEL))\n        else:\n          raise ValidationException('Comment creator and current user differ:\\n' + str(xmlUser) + "!=" + str(action.getPerson().getUserId()) )\n    elif action.name == DELETE_ACTION_LABEL:\n        """\n           For 'delete' action delete the entries that correspond to selected rows.\n           NOTE: As many rows can be deleted at once it is easier to delete them in reversed order.\n        """\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()       \n        for rowId in rowIds:\n              xmlUser = elements[rowId].getAttribute(PERSON_ATTRIBUTE)\n              if action.getPerson().getUserId() == xmlUser:\n                elements.pop(rowId)\n              else:\n                raise ValidationException('Comment creator and current user differ:\\n' +  str(xmlUser) + "!=" + str(action.getPerson().getUserId()) )\n    else:\n        raise ValidationException('action not supported')\n      \n    """Update value of the managed property to XML string created from modified list of elements."""\n    property.value = converter.convertToString(elements)\n\n##\n## Form Methods\n##\ndef showRawValueInForms():\n    return False\n \ndef updateFromRegistrationForm(bindings):\n    elements = []\n    for item in bindings:\n        comment_text_list = item.get('COMMENTENTRY')\n        sampleLink = _createCommentEntry(comment_text_list)\n        elements.append(sampleLink)\n            \n    property.value = propertyConverter().convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    return [COMMENT_ENTRY_ELEMENT_LABEL]\n\ndef updateFromBatchInput(bindings):\n    elements = []\n    input = bindings.get('COMMENTENTRY')\n    if input is not None:\n        commentEntry = _createCommentEntry(input)\n        elements.append(commentEntry)\n        property.value = propertyConverter().convertToString(elements)\n        \n##\n## Help Methods\n##\ndef _createCommentEntry(comment_text_list):\n    #if comment_text_list is not None:\n    commentEntry = elementFactory().createElement(COMMENT_ENTRY_ELEMENT_LABEL)\n    commentEntry.addAttribute(PERSON_ATTRIBUTE, person.getUserId())\n    commentEntry.addAttribute(DATE_ATTRIBUTE,str(Date().getTime()))\n    commentEntry.setData(comment_text_list)\n    return commentEntry   	2020-09-30 09:02:17.276+02	3	SAMPLE	JYTHON	t
26	DS1_ANNOTATIONS_CHEMICAL	MANAGED_PROPERTY	Annotations Handler for CHEMICAL	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "CHEMICAL"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:17.501+02	3	SAMPLE	JYTHON	t
27	DS1_ANNOTATIONS_OLIGO	MANAGED_PROPERTY	Annotations Handler for OLIGO	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "OLIGO"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:17.741+02	3	SAMPLE	JYTHON	t
28	DS1_ANNOTATIONS_CELL_LINE	MANAGED_PROPERTY	Annotations Handler for CELL_LINE	from ch.systemsx.cisd.openbis.generic.server import CommonServiceProvider\n\n##\n## Configuration\n##\n\n# This needs to be edited for each sample type to match the Profile.js ANNOTATION_PROPERTIES map.\nconfiguration = {}\nconfiguration["MEDIA"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["SOLUTION_BUFFER"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["GENERAL_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\nconfiguration["PCR_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["WESTERN_BLOTTING_PROTOCOL"] = {\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["PLASMID"] = {\n                          "PLASMID" : {"COMMENTS" : False }\n                         };\n\nconfiguration["BACTERIA"] = {\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["YEAST"] = {\n                          "YEAST" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False, "CONTAINED" : False }\n                         };\n\nconfiguration["CELL_LINE"] = {\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False }\n                         };\n\nconfiguration["FLY"] = {\n                          "FLY" : {"COMMENTS" : False },\n                          "PLASMID" : {"PLASMID_RELATIONSHIP" : False, "PLASMID_ANNOTATION" : False, "COMMENTS" : False }\n                         };\n\nconfiguration["EXPERIMENTAL_STEP"] = {\n                          "ANTIBODY" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "BACTERIA" : {"COMMENTS" : False },\n                          "CELL_LINE" : {"COMMENTS" : False },\n                          "CHEMICAL" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "ENZYME" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "FLY" : {"COMMENTS" : False },\n                          "MEDIA" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "OLIGO" : {"COMMENTS" : False },\n                          "PLASMID" : {"COMMENTS" : False },\n                          "RNA" : {"COMMENTS" : False },\n                          "SOLUTION_BUFFER" : {"QUANTITY" : False, "COMMENTS" : False },\n                          "YEAST" : {"COMMENTS" : False },\n                          "GENERAL_PROTOCOL" : {"COMMENTS" : False },\n                          "PCR_PROTOCOL" : {"COMMENTS" : False },\n                          "WESTERN_BLOTTING_PROTOCOL" : {"COMMENTS" : False }\n                         };\n\n#Global Variables\nannotableType = "CELL_LINE"\npropertyTypes = None\ndef getPropertyTypes():\n    global propertyTypes\n    if propertyTypes is None:\n        server = CommonServiceProvider.getCommonServer()\n        contextOrNull = server.tryToAuthenticateAsSystem()\n        propertyTypes = server.listPropertyTypes(contextOrNull.getSessionToken(), False)\n    return propertyTypes;\n\n##\n## Help Methods\n##\ndef getAllAnnotableSampleTypesForType(fromAnnotableType):\n    allTypes = {};\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    allTypes[sampleTypeWithAnnotationsForType] = True;\n    return allTypes;\n\ndef getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCodeToFind, fromAnnotableType):\n    for sampleTypeWithAnnotations in configuration:\n        if (fromAnnotableType == None) or (fromAnnotableType == sampleTypeWithAnnotations):\n            for sampleTypeWithAnnotationsForType in configuration[sampleTypeWithAnnotations]:\n                    if sampleTypeWithAnnotationsForType == sampleTypeCodeToFind:\n                            return configuration[sampleTypeWithAnnotations][sampleTypeWithAnnotationsForType];\n    return None;\n    \ndef getPropertyType(propertyTypeCode):\n    for propertyType in getPropertyTypes():\n        if propertyType.code == propertyTypeCode:\n            return propertyType\n    return None;\n\ndef createAnnotationsFor(identifier, annotations, sampleType):\n    permId = entityInformationProvider().getSamplePermId(identifier);\n    newAnnotation = elementFactory().createSampleLink(permId)\n    \n    newAnnotation.addAttribute("identifier", identifier)\n    newAnnotation.addAttribute("sampleType", sampleType)\n    for annotation in annotations:\n        newAnnotation.addAttribute(annotation, annotations[annotation])\n    return newAnnotation\n\ndef getWidgetForAdd(sampleTypeCode, annotableType):\n    #print "sampleTypeCode:" + sampleTypeCode + " - " + annotableType #Deleting this comment causes the thing to break\n    widgets = []\n    widgetIdentifier = inputWidgetFactory().createTextInputField("identifier")\\\n                            .setMandatory(True)\\\n                            .setValue("")\\\n                            .setDescription("")\n    widgets.append(widgetIdentifier)\n    for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n        propertyType = getPropertyType(propertyTypeCode)\n        widget = inputWidgetFactory().createTextInputField(propertyType.label)\\\n                        .setMandatory(getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType)[propertyTypeCode])\\\n                        .setValue("")\\\n                        .setDescription(propertyType.description)\n        widgets.append(widget)\n    return widgets;\n\ndef isValid(dataType, value):\n    return True\n\n##\n## Main Methods\n##\ndef configureUI():\n    # Add Headers\n    tableBuilder = createTableBuilder()\n    tableBuilder.addHeader("identifier")\n    tableBuilder.addHeader("sampleType")\n    tableBuilder.addHeader("name")\n    \n    usedTableHeaders = {"identifier" : True, "sampleType" : True, "name" : True }\n    \n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            if propertyTypeCode not in usedTableHeaders:\n                tableBuilder.addHeader(propertyTypeCode)\n                usedTableHeaders[propertyTypeCode] = True\n\n    property.setOwnTab(True)\n    uiDescription = property.getUiDescription()\n    uiDescription.useTableOutput(tableBuilder.getTableModel())\n    \n    # Add Rows\n    samples = list(propertyConverter().convertToElements(property))\n    for sample in samples:\n        row = tableBuilder.addRow()\n        permId = sample.getAttribute("permId")\n        \n        nameValue = entityInformationProvider().getSamplePropertyValue(permId, "NAME")\n        if nameValue is not None:\n            row.setCell("name", nameValue)\n        \n        for annotation in sample.getAttributes():\n            if annotation != "permId":\n                if annotation == "identifier":\n                    row.setCell(annotation, sample, sample.getAttribute(annotation))\n                else:\n                    row.setCell(annotation, sample.getAttribute(annotation))\n            \n    # Add Create buttons\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        title = "Add " + sampleTypeCode;\n        addAction = uiDescription.addTableAction(title).setDescription(title)\n        widgets = getWidgetForAdd(sampleTypeCode, annotableType)\n        addAction.addInputWidgets(widgets)\n\n    # Add Delete button\n    deleteAction = uiDescription.addTableAction("Delete")\\\n                                .setDescription('Are you sure you want to delete selected annotation?')\n    deleteAction.setRowSelectionRequired() # Delete is enabled when at least 1 row is selected.\n    \ndef updateFromUI(action):\n    converter = propertyConverter()\n    elements = list(converter.convertToElements(property))\n    \n    if action.name.startswith("Add"):\n        sampleTypeCode = action.name[4:]\n        identifier = action.getInputValue("identifier")\n        annotations = { }\n        for propertyTypeCode in getPropertyTypesForSampleTypeFromAnnotableType(sampleTypeCode, annotableType):\n            propertyType = getPropertyType(propertyTypeCode)\n            propertyTypeValue = action.getInputValue(propertyType.label)\n            if not isValid(propertyType.dataType, propertyTypeValue):\n                raise ValidationException("Property " + str(propertyType.label) + " with invalid value " + str(propertyTypeValue))\n            if propertyTypeValue is None:\n                propertyTypeValue = ""\n            annotations[propertyTypeCode] = propertyTypeValue\n        newAnnotation = createAnnotationsFor(identifier, annotations, sampleTypeCode)\n        elements.append(newAnnotation)\n    \n    if action.name.startswith("Delete"):\n        rowIds = list(action.getSelectedRows())\n        rowIds.reverse()\n        for rowId in rowIds:\n            elements.pop(rowId) \n    \n    property.value = converter.convertToString(elements)\n\n##\n## Batch Import Methods\n##\ndef batchColumnNames():\n    allTypes = []\n    for sampleTypeCode in getAllAnnotableSampleTypesForType(annotableType):\n        allTypes.append(sampleTypeCode)\n    return allTypes\n\ndef updateFromBatchInput(bindings):\n    #print "--------> UPDATE FROM BATCH INPUT: "\n    elements = []\n                \n    for annotableSampleType in getAllAnnotableSampleTypesForType(annotableType):\n        annotatedSamples = bindings.get(annotableSampleType)\n        #print "-----> TYPE: " + str(annotableSampleType) + " BINDINGS: " + str(annotatedSamples)\n        if (annotatedSamples != None and annotatedSamples != ""):\n            #Annotations\n            for sampleLine in annotatedSamples.split("\\\\"):\n                propertyTypes = getPropertyTypesForSampleTypeFromAnnotableType(annotableSampleType, annotableType)\n                identifier = None\n                permId = None\n                sampleLink = None\n                for sampleProperty in sampleLine.split(";"):\n                    propertyName = sampleProperty.split(":")[0]\n                    propertyValue = sampleProperty.split(":")[1]\n                    if propertyName == "identifier":\n                        identifier = propertyValue\n                        permId = entityInformationProvider().getSamplePermId(propertyValue)\n                        sampleLink = elementFactory().createSampleLink(permId)\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                        sampleLink.addAttribute('sampleType', annotableSampleType)\n                    elif propertyName in propertyTypes:\n                        sampleLink.addAttribute(propertyName, propertyValue)\n                    else:\n                        raise NameError('Found invalid property: ' + propertyName + " on type " + annotableSampleType)\n                if identifier is not None:\n                   elements.append(sampleLink)\n    #Links\n    property.value = propertyConverter().convertToString(elements)	2020-09-30 09:02:17.985+02	3	SAMPLE	JYTHON	t
\.


--
-- Data for Name: semantic_annotations; Type: TABLE DATA; Schema: public; Owner: -
--

COPY semantic_annotations (id, perm_id, saty_id, stpt_id, prty_id, predicate_ontology_id, predicate_ontology_version, predicate_accession_id, descriptor_ontology_id, descriptor_ontology_version, descriptor_accession_id, creation_date) FROM stdin;
\.


--
-- Data for Name: spaces; Type: TABLE DATA; Schema: public; Owner: -
--

COPY spaces (id, code, description, registration_timestamp, pers_id_registerer, frozen, frozen_for_proj, frozen_for_samp) FROM stdin;
1	DEFAULT	\N	2020-09-30 09:00:55.015791+02	1	f	f	f
\.


--
-- Name: attachment_content_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('attachment_content_id_seq', 1, false);


--
-- Name: attachment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('attachment_id_seq', 1, false);


--
-- Name: authorization_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('authorization_group_id_seq', 1, false);


--
-- Name: code_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('code_seq', 1, false);


--
-- Name: content_copies_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('content_copies_id_seq', 1, false);


--
-- Name: controlled_vocabulary_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('controlled_vocabulary_id_seq', 32, true);


--
-- Name: core_plugin_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('core_plugin_id_seq', 4, true);


--
-- Name: cvte_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('cvte_id_seq', 267, true);


--
-- Name: data_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('data_id_seq', 1, false);


--
-- Name: data_set_copies_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('data_set_copies_history_id_seq', 1, false);


--
-- Name: data_set_property_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('data_set_property_id_seq', 1, false);


--
-- Name: data_set_relationship_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('data_set_relationship_id_seq', 1, false);


--
-- Name: data_set_relationships_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('data_set_relationships_history_id_seq', 1, false);


--
-- Name: data_set_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('data_set_type_id_seq', 37, true);


--
-- Name: data_store_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('data_store_id_seq', 1, true);


--
-- Name: data_store_services_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('data_store_services_id_seq', 12, true);


--
-- Name: data_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('data_type_id_seq', 12, true);


--
-- Name: database_instance_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('database_instance_id_seq', 1, false);


--
-- Name: deletion_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('deletion_id_seq', 1, false);


--
-- Name: dstpt_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('dstpt_id_seq', 72, true);


--
-- Name: entity_operations_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('entity_operations_log_id_seq', 1, false);


--
-- Name: etpt_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('etpt_id_seq', 3, true);


--
-- Name: event_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('event_id_seq', 1, false);


--
-- Name: experiment_code_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('experiment_code_seq', 1, false);


--
-- Name: experiment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('experiment_id_seq', 1, true);


--
-- Name: experiment_property_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('experiment_property_id_seq', 1, false);


--
-- Name: experiment_relationships_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('experiment_relationships_history_id_seq', 2, true);


--
-- Name: experiment_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('experiment_type_id_seq', 3, true);


--
-- Name: external_data_management_system_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('external_data_management_system_id_seq', 1, false);


--
-- Name: file_format_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('file_format_type_id_seq', 12, true);


--
-- Name: filter_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('filter_id_seq', 1, false);


--
-- Name: grid_custom_columns_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('grid_custom_columns_id_seq', 1, false);


--
-- Name: locator_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('locator_type_id_seq', 1, true);


--
-- Name: material_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('material_id_seq', 1, false);


--
-- Name: material_property_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('material_property_id_seq', 1, false);


--
-- Name: material_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('material_type_id_seq', 1, false);


--
-- Name: metaproject_assignment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('metaproject_assignment_id_seq', 1, false);


--
-- Name: metaproject_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('metaproject_id_seq', 1, false);


--
-- Name: mtpt_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('mtpt_id_seq', 1, false);


--
-- Name: operation_executions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('operation_executions_id_seq', 1, false);


--
-- Name: perm_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('perm_id_seq', 1, false);


--
-- Name: person_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('person_id_seq', 3, true);


--
-- Name: post_registration_dataset_queue_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('post_registration_dataset_queue_id_seq', 1, false);


--
-- Name: project_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('project_id_seq', 1, true);


--
-- Name: project_relationships_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('project_relationships_history_id_seq', 2, true);


--
-- Name: property_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('property_type_id_seq', 196, true);


--
-- Name: query_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('query_id_seq', 1, false);


--
-- Name: relationship_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('relationship_type_id_seq', 3, true);


--
-- Name: role_assignment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('role_assignment_id_seq', 3, true);


--
-- Name: sample_code_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('sample_code_seq', 1, false);


--
-- Name: sample_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('sample_id_seq', 1, true);


--
-- Name: sample_property_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('sample_property_id_seq', 1, false);


--
-- Name: sample_relationship_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('sample_relationship_id_seq', 1, false);


--
-- Name: sample_relationships_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('sample_relationships_history_id_seq', 1, true);


--
-- Name: sample_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('sample_type_id_seq', 47, true);


--
-- Name: script_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('script_id_seq', 28, true);


--
-- Name: semantic_annotation_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('semantic_annotation_id_seq', 1, false);


--
-- Name: space_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('space_id_seq', 1, true);


--
-- Name: stpt_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('stpt_id_seq', 204, true);


--
-- Name: authorization_groups ag_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY authorization_groups
    ADD CONSTRAINT ag_bk_uk UNIQUE (code);


--
-- Name: authorization_groups ag_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY authorization_groups
    ADD CONSTRAINT ag_pk PRIMARY KEY (id);


--
-- Name: authorization_group_persons agp_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY authorization_group_persons
    ADD CONSTRAINT agp_pk PRIMARY KEY (pers_id, ag_id);


--
-- Name: attachments atta_expe_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY attachments
    ADD CONSTRAINT atta_expe_bk_uk UNIQUE (expe_id, file_name, version);


--
-- Name: attachments atta_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY attachments
    ADD CONSTRAINT atta_pk PRIMARY KEY (id);


--
-- Name: attachments atta_proj_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY attachments
    ADD CONSTRAINT atta_proj_bk_uk UNIQUE (proj_id, file_name, version);


--
-- Name: attachments atta_samp_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY attachments
    ADD CONSTRAINT atta_samp_bk_uk UNIQUE (samp_id, file_name, version);


--
-- Name: content_copies coco_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY content_copies
    ADD CONSTRAINT coco_pk PRIMARY KEY (id);


--
-- Name: content_copies content_copies_unique_check_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY content_copies
    ADD CONSTRAINT content_copies_unique_check_uk UNIQUE (location_unique_check);


--
-- Name: core_plugins copl_name_ver_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY core_plugins
    ADD CONSTRAINT copl_name_ver_uk UNIQUE (name, version);


--
-- Name: controlled_vocabularies covo_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY controlled_vocabularies
    ADD CONSTRAINT covo_bk_uk UNIQUE (code, is_managed_internally);


--
-- Name: controlled_vocabularies covo_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY controlled_vocabularies
    ADD CONSTRAINT covo_pk PRIMARY KEY (id);


--
-- Name: controlled_vocabulary_terms cvte_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY controlled_vocabulary_terms
    ADD CONSTRAINT cvte_bk_uk UNIQUE (code, covo_id);


--
-- Name: controlled_vocabulary_terms cvte_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY controlled_vocabulary_terms
    ADD CONSTRAINT cvte_pk PRIMARY KEY (id);


--
-- Name: data_stores dast_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_stores
    ADD CONSTRAINT dast_bk_uk UNIQUE (code, uuid);


--
-- Name: data_stores dast_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_stores
    ADD CONSTRAINT dast_pk PRIMARY KEY (id);


--
-- Name: data_all data_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_all
    ADD CONSTRAINT data_bk_uk UNIQUE (code);


--
-- Name: data_all data_idfrz_ch_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_all
    ADD CONSTRAINT data_idfrz_ch_uk UNIQUE (id, frozen_for_children);


--
-- Name: data_all data_idfrz_comp_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_all
    ADD CONSTRAINT data_idfrz_comp_uk UNIQUE (id, frozen_for_comps);


--
-- Name: data_all data_idfrz_cont_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_all
    ADD CONSTRAINT data_idfrz_cont_uk UNIQUE (id, frozen_for_conts);


--
-- Name: data_all data_idfrz_p_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_all
    ADD CONSTRAINT data_idfrz_p_uk UNIQUE (id, frozen_for_parents);


--
-- Name: data_all data_idfrz_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_all
    ADD CONSTRAINT data_idfrz_uk UNIQUE (id, frozen);


--
-- Name: data_all data_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_all
    ADD CONSTRAINT data_pk PRIMARY KEY (id);


--
-- Name: data_set_relationships_history datarelh_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_relationships_history
    ADD CONSTRAINT datarelh_pk PRIMARY KEY (id);


--
-- Name: data_types daty_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_types
    ADD CONSTRAINT daty_bk_uk UNIQUE (code);


--
-- Name: data_types daty_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_types
    ADD CONSTRAINT daty_pk PRIMARY KEY (id);


--
-- Name: deletions del_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY deletions
    ADD CONSTRAINT del_pk PRIMARY KEY (id);


--
-- Name: data_set_copies_history dsch_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_copies_history
    ADD CONSTRAINT dsch_pk PRIMARY KEY (id);


--
-- Name: data_set_properties dspr_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_properties
    ADD CONSTRAINT dspr_bk_uk UNIQUE (ds_id, dstpt_id);


--
-- Name: data_set_properties dspr_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_properties
    ADD CONSTRAINT dspr_pk PRIMARY KEY (id);


--
-- Name: data_set_properties_history dsprh_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_properties_history
    ADD CONSTRAINT dsprh_pk PRIMARY KEY (id);


--
-- Name: data_set_relationships_all dsre_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_relationships_all
    ADD CONSTRAINT dsre_bk_uk UNIQUE (data_id_child, data_id_parent, relationship_id);


--
-- Name: data_store_service_data_set_types dssdst_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_store_service_data_set_types
    ADD CONSTRAINT dssdst_bk_uk UNIQUE (data_store_service_id, data_set_type_id);


--
-- Name: data_store_services dsse_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_store_services
    ADD CONSTRAINT dsse_bk_uk UNIQUE (key, data_store_id);


--
-- Name: data_store_services dsse_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_store_services
    ADD CONSTRAINT dsse_pk PRIMARY KEY (id);


--
-- Name: data_set_type_property_types dstpt_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_type_property_types
    ADD CONSTRAINT dstpt_bk_uk UNIQUE (dsty_id, prty_id);


--
-- Name: data_set_type_property_types dstpt_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_type_property_types
    ADD CONSTRAINT dstpt_pk PRIMARY KEY (id);


--
-- Name: data_set_types dsty_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_types
    ADD CONSTRAINT dsty_bk_uk UNIQUE (code);


--
-- Name: data_set_types dsty_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_types
    ADD CONSTRAINT dsty_pk PRIMARY KEY (id);


--
-- Name: external_data_management_systems edms_code_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY external_data_management_systems
    ADD CONSTRAINT edms_code_uk UNIQUE (code);


--
-- Name: external_data_management_systems edms_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY external_data_management_systems
    ADD CONSTRAINT edms_pk PRIMARY KEY (id);


--
-- Name: entity_operations_log eol_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY entity_operations_log
    ADD CONSTRAINT eol_pk PRIMARY KEY (id);


--
-- Name: entity_operations_log eol_reg_id_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY entity_operations_log
    ADD CONSTRAINT eol_reg_id_uk UNIQUE (registration_id);


--
-- Name: experiment_type_property_types etpt_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_type_property_types
    ADD CONSTRAINT etpt_bk_uk UNIQUE (exty_id, prty_id);


--
-- Name: experiment_type_property_types etpt_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_type_property_types
    ADD CONSTRAINT etpt_pk PRIMARY KEY (id);


--
-- Name: events evnt_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY events
    ADD CONSTRAINT evnt_pk PRIMARY KEY (id);


--
-- Name: attachment_contents exac_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY attachment_contents
    ADD CONSTRAINT exac_pk PRIMARY KEY (id);


--
-- Name: external_data exda_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY external_data
    ADD CONSTRAINT exda_bk_uk UNIQUE (location, loty_id);


--
-- Name: external_data exda_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY external_data
    ADD CONSTRAINT exda_pk PRIMARY KEY (id);


--
-- Name: experiments_all expe_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiments_all
    ADD CONSTRAINT expe_bk_uk UNIQUE (code, proj_id);


--
-- Name: experiments_all expe_idfrz_d_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiments_all
    ADD CONSTRAINT expe_idfrz_d_uk UNIQUE (id, frozen_for_data);


--
-- Name: experiments_all expe_idfrz_s_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiments_all
    ADD CONSTRAINT expe_idfrz_s_uk UNIQUE (id, frozen_for_samp);


--
-- Name: experiments_all expe_idfrz_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiments_all
    ADD CONSTRAINT expe_idfrz_uk UNIQUE (id, frozen);


--
-- Name: experiments_all expe_pi_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiments_all
    ADD CONSTRAINT expe_pi_uk UNIQUE (perm_id);


--
-- Name: experiments_all expe_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiments_all
    ADD CONSTRAINT expe_pk PRIMARY KEY (id);


--
-- Name: experiment_properties expr_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_properties
    ADD CONSTRAINT expr_bk_uk UNIQUE (expe_id, etpt_id);


--
-- Name: experiment_properties expr_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_properties
    ADD CONSTRAINT expr_pk PRIMARY KEY (id);


--
-- Name: experiment_properties_history exprh_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_properties_history
    ADD CONSTRAINT exprh_pk PRIMARY KEY (id);


--
-- Name: experiment_relationships_history exrelh_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_relationships_history
    ADD CONSTRAINT exrelh_pk PRIMARY KEY (id);


--
-- Name: experiment_types exty_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_types
    ADD CONSTRAINT exty_bk_uk UNIQUE (code);


--
-- Name: experiment_types exty_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_types
    ADD CONSTRAINT exty_pk PRIMARY KEY (id);


--
-- Name: file_format_types ffty_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY file_format_types
    ADD CONSTRAINT ffty_bk_uk UNIQUE (code);


--
-- Name: file_format_types ffty_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY file_format_types
    ADD CONSTRAINT ffty_pk PRIMARY KEY (id);


--
-- Name: filters filt_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY filters
    ADD CONSTRAINT filt_bk_uk UNIQUE (name, grid_id);


--
-- Name: filters filt_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY filters
    ADD CONSTRAINT filt_pk PRIMARY KEY (id);


--
-- Name: grid_custom_columns grid_custom_columns_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY grid_custom_columns
    ADD CONSTRAINT grid_custom_columns_bk_uk UNIQUE (code, grid_id);


--
-- Name: grid_custom_columns grid_custom_columns_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY grid_custom_columns
    ADD CONSTRAINT grid_custom_columns_pk PRIMARY KEY (id);


--
-- Name: link_data link_data_idfrz_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY link_data
    ADD CONSTRAINT link_data_idfrz_uk UNIQUE (id, data_frozen);


--
-- Name: link_data lnda_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY link_data
    ADD CONSTRAINT lnda_pk PRIMARY KEY (id);


--
-- Name: locator_types loty_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY locator_types
    ADD CONSTRAINT loty_bk_uk UNIQUE (code);


--
-- Name: locator_types loty_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY locator_types
    ADD CONSTRAINT loty_pk PRIMARY KEY (id);


--
-- Name: material_properties mapr_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_properties
    ADD CONSTRAINT mapr_bk_uk UNIQUE (mate_id, mtpt_id);


--
-- Name: material_properties mapr_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_properties
    ADD CONSTRAINT mapr_pk PRIMARY KEY (id);


--
-- Name: material_properties_history maprh_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_properties_history
    ADD CONSTRAINT maprh_pk PRIMARY KEY (id);


--
-- Name: materials mate_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY materials
    ADD CONSTRAINT mate_bk_uk UNIQUE (code, maty_id);


--
-- Name: materials mate_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY materials
    ADD CONSTRAINT mate_pk PRIMARY KEY (id);


--
-- Name: material_types maty_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_types
    ADD CONSTRAINT maty_bk_uk UNIQUE (code);


--
-- Name: material_types maty_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_types
    ADD CONSTRAINT maty_pk PRIMARY KEY (id);


--
-- Name: metaproject_assignments_all metaproject_assignments_all_mepr_id_data_id_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY metaproject_assignments_all
    ADD CONSTRAINT metaproject_assignments_all_mepr_id_data_id_uk UNIQUE (mepr_id, data_id);


--
-- Name: metaproject_assignments_all metaproject_assignments_all_mepr_id_expe_id_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY metaproject_assignments_all
    ADD CONSTRAINT metaproject_assignments_all_mepr_id_expe_id_uk UNIQUE (mepr_id, expe_id);


--
-- Name: metaproject_assignments_all metaproject_assignments_all_mepr_id_mate_id_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY metaproject_assignments_all
    ADD CONSTRAINT metaproject_assignments_all_mepr_id_mate_id_uk UNIQUE (mepr_id, mate_id);


--
-- Name: metaproject_assignments_all metaproject_assignments_all_mepr_id_samp_id_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY metaproject_assignments_all
    ADD CONSTRAINT metaproject_assignments_all_mepr_id_samp_id_uk UNIQUE (mepr_id, samp_id);


--
-- Name: metaproject_assignments_all metaproject_assignments_all_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY metaproject_assignments_all
    ADD CONSTRAINT metaproject_assignments_all_pk PRIMARY KEY (id);


--
-- Name: metaprojects metaprojects_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY metaprojects
    ADD CONSTRAINT metaprojects_pk PRIMARY KEY (id);


--
-- Name: material_type_property_types mtpt_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_type_property_types
    ADD CONSTRAINT mtpt_bk_uk UNIQUE (maty_id, prty_id);


--
-- Name: material_type_property_types mtpt_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_type_property_types
    ADD CONSTRAINT mtpt_pk PRIMARY KEY (id);


--
-- Name: operation_executions operation_executions_code_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY operation_executions
    ADD CONSTRAINT operation_executions_code_uk UNIQUE (code);


--
-- Name: operation_executions operation_executions_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY operation_executions
    ADD CONSTRAINT operation_executions_pk PRIMARY KEY (id);


--
-- Name: persons pers_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY persons
    ADD CONSTRAINT pers_bk_uk UNIQUE (user_id);


--
-- Name: persons pers_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY persons
    ADD CONSTRAINT pers_pk PRIMARY KEY (id);


--
-- Name: post_registration_dataset_queue prdq_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY post_registration_dataset_queue
    ADD CONSTRAINT prdq_pk PRIMARY KEY (id);


--
-- Name: projects proj_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT proj_bk_uk UNIQUE (code, space_id);


--
-- Name: projects proj_idfrz_e_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT proj_idfrz_e_uk UNIQUE (id, frozen_for_exp);


--
-- Name: projects proj_idfrz_s_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT proj_idfrz_s_uk UNIQUE (id, frozen_for_samp);


--
-- Name: projects proj_idfrz_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT proj_idfrz_uk UNIQUE (id, frozen);


--
-- Name: projects proj_pi_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT proj_pi_uk UNIQUE (perm_id);


--
-- Name: projects proj_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT proj_pk PRIMARY KEY (id);


--
-- Name: project_relationships_history prrelh_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_relationships_history
    ADD CONSTRAINT prrelh_pk PRIMARY KEY (id);


--
-- Name: property_types prty_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY property_types
    ADD CONSTRAINT prty_bk_uk UNIQUE (code, is_managed_internally);


--
-- Name: property_types prty_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY property_types
    ADD CONSTRAINT prty_pk PRIMARY KEY (id);


--
-- Name: queries quer_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY queries
    ADD CONSTRAINT quer_bk_uk UNIQUE (name);


--
-- Name: queries quer_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY queries
    ADD CONSTRAINT quer_pk PRIMARY KEY (id);


--
-- Name: relationship_types rety_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY relationship_types
    ADD CONSTRAINT rety_pk PRIMARY KEY (id);


--
-- Name: relationship_types rety_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY relationship_types
    ADD CONSTRAINT rety_uk UNIQUE (code);


--
-- Name: role_assignments roas_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY role_assignments
    ADD CONSTRAINT roas_pk PRIMARY KEY (id);


--
-- Name: samples_all samp_code_unique_check_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_code_unique_check_uk UNIQUE (code_unique_check);


--
-- Name: samples_all samp_identifier_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_identifier_uk UNIQUE (sample_identifier);


--
-- Name: samples_all samp_idfrz_c_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_idfrz_c_uk UNIQUE (id, frozen_for_comp);


--
-- Name: samples_all samp_idfrz_ch_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_idfrz_ch_uk UNIQUE (id, frozen_for_children);


--
-- Name: samples_all samp_idfrz_d_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_idfrz_d_uk UNIQUE (id, frozen_for_data);


--
-- Name: samples_all samp_idfrz_p_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_idfrz_p_uk UNIQUE (id, frozen_for_parents);


--
-- Name: samples_all samp_idfrz_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_idfrz_uk UNIQUE (id, frozen);


--
-- Name: samples_all samp_pi_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_pi_uk UNIQUE (perm_id);


--
-- Name: samples_all samp_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_pk PRIMARY KEY (id);


--
-- Name: samples_all samp_subcode_unique_check_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_subcode_unique_check_uk UNIQUE (subcode_unique_check);


--
-- Name: sample_relationships_history samprelh_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_relationships_history
    ADD CONSTRAINT samprelh_pk PRIMARY KEY (id);


--
-- Name: sample_properties sapr_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_properties
    ADD CONSTRAINT sapr_bk_uk UNIQUE (samp_id, stpt_id);


--
-- Name: sample_properties sapr_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_properties
    ADD CONSTRAINT sapr_pk PRIMARY KEY (id);


--
-- Name: sample_properties_history saprh_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_properties_history
    ADD CONSTRAINT saprh_pk PRIMARY KEY (id);


--
-- Name: sample_relationships_all sare_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_relationships_all
    ADD CONSTRAINT sare_bk_uk UNIQUE (sample_id_child, sample_id_parent, relationship_id);


--
-- Name: sample_relationships_all sare_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_relationships_all
    ADD CONSTRAINT sare_pk PRIMARY KEY (id);


--
-- Name: sample_types saty_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_types
    ADD CONSTRAINT saty_bk_uk UNIQUE (code);


--
-- Name: sample_types saty_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_types
    ADD CONSTRAINT saty_pk PRIMARY KEY (id);


--
-- Name: scripts scri_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY scripts
    ADD CONSTRAINT scri_pk PRIMARY KEY (id);


--
-- Name: scripts scri_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY scripts
    ADD CONSTRAINT scri_uk UNIQUE (name);


--
-- Name: semantic_annotations semantic_annotations_perm_id_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY semantic_annotations
    ADD CONSTRAINT semantic_annotations_perm_id_uk UNIQUE (perm_id);


--
-- Name: semantic_annotations semantic_annotations_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY semantic_annotations
    ADD CONSTRAINT semantic_annotations_pk PRIMARY KEY (id);


--
-- Name: spaces space_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY spaces
    ADD CONSTRAINT space_bk_uk UNIQUE (code);


--
-- Name: spaces space_idfrz_p_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY spaces
    ADD CONSTRAINT space_idfrz_p_uk UNIQUE (id, frozen_for_proj);


--
-- Name: spaces space_idfrz_s_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY spaces
    ADD CONSTRAINT space_idfrz_s_uk UNIQUE (id, frozen_for_samp);


--
-- Name: spaces space_idfrz_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY spaces
    ADD CONSTRAINT space_idfrz_uk UNIQUE (id, frozen);


--
-- Name: spaces space_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY spaces
    ADD CONSTRAINT space_pk PRIMARY KEY (id);


--
-- Name: sample_type_property_types stpt_bk_uk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_type_property_types
    ADD CONSTRAINT stpt_bk_uk UNIQUE (saty_id, prty_id);


--
-- Name: sample_type_property_types stpt_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_type_property_types
    ADD CONSTRAINT stpt_pk PRIMARY KEY (id);


--
-- Name: atta_exac_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX atta_exac_fk_i ON attachments USING btree (exac_id);


--
-- Name: atta_expe_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX atta_expe_fk_i ON attachments USING btree (expe_id);


--
-- Name: atta_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX atta_pers_fk_i ON attachments USING btree (pers_id_registerer);


--
-- Name: atta_proj_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX atta_proj_fk_i ON attachments USING btree (proj_id);


--
-- Name: atta_samp_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX atta_samp_fk_i ON attachments USING btree (samp_id);


--
-- Name: covo_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX covo_pers_fk_i ON controlled_vocabularies USING btree (pers_id_registerer);


--
-- Name: cvte_covo_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX cvte_covo_fk_i ON controlled_vocabulary_terms USING btree (covo_id);


--
-- Name: cvte_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX cvte_pers_fk_i ON controlled_vocabulary_terms USING btree (pers_id_registerer);


--
-- Name: data_acct_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX data_acct_i ON data_all USING btree (access_timestamp);


--
-- Name: data_del_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX data_del_fk_i ON data_all USING btree (del_id);


--
-- Name: data_dsty_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX data_dsty_fk_i ON data_all USING btree (dsty_id);


--
-- Name: data_expe_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX data_expe_fk_i ON data_all USING btree (expe_id);


--
-- Name: data_idfrz_ch_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX data_idfrz_ch_pk_i ON data_all USING btree (id, frozen_for_children);


--
-- Name: data_idfrz_comp_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX data_idfrz_comp_pk_i ON data_all USING btree (id, frozen_for_comps);


--
-- Name: data_idfrz_cont_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX data_idfrz_cont_pk_i ON data_all USING btree (id, frozen_for_conts);


--
-- Name: data_idfrz_p_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX data_idfrz_p_pk_i ON data_all USING btree (id, frozen_for_parents);


--
-- Name: data_idfrz_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX data_idfrz_pk_i ON data_all USING btree (id, frozen);


--
-- Name: data_samp_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX data_samp_fk_i ON data_all USING btree (samp_id);


--
-- Name: data_set_properties_search_index; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX data_set_properties_search_index ON data_set_properties USING gin (tsvector_document);


--
-- Name: datarelh_data_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX datarelh_data_fk_i ON data_set_relationships_history USING btree (data_id);


--
-- Name: datarelh_main_data_fk_data_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX datarelh_main_data_fk_data_fk_i ON data_set_relationships_history USING btree (main_data_id, data_id);


--
-- Name: datarelh_main_data_fk_expe_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX datarelh_main_data_fk_expe_fk_i ON data_set_relationships_history USING btree (main_data_id, expe_id);


--
-- Name: datarelh_main_data_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX datarelh_main_data_fk_i ON data_set_relationships_history USING btree (main_data_id);


--
-- Name: datarelh_main_data_fk_samp_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX datarelh_main_data_fk_samp_fk_i ON data_set_relationships_history USING btree (main_data_id, samp_id);


--
-- Name: del_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX del_pers_fk_i ON deletions USING btree (pers_id_registerer);


--
-- Name: dspr_cvte_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dspr_cvte_fk_i ON data_set_properties USING btree (cvte_id);


--
-- Name: dspr_ds_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dspr_ds_fk_i ON data_set_properties USING btree (ds_id);


--
-- Name: dspr_dstpt_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dspr_dstpt_fk_i ON data_set_properties USING btree (dstpt_id);


--
-- Name: dspr_mapr_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dspr_mapr_fk_i ON data_set_properties USING btree (mate_prop_id);


--
-- Name: dspr_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dspr_pers_fk_i ON data_set_properties USING btree (pers_id_registerer);


--
-- Name: dspr_sapr_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dspr_sapr_fk_i ON data_set_properties USING btree (samp_prop_id);


--
-- Name: dsprh_etpt_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dsprh_etpt_fk_i ON data_set_properties_history USING btree (dstpt_id);


--
-- Name: dsprh_expe_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dsprh_expe_fk_i ON data_set_properties_history USING btree (ds_id);


--
-- Name: dsprh_vuts_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dsprh_vuts_fk_i ON data_set_properties_history USING btree (valid_until_timestamp);


--
-- Name: dsre_data_fk_i_child; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dsre_data_fk_i_child ON data_set_relationships_all USING btree (data_id_child);


--
-- Name: dsre_data_fk_i_parent; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dsre_data_fk_i_parent ON data_set_relationships_all USING btree (data_id_parent);


--
-- Name: dsre_del_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dsre_del_fk_i ON data_set_relationships_all USING btree (del_id);


--
-- Name: dssdst_ds_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dssdst_ds_fk_i ON data_store_service_data_set_types USING btree (data_store_service_id);


--
-- Name: dssdst_dst_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dssdst_dst_fk_i ON data_store_service_data_set_types USING btree (data_set_type_id);


--
-- Name: dsse_ds_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dsse_ds_fk_i ON data_store_services USING btree (data_store_id);


--
-- Name: dstpt_dsty_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dstpt_dsty_fk_i ON data_set_type_property_types USING btree (dsty_id);


--
-- Name: dstpt_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dstpt_pers_fk_i ON data_set_type_property_types USING btree (pers_id_registerer);


--
-- Name: dstpt_prty_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX dstpt_prty_fk_i ON data_set_type_property_types USING btree (prty_id);


--
-- Name: entity_operations_log_rid_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX entity_operations_log_rid_i ON entity_operations_log USING btree (registration_id);


--
-- Name: etpt_exty_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX etpt_exty_fk_i ON experiment_type_property_types USING btree (exty_id);


--
-- Name: etpt_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX etpt_pers_fk_i ON experiment_type_property_types USING btree (pers_id_registerer);


--
-- Name: etpt_prty_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX etpt_prty_fk_i ON experiment_type_property_types USING btree (prty_id);


--
-- Name: evnt_exac_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX evnt_exac_fk_i ON events USING btree (exac_id);


--
-- Name: evnt_fr_id_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX evnt_fr_id_fk_i ON events USING btree (event_type, identifiers) WHERE ((event_type)::text = 'FREEZING'::text);


--
-- Name: evnt_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX evnt_pers_fk_i ON events USING btree (pers_id_registerer);


--
-- Name: exda_cvte_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX exda_cvte_fk_i ON external_data USING btree (cvte_id_stor_fmt);


--
-- Name: exda_cvte_stored_on_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX exda_cvte_stored_on_fk_i ON external_data USING btree (cvte_id_store);


--
-- Name: exda_ffty_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX exda_ffty_fk_i ON external_data USING btree (ffty_id);


--
-- Name: exda_loty_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX exda_loty_fk_i ON external_data USING btree (loty_id);


--
-- Name: expe_del_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX expe_del_fk_i ON experiments_all USING btree (del_id);


--
-- Name: expe_exty_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX expe_exty_fk_i ON experiments_all USING btree (exty_id);


--
-- Name: expe_idfrz_d_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX expe_idfrz_d_pk_i ON experiments_all USING btree (id, frozen_for_data);


--
-- Name: expe_idfrz_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX expe_idfrz_pk_i ON experiments_all USING btree (id, frozen);


--
-- Name: expe_idfrz_s_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX expe_idfrz_s_pk_i ON experiments_all USING btree (id, frozen_for_samp);


--
-- Name: expe_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX expe_pers_fk_i ON experiments_all USING btree (pers_id_registerer);


--
-- Name: expe_proj_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX expe_proj_fk_i ON experiments_all USING btree (proj_id);


--
-- Name: experiment_properties_search_index; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX experiment_properties_search_index ON experiment_properties USING gin (tsvector_document);


--
-- Name: expr_cvte_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX expr_cvte_fk_i ON experiment_properties USING btree (cvte_id);


--
-- Name: expr_etpt_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX expr_etpt_fk_i ON experiment_properties USING btree (etpt_id);


--
-- Name: expr_expe_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX expr_expe_fk_i ON experiment_properties USING btree (expe_id);


--
-- Name: expr_mapr_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX expr_mapr_fk_i ON experiment_properties USING btree (mate_prop_id);


--
-- Name: expr_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX expr_pers_fk_i ON experiment_properties USING btree (pers_id_registerer);


--
-- Name: expr_sapr_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX expr_sapr_fk_i ON experiment_properties USING btree (samp_prop_id);


--
-- Name: exprh_etpt_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX exprh_etpt_fk_i ON experiment_properties_history USING btree (etpt_id);


--
-- Name: exprh_expe_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX exprh_expe_fk_i ON experiment_properties_history USING btree (expe_id);


--
-- Name: exprh_vuts_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX exprh_vuts_fk_i ON experiment_properties_history USING btree (valid_until_timestamp);


--
-- Name: exrelh_data_id_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX exrelh_data_id_fk_i ON experiment_relationships_history USING btree (data_id);


--
-- Name: exrelh_main_expe_fk_data_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX exrelh_main_expe_fk_data_fk_i ON experiment_relationships_history USING btree (main_expe_id, data_id);


--
-- Name: exrelh_main_expe_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX exrelh_main_expe_fk_i ON experiment_relationships_history USING btree (main_expe_id);


--
-- Name: exrelh_main_expe_fk_proj_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX exrelh_main_expe_fk_proj_fk_i ON experiment_relationships_history USING btree (main_expe_id, proj_id);


--
-- Name: exrelh_main_expe_fk_samp_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX exrelh_main_expe_fk_samp_fk_i ON experiment_relationships_history USING btree (main_expe_id, samp_id);


--
-- Name: exrelh_samp_id_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX exrelh_samp_id_fk_i ON experiment_relationships_history USING btree (samp_id);


--
-- Name: filt_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX filt_pers_fk_i ON filters USING btree (pers_id_registerer);


--
-- Name: grid_custom_columns_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX grid_custom_columns_pers_fk_i ON grid_custom_columns USING btree (pers_id_registerer);


--
-- Name: link_data_idfrz_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX link_data_idfrz_pk_i ON link_data USING btree (id, data_frozen);


--
-- Name: mapr_cvte_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX mapr_cvte_fk_i ON material_properties USING btree (cvte_id);


--
-- Name: mapr_mapr_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX mapr_mapr_fk_i ON material_properties USING btree (mate_prop_id);


--
-- Name: mapr_mate_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX mapr_mate_fk_i ON material_properties USING btree (mate_id);


--
-- Name: mapr_mtpt_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX mapr_mtpt_fk_i ON material_properties USING btree (mtpt_id);


--
-- Name: mapr_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX mapr_pers_fk_i ON material_properties USING btree (pers_id_registerer);


--
-- Name: maprh_etpt_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX maprh_etpt_fk_i ON material_properties_history USING btree (mtpt_id);


--
-- Name: maprh_expe_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX maprh_expe_fk_i ON material_properties_history USING btree (mate_id);


--
-- Name: maprh_vuts_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX maprh_vuts_fk_i ON material_properties_history USING btree (valid_until_timestamp);


--
-- Name: mate_maty_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX mate_maty_fk_i ON materials USING btree (maty_id);


--
-- Name: mate_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX mate_pers_fk_i ON materials USING btree (pers_id_registerer);


--
-- Name: material_properties_search_index; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX material_properties_search_index ON material_properties USING gin (tsvector_document);


--
-- Name: metaproject_assignments_all_data_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX metaproject_assignments_all_data_fk_i ON metaproject_assignments_all USING btree (data_id);


--
-- Name: metaproject_assignments_all_del_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX metaproject_assignments_all_del_fk_i ON metaproject_assignments_all USING btree (del_id);


--
-- Name: metaproject_assignments_all_expe_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX metaproject_assignments_all_expe_fk_i ON metaproject_assignments_all USING btree (expe_id);


--
-- Name: metaproject_assignments_all_mate_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX metaproject_assignments_all_mate_fk_i ON metaproject_assignments_all USING btree (mate_id);


--
-- Name: metaproject_assignments_all_mepr_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX metaproject_assignments_all_mepr_fk_i ON metaproject_assignments_all USING btree (mepr_id);


--
-- Name: metaproject_assignments_all_samp_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX metaproject_assignments_all_samp_fk_i ON metaproject_assignments_all USING btree (samp_id);


--
-- Name: metaprojects_name_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX metaprojects_name_i ON metaprojects USING btree (name);


--
-- Name: metaprojects_name_owner_uk; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX metaprojects_name_owner_uk ON metaprojects USING btree (lower((name)::text), owner);


--
-- Name: metaprojects_owner_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX metaprojects_owner_fk_i ON metaprojects USING btree (owner);


--
-- Name: mtpt_maty_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX mtpt_maty_fk_i ON material_type_property_types USING btree (maty_id);


--
-- Name: mtpt_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX mtpt_pers_fk_i ON material_type_property_types USING btree (pers_id_registerer);


--
-- Name: mtpt_prty_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX mtpt_prty_fk_i ON material_type_property_types USING btree (prty_id);


--
-- Name: operation_executions_availability_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX operation_executions_availability_i ON operation_executions USING btree (availability);


--
-- Name: operation_executions_code_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX operation_executions_code_i ON operation_executions USING btree (code);


--
-- Name: operation_executions_details_availability_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX operation_executions_details_availability_i ON operation_executions USING btree (details_availability);


--
-- Name: operation_executions_owner_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX operation_executions_owner_i ON operation_executions USING btree (owner);


--
-- Name: operation_executions_summary_availability_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX operation_executions_summary_availability_i ON operation_executions USING btree (summary_availability);


--
-- Name: pers_is_active_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX pers_is_active_i ON persons USING btree (is_active);


--
-- Name: pers_space_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX pers_space_fk_i ON persons USING btree (space_id);


--
-- Name: proj_idfrz_e_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX proj_idfrz_e_pk_i ON projects USING btree (id, frozen_for_exp);


--
-- Name: proj_idfrz_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX proj_idfrz_pk_i ON projects USING btree (id, frozen);


--
-- Name: proj_idfrz_s_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX proj_idfrz_s_pk_i ON projects USING btree (id, frozen_for_samp);


--
-- Name: proj_pers_fk_i_leader; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX proj_pers_fk_i_leader ON projects USING btree (pers_id_leader);


--
-- Name: proj_pers_fk_i_registerer; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX proj_pers_fk_i_registerer ON projects USING btree (pers_id_registerer);


--
-- Name: proj_space_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX proj_space_fk_i ON projects USING btree (space_id);


--
-- Name: prrelh_main_proj_fk_expe_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX prrelh_main_proj_fk_expe_fk_i ON project_relationships_history USING btree (main_proj_id, expe_id);


--
-- Name: prrelh_main_proj_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX prrelh_main_proj_fk_i ON project_relationships_history USING btree (main_proj_id);


--
-- Name: prrelh_main_proj_fk_space_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX prrelh_main_proj_fk_space_fk_i ON project_relationships_history USING btree (main_proj_id, space_id);


--
-- Name: prty_covo_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX prty_covo_fk_i ON property_types USING btree (covo_id);


--
-- Name: prty_daty_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX prty_daty_fk_i ON property_types USING btree (daty_id);


--
-- Name: prty_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX prty_pers_fk_i ON property_types USING btree (pers_id_registerer);


--
-- Name: roas_ag_fk_i_grantee; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX roas_ag_fk_i_grantee ON role_assignments USING btree (ag_id_grantee);


--
-- Name: roas_ag_space_project_bk_uk; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX roas_ag_space_project_bk_uk ON role_assignments USING btree (ag_id_grantee, role_code, COALESCE((space_id)::bigint, ('-1'::integer)::bigint), COALESCE((project_id)::bigint, ('-1'::integer)::bigint));


--
-- Name: roas_pe_space_project_bk_uk; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX roas_pe_space_project_bk_uk ON role_assignments USING btree (pers_id_grantee, role_code, COALESCE((space_id)::bigint, ('-1'::integer)::bigint), COALESCE((project_id)::bigint, ('-1'::integer)::bigint));


--
-- Name: roas_pers_fk_i_grantee; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX roas_pers_fk_i_grantee ON role_assignments USING btree (pers_id_grantee);


--
-- Name: roas_pers_fk_i_registerer; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX roas_pers_fk_i_registerer ON role_assignments USING btree (pers_id_registerer);


--
-- Name: roas_project_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX roas_project_fk_i ON role_assignments USING btree (project_id);


--
-- Name: roas_space_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX roas_space_fk_i ON role_assignments USING btree (space_id);


--
-- Name: samp_code_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samp_code_i ON samples_all USING btree (code);


--
-- Name: samp_del_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samp_del_fk_i ON samples_all USING btree (del_id);


--
-- Name: samp_expe_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samp_expe_fk_i ON samples_all USING btree (expe_id);


--
-- Name: samp_identifier_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samp_identifier_i ON samples_all USING btree (sample_identifier);


--
-- Name: samp_idfrz_c_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samp_idfrz_c_pk_i ON samples_all USING btree (id, frozen_for_comp);


--
-- Name: samp_idfrz_ch_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samp_idfrz_ch_pk_i ON samples_all USING btree (id, frozen_for_children);


--
-- Name: samp_idfrz_d_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samp_idfrz_d_pk_i ON samples_all USING btree (id, frozen_for_data);


--
-- Name: samp_idfrz_p_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samp_idfrz_p_pk_i ON samples_all USING btree (id, frozen_for_parents);


--
-- Name: samp_idfrz_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samp_idfrz_pk_i ON samples_all USING btree (id, frozen);


--
-- Name: samp_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samp_pers_fk_i ON samples_all USING btree (pers_id_registerer);


--
-- Name: samp_proj_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samp_proj_fk_i ON samples_all USING btree (proj_id);


--
-- Name: samp_samp_fk_i_part_of; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samp_samp_fk_i_part_of ON samples_all USING btree (samp_id_part_of);


--
-- Name: samp_saty_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samp_saty_fk_i ON samples_all USING btree (saty_id);


--
-- Name: sample_properties_search_index; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX sample_properties_search_index ON sample_properties USING gin (tsvector_document);


--
-- Name: samprelh_data_id_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samprelh_data_id_fk_i ON sample_relationships_history USING btree (data_id);


--
-- Name: samprelh_main_samp_fk_data_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samprelh_main_samp_fk_data_fk_i ON sample_relationships_history USING btree (main_samp_id, data_id);


--
-- Name: samprelh_main_samp_fk_expe_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samprelh_main_samp_fk_expe_fk_i ON sample_relationships_history USING btree (main_samp_id, expe_id);


--
-- Name: samprelh_main_samp_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samprelh_main_samp_fk_i ON sample_relationships_history USING btree (main_samp_id);


--
-- Name: samprelh_main_samp_fk_proj_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samprelh_main_samp_fk_proj_fk_i ON sample_relationships_history USING btree (main_samp_id, proj_id);


--
-- Name: samprelh_main_samp_fk_samp_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samprelh_main_samp_fk_samp_fk_i ON sample_relationships_history USING btree (main_samp_id, samp_id);


--
-- Name: samprelh_main_samp_fk_space_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samprelh_main_samp_fk_space_fk_i ON sample_relationships_history USING btree (main_samp_id, space_id);


--
-- Name: samprelh_samp_id_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX samprelh_samp_id_fk_i ON sample_relationships_history USING btree (samp_id);


--
-- Name: sapr_cvte_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX sapr_cvte_fk_i ON sample_properties USING btree (cvte_id);


--
-- Name: sapr_mapr_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX sapr_mapr_fk_i ON sample_properties USING btree (mate_prop_id);


--
-- Name: sapr_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX sapr_pers_fk_i ON sample_properties USING btree (pers_id_registerer);


--
-- Name: sapr_samp_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX sapr_samp_fk_i ON sample_properties USING btree (samp_id);


--
-- Name: sapr_sapr_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX sapr_sapr_fk_i ON sample_properties USING btree (samp_prop_id);


--
-- Name: sapr_stpt_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX sapr_stpt_fk_i ON sample_properties USING btree (stpt_id);


--
-- Name: saprh_etpt_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX saprh_etpt_fk_i ON sample_properties_history USING btree (stpt_id);


--
-- Name: saprh_expe_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX saprh_expe_fk_i ON sample_properties_history USING btree (samp_id);


--
-- Name: saprh_vuts_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX saprh_vuts_fk_i ON sample_properties_history USING btree (valid_until_timestamp);


--
-- Name: sare_data_fk_i_child; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX sare_data_fk_i_child ON sample_relationships_all USING btree (sample_id_child);


--
-- Name: sare_data_fk_i_parent; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX sare_data_fk_i_parent ON sample_relationships_all USING btree (sample_id_parent);


--
-- Name: sare_data_fk_i_relationship; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX sare_data_fk_i_relationship ON sample_relationships_all USING btree (relationship_id);


--
-- Name: sare_del_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX sare_del_fk_i ON sample_relationships_all USING btree (del_id);


--
-- Name: script_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX script_pers_fk_i ON scripts USING btree (pers_id_registerer);


--
-- Name: semantic_annotations_prty_id_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX semantic_annotations_prty_id_i ON semantic_annotations USING btree (prty_id);


--
-- Name: semantic_annotations_saty_id_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX semantic_annotations_saty_id_i ON semantic_annotations USING btree (saty_id);


--
-- Name: semantic_annotations_stpt_id_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX semantic_annotations_stpt_id_i ON semantic_annotations USING btree (stpt_id);


--
-- Name: space_idfrz_p_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX space_idfrz_p_pk_i ON spaces USING btree (id, frozen_for_proj);


--
-- Name: space_idfrz_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX space_idfrz_pk_i ON spaces USING btree (id, frozen);


--
-- Name: space_idfrz_s_pk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX space_idfrz_s_pk_i ON spaces USING btree (id, frozen_for_samp);


--
-- Name: space_pers_registered_by_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX space_pers_registered_by_fk_i ON spaces USING btree (pers_id_registerer);


--
-- Name: stpt_pers_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX stpt_pers_fk_i ON sample_type_property_types USING btree (pers_id_registerer);


--
-- Name: stpt_prty_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX stpt_prty_fk_i ON sample_type_property_types USING btree (prty_id);


--
-- Name: stpt_saty_fk_i; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX stpt_saty_fk_i ON sample_type_property_types USING btree (saty_id);


--
-- Name: content_copies content_copies_history_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE content_copies_history_delete AS
    ON DELETE TO content_copies DO  UPDATE data_set_copies_history SET valid_until_timestamp = CURRENT_TIMESTAMP
  WHERE ((data_set_copies_history.cc_id)::bigint = (old.id)::bigint);


--
-- Name: content_copies content_copies_history_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE content_copies_history_insert AS
    ON INSERT TO content_copies DO  INSERT INTO data_set_copies_history (id, cc_id, data_id, external_code, path, git_commit_hash, git_repository_id, edms_id, edms_code, edms_label, edms_address, pers_id_author, valid_from_timestamp)
  VALUES (nextval('data_set_copies_history_id_seq'::regclass), new.id, new.data_id, new.external_code, new.path, new.git_commit_hash, new.git_repository_id, new.edms_id, ( SELECT external_data_management_systems.code
           FROM external_data_management_systems
          WHERE ((external_data_management_systems.id)::bigint = (new.edms_id)::bigint)), ( SELECT external_data_management_systems.label
           FROM external_data_management_systems
          WHERE ((external_data_management_systems.id)::bigint = (new.edms_id)::bigint)), ( SELECT external_data_management_systems.address
           FROM external_data_management_systems
          WHERE ((external_data_management_systems.id)::bigint = (new.edms_id)::bigint)), new.pers_id_registerer, new.registration_timestamp);


--
-- Name: data data_all; Type: RULE; Schema: public; Owner: -
--

CREATE RULE data_all AS
    ON DELETE TO data DO INSTEAD  DELETE FROM data_all
  WHERE ((data_all.id)::bigint = (old.id)::bigint);


--
-- Name: data_deleted data_deleted_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE data_deleted_delete AS
    ON DELETE TO data_deleted DO INSTEAD  DELETE FROM data_all
  WHERE ((data_all.id)::bigint = (old.id)::bigint);


--
-- Name: data_deleted data_deleted_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE data_deleted_update AS
    ON UPDATE TO data_deleted DO INSTEAD  UPDATE data_all SET del_id = new.del_id, orig_del = new.orig_del, modification_timestamp = new.modification_timestamp, version = new.version
  WHERE ((data_all.id)::bigint = (new.id)::bigint);


--
-- Name: data data_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE data_insert AS
    ON INSERT TO data DO INSTEAD  INSERT INTO data_all (id, frozen, frozen_for_children, frozen_for_parents, frozen_for_comps, frozen_for_conts, code, del_id, orig_del, expe_id, expe_frozen, dast_id, data_producer_code, dsty_id, is_derived, is_valid, modification_timestamp, access_timestamp, pers_id_registerer, pers_id_modifier, production_timestamp, registration_timestamp, samp_id, samp_frozen, version, data_set_kind)
  VALUES (new.id, new.frozen, new.frozen_for_children, new.frozen_for_parents, new.frozen_for_comps, new.frozen_for_conts, new.code, new.del_id, new.orig_del, new.expe_id, new.expe_frozen, new.dast_id, new.data_producer_code, new.dsty_id, new.is_derived, new.is_valid, new.modification_timestamp, new.access_timestamp, new.pers_id_registerer, new.pers_id_modifier, new.production_timestamp, new.registration_timestamp, new.samp_id, new.samp_frozen, new.version, new.data_set_kind);


--
-- Name: data_set_relationships_all data_relationship_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE data_relationship_delete AS
    ON DELETE TO data_set_relationships_all
   WHERE (old.del_id IS NULL) DO  UPDATE data_set_relationships_history SET valid_until_timestamp = CURRENT_TIMESTAMP
  WHERE ((((data_set_relationships_history.main_data_id)::bigint = (old.data_id_parent)::bigint) AND ((data_set_relationships_history.data_id)::bigint = (old.data_id_child)::bigint) AND ((data_set_relationships_history.relation_type)::text = ( SELECT upper((relationship_types.parent_label)::text) AS upper
           FROM relationship_types
          WHERE ((relationship_types.id)::bigint = (old.relationship_id)::bigint))) AND (data_set_relationships_history.valid_until_timestamp IS NULL)) OR (((data_set_relationships_history.main_data_id)::bigint = (old.data_id_child)::bigint) AND ((data_set_relationships_history.data_id)::bigint = (old.data_id_parent)::bigint) AND ((data_set_relationships_history.relation_type)::text = ( SELECT upper((relationship_types.child_label)::text) AS upper
           FROM relationship_types
          WHERE ((relationship_types.id)::bigint = (old.relationship_id)::bigint))) AND (data_set_relationships_history.valid_until_timestamp IS NULL)));


--
-- Name: data_set_relationships_all data_relationship_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE data_relationship_insert AS
    ON INSERT TO data_set_relationships_all
   WHERE (new.del_id IS NULL) DO ( INSERT INTO data_set_relationships_history (id, main_data_id, relation_type, data_id, entity_perm_id, pers_id_author, valid_from_timestamp, ordinal)
  VALUES (nextval('data_set_relationships_history_id_seq'::regclass), new.data_id_parent, ( SELECT upper((relationship_types.parent_label)::text) AS upper
           FROM relationship_types
          WHERE ((relationship_types.id)::bigint = (new.relationship_id)::bigint)), new.data_id_child, ( SELECT data_all.code
           FROM data_all
          WHERE ((data_all.id)::bigint = (new.data_id_child)::bigint)), new.pers_id_author, new.modification_timestamp, new.ordinal);
 INSERT INTO data_set_relationships_history (id, main_data_id, relation_type, data_id, entity_perm_id, pers_id_author, valid_from_timestamp, ordinal)
  VALUES (nextval('data_set_relationships_history_id_seq'::regclass), new.data_id_child, ( SELECT upper((relationship_types.child_label)::text) AS upper
           FROM relationship_types
          WHERE ((relationship_types.id)::bigint = (new.relationship_id)::bigint)), new.data_id_parent, ( SELECT data_all.code
           FROM data_all
          WHERE ((data_all.id)::bigint = (new.data_id_parent)::bigint)), new.pers_id_author, new.modification_timestamp, new.ordinal);
);


--
-- Name: data_set_relationships_all data_relationship_trash_revert_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE data_relationship_trash_revert_update AS
    ON UPDATE TO data_set_relationships_all
   WHERE ((old.del_id IS NOT NULL) AND (new.del_id IS NULL)) DO ( INSERT INTO data_set_relationships_history (id, main_data_id, relation_type, data_id, entity_perm_id, pers_id_author, valid_from_timestamp, ordinal)
  VALUES (nextval('data_set_relationships_history_id_seq'::regclass), new.data_id_parent, ( SELECT upper((relationship_types.parent_label)::text) AS upper
           FROM relationship_types
          WHERE ((relationship_types.id)::bigint = (new.relationship_id)::bigint)), new.data_id_child, ( SELECT data_all.code
           FROM data_all
          WHERE ((data_all.id)::bigint = (new.data_id_child)::bigint)), new.pers_id_author, new.modification_timestamp, new.ordinal);
 INSERT INTO data_set_relationships_history (id, main_data_id, relation_type, data_id, entity_perm_id, pers_id_author, valid_from_timestamp, ordinal)
  VALUES (nextval('data_set_relationships_history_id_seq'::regclass), new.data_id_child, ( SELECT upper((relationship_types.child_label)::text) AS upper
           FROM relationship_types
          WHERE ((relationship_types.id)::bigint = (new.relationship_id)::bigint)), new.data_id_parent, ( SELECT data_all.code
           FROM data_all
          WHERE ((data_all.id)::bigint = (new.data_id_parent)::bigint)), new.pers_id_author, new.modification_timestamp, new.ordinal);
);


--
-- Name: data_set_relationships_all data_relationship_trash_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE data_relationship_trash_update AS
    ON UPDATE TO data_set_relationships_all
   WHERE ((new.del_id IS NOT NULL) AND (old.del_id IS NULL)) DO  UPDATE data_set_relationships_history SET valid_until_timestamp = CURRENT_TIMESTAMP
  WHERE ((((data_set_relationships_history.main_data_id)::bigint = (old.data_id_parent)::bigint) AND ((data_set_relationships_history.data_id)::bigint = (old.data_id_child)::bigint) AND ((data_set_relationships_history.relation_type)::text = ( SELECT upper((relationship_types.parent_label)::text) AS upper
           FROM relationship_types
          WHERE ((relationship_types.id)::bigint = (old.relationship_id)::bigint))) AND (data_set_relationships_history.valid_until_timestamp IS NULL)) OR (((data_set_relationships_history.main_data_id)::bigint = (old.data_id_child)::bigint) AND ((data_set_relationships_history.data_id)::bigint = (old.data_id_parent)::bigint) AND ((data_set_relationships_history.relation_type)::text = ( SELECT upper((relationship_types.child_label)::text) AS upper
           FROM relationship_types
          WHERE ((relationship_types.id)::bigint = (old.relationship_id)::bigint))) AND (data_set_relationships_history.valid_until_timestamp IS NULL)));


--
-- Name: data_set_relationships_all data_relationship_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE data_relationship_update AS
    ON UPDATE TO data_set_relationships_all
   WHERE ((new.del_id IS NULL) AND (old.del_id IS NULL)) DO ( UPDATE data_set_relationships_history SET valid_until_timestamp = CURRENT_TIMESTAMP
  WHERE ((((data_set_relationships_history.main_data_id)::bigint = (old.data_id_parent)::bigint) AND ((data_set_relationships_history.data_id)::bigint = (old.data_id_child)::bigint) AND ((data_set_relationships_history.relation_type)::text = ( SELECT upper((relationship_types.parent_label)::text) AS upper
           FROM relationship_types
          WHERE ((relationship_types.id)::bigint = (old.relationship_id)::bigint))) AND (data_set_relationships_history.valid_until_timestamp IS NULL)) OR (((data_set_relationships_history.main_data_id)::bigint = (old.data_id_child)::bigint) AND ((data_set_relationships_history.data_id)::bigint = (old.data_id_parent)::bigint) AND ((data_set_relationships_history.relation_type)::text = ( SELECT upper((relationship_types.child_label)::text) AS upper
           FROM relationship_types
          WHERE ((relationship_types.id)::bigint = (old.relationship_id)::bigint))) AND (data_set_relationships_history.valid_until_timestamp IS NULL)));
 INSERT INTO data_set_relationships_history (id, main_data_id, relation_type, data_id, entity_perm_id, pers_id_author, valid_from_timestamp, ordinal)
  VALUES (nextval('data_set_relationships_history_id_seq'::regclass), new.data_id_parent, ( SELECT upper((relationship_types.parent_label)::text) AS upper
           FROM relationship_types
          WHERE ((relationship_types.id)::bigint = (new.relationship_id)::bigint)), new.data_id_child, ( SELECT data_all.code
           FROM data_all
          WHERE ((data_all.id)::bigint = (new.data_id_child)::bigint)), new.pers_id_author, new.modification_timestamp, new.ordinal);
 INSERT INTO data_set_relationships_history (id, main_data_id, relation_type, data_id, entity_perm_id, pers_id_author, valid_from_timestamp, ordinal)
  VALUES (nextval('data_set_relationships_history_id_seq'::regclass), new.data_id_child, ( SELECT upper((relationship_types.child_label)::text) AS upper
           FROM relationship_types
          WHERE ((relationship_types.id)::bigint = (new.relationship_id)::bigint)), new.data_id_parent, ( SELECT data_all.code
           FROM data_all
          WHERE ((data_all.id)::bigint = (new.data_id_parent)::bigint)), new.pers_id_author, new.modification_timestamp, new.ordinal);
);


--
-- Name: data_set_properties data_set_properties_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE data_set_properties_delete AS
    ON DELETE TO data_set_properties
   WHERE ((((old.value IS NOT NULL) AND (decode(replace("substring"((old.value)::text, 1, 1), '\'::text, '\\'::text), 'escape'::text) <> '\xefbfbd'::bytea)) OR (old.cvte_id IS NOT NULL) OR (old.mate_prop_id IS NOT NULL) OR (old.samp_prop_id IS NOT NULL)) AND (( SELECT data_all.del_id
           FROM data_all
          WHERE ((data_all.id)::bigint = (old.ds_id)::bigint)) IS NULL)) DO  INSERT INTO data_set_properties_history (id, ds_id, dstpt_id, value, vocabulary_term, material, sample, pers_id_author, valid_from_timestamp, valid_until_timestamp)
  VALUES (nextval('data_set_property_id_seq'::regclass), old.ds_id, old.dstpt_id, old.value, ( SELECT ((((t.code)::text || ' ['::text) || (v.code)::text) || ']'::text)
           FROM (controlled_vocabulary_terms t
             JOIN controlled_vocabularies v ON (((t.covo_id)::bigint = (v.id)::bigint)))
          WHERE ((t.id)::bigint = (old.cvte_id)::bigint)), ( SELECT ((((m.code)::text || ' ['::text) || (mt.code)::text) || ']'::text)
           FROM (materials m
             JOIN material_types mt ON (((m.maty_id)::bigint = (mt.id)::bigint)))
          WHERE ((m.id)::bigint = (old.mate_prop_id)::bigint)), ( SELECT samples_all.perm_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (old.samp_prop_id)::bigint)), old.pers_id_author, old.modification_timestamp, CURRENT_TIMESTAMP);


--
-- Name: data_set_properties data_set_properties_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE data_set_properties_update AS
    ON UPDATE TO data_set_properties
   WHERE (((old.value IS NOT NULL) AND (decode(replace("substring"((old.value)::text, 1, 1), '\'::text, '\\'::text), 'escape'::text) <> '\xefbfbd'::bytea) AND ((old.value)::text <> (new.value)::text)) OR ((old.cvte_id IS NOT NULL) AND ((old.cvte_id)::bigint <> (new.cvte_id)::bigint)) OR ((old.mate_prop_id IS NOT NULL) AND ((old.mate_prop_id)::bigint <> (new.mate_prop_id)::bigint)) OR ((old.samp_prop_id IS NOT NULL) AND ((old.samp_prop_id)::bigint <> (new.samp_prop_id)::bigint))) DO  INSERT INTO data_set_properties_history (id, ds_id, dstpt_id, value, vocabulary_term, material, sample, pers_id_author, valid_from_timestamp, valid_until_timestamp)
  VALUES (nextval('data_set_property_id_seq'::regclass), old.ds_id, old.dstpt_id, old.value, ( SELECT ((((t.code)::text || ' ['::text) || (v.code)::text) || ']'::text)
           FROM (controlled_vocabulary_terms t
             JOIN controlled_vocabularies v ON (((t.covo_id)::bigint = (v.id)::bigint)))
          WHERE ((t.id)::bigint = (old.cvte_id)::bigint)), ( SELECT ((((m.code)::text || ' ['::text) || (mt.code)::text) || ']'::text)
           FROM (materials m
             JOIN material_types mt ON (((m.maty_id)::bigint = (mt.id)::bigint)))
          WHERE ((m.id)::bigint = (old.mate_prop_id)::bigint)), ( SELECT samples_all.perm_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (old.samp_prop_id)::bigint)), old.pers_id_author, old.modification_timestamp, new.modification_timestamp);


--
-- Name: data_set_relationships data_set_relationships_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE data_set_relationships_delete AS
    ON DELETE TO data_set_relationships DO INSTEAD  DELETE FROM data_set_relationships_all
  WHERE (((data_set_relationships_all.data_id_parent)::bigint = (old.data_id_parent)::bigint) AND ((data_set_relationships_all.data_id_child)::bigint = (old.data_id_child)::bigint) AND ((data_set_relationships_all.relationship_id)::bigint = (old.relationship_id)::bigint));


--
-- Name: data_set_relationships data_set_relationships_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE data_set_relationships_insert AS
    ON INSERT TO data_set_relationships DO INSTEAD  INSERT INTO data_set_relationships_all (data_id_parent, parent_frozen, cont_frozen, data_id_child, child_frozen, comp_frozen, pers_id_author, relationship_id, ordinal, registration_timestamp, modification_timestamp)
  VALUES (new.data_id_parent, new.parent_frozen, new.cont_frozen, new.data_id_child, new.child_frozen, new.comp_frozen, new.pers_id_author, new.relationship_id, new.ordinal, new.registration_timestamp, new.modification_timestamp);


--
-- Name: data_set_relationships data_set_relationships_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE data_set_relationships_update AS
    ON UPDATE TO data_set_relationships DO INSTEAD  UPDATE data_set_relationships_all SET data_id_parent = new.data_id_parent, parent_frozen = new.parent_frozen, cont_frozen = new.cont_frozen, data_id_child = new.data_id_child, child_frozen = new.child_frozen, comp_frozen = new.comp_frozen, del_id = new.del_id, relationship_id = new.relationship_id, ordinal = new.ordinal, pers_id_author = new.pers_id_author, registration_timestamp = new.registration_timestamp, modification_timestamp = new.modification_timestamp
  WHERE (((data_set_relationships_all.data_id_parent)::bigint = (new.data_id_parent)::bigint) AND ((data_set_relationships_all.data_id_child)::bigint = (new.data_id_child)::bigint) AND ((data_set_relationships_all.relationship_id)::bigint = (new.relationship_id)::bigint));


--
-- Name: data data_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE data_update AS
    ON UPDATE TO data DO INSTEAD  UPDATE data_all SET code = new.code, frozen = new.frozen, frozen_for_children = new.frozen_for_children, frozen_for_parents = new.frozen_for_parents, frozen_for_comps = new.frozen_for_comps, frozen_for_conts = new.frozen_for_conts, del_id = new.del_id, orig_del = new.orig_del, expe_id = new.expe_id, expe_frozen = new.expe_frozen, dast_id = new.dast_id, data_producer_code = new.data_producer_code, dsty_id = new.dsty_id, is_derived = new.is_derived, is_valid = new.is_valid, modification_timestamp = new.modification_timestamp, access_timestamp = new.access_timestamp, pers_id_registerer = new.pers_id_registerer, pers_id_modifier = new.pers_id_modifier, production_timestamp = new.production_timestamp, registration_timestamp = new.registration_timestamp, samp_id = new.samp_id, samp_frozen = new.samp_frozen, version = new.version, data_set_kind = new.data_set_kind
  WHERE ((data_all.id)::bigint = (new.id)::bigint);


--
-- Name: data_all dataset_experiment_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE dataset_experiment_delete AS
    ON DELETE TO data_all
   WHERE ((old.expe_id IS NOT NULL) AND (old.samp_id IS NULL)) DO  UPDATE experiment_relationships_history SET valid_until_timestamp = CURRENT_TIMESTAMP
  WHERE (((experiment_relationships_history.main_expe_id)::bigint = (old.expe_id)::bigint) AND ((experiment_relationships_history.data_id)::bigint = (old.id)::bigint) AND (experiment_relationships_history.valid_until_timestamp IS NULL));


--
-- Name: data_all dataset_experiment_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE dataset_experiment_insert AS
    ON INSERT TO data_all
   WHERE ((new.expe_id IS NOT NULL) AND (new.samp_id IS NULL)) DO ( INSERT INTO experiment_relationships_history (id, main_expe_id, relation_type, data_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('experiment_relationships_history_id_seq'::regclass), new.expe_id, 'OWNER'::text, new.id, new.code, new.pers_id_modifier, new.modification_timestamp);
 INSERT INTO data_set_relationships_history (id, main_data_id, relation_type, expe_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('data_set_relationships_history_id_seq'::regclass), new.id, 'OWNED'::text, new.expe_id, ( SELECT experiments_all.perm_id
           FROM experiments_all
          WHERE ((experiments_all.id)::bigint = (new.expe_id)::bigint)), new.pers_id_modifier, new.modification_timestamp);
);


--
-- Name: data_all dataset_experiment_remove_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE dataset_experiment_remove_update AS
    ON UPDATE TO data_all
   WHERE ((old.samp_id IS NULL) AND (new.samp_id IS NOT NULL)) DO ( UPDATE experiment_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((experiment_relationships_history.main_expe_id)::bigint = (old.expe_id)::bigint) AND ((experiment_relationships_history.data_id)::bigint = (old.id)::bigint) AND (experiment_relationships_history.valid_until_timestamp IS NULL));
 UPDATE data_set_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((data_set_relationships_history.main_data_id)::bigint = (old.id)::bigint) AND ((data_set_relationships_history.expe_id)::bigint = (old.expe_id)::bigint) AND (data_set_relationships_history.valid_until_timestamp IS NULL));
);


--
-- Name: data_all dataset_experiment_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE dataset_experiment_update AS
    ON UPDATE TO data_all
   WHERE ((((old.expe_id)::bigint <> (new.expe_id)::bigint) OR (old.samp_id IS NOT NULL)) AND (new.samp_id IS NULL)) DO ( UPDATE experiment_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((experiment_relationships_history.main_expe_id)::bigint = (old.expe_id)::bigint) AND ((experiment_relationships_history.data_id)::bigint = (old.id)::bigint) AND (experiment_relationships_history.valid_until_timestamp IS NULL));
 INSERT INTO experiment_relationships_history (id, main_expe_id, relation_type, data_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('experiment_relationships_history_id_seq'::regclass), new.expe_id, 'OWNER'::text, new.id, new.code, new.pers_id_modifier, new.modification_timestamp);
 UPDATE data_set_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((data_set_relationships_history.main_data_id)::bigint = (old.id)::bigint) AND ((data_set_relationships_history.expe_id)::bigint = (old.expe_id)::bigint) AND (data_set_relationships_history.valid_until_timestamp IS NULL));
 INSERT INTO data_set_relationships_history (id, main_data_id, relation_type, expe_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('data_set_relationships_history_id_seq'::regclass), new.id, 'OWNED'::text, new.expe_id, ( SELECT experiments_all.perm_id
           FROM experiments_all
          WHERE ((experiments_all.id)::bigint = (new.expe_id)::bigint)), new.pers_id_modifier, new.modification_timestamp);
);


--
-- Name: data_all dataset_sample_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE dataset_sample_delete AS
    ON DELETE TO data_all
   WHERE (old.samp_id IS NOT NULL) DO  UPDATE sample_relationships_history SET valid_until_timestamp = CURRENT_TIMESTAMP
  WHERE (((sample_relationships_history.main_samp_id)::bigint = (old.samp_id)::bigint) AND ((sample_relationships_history.data_id)::bigint = (old.id)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL));


--
-- Name: data_all dataset_sample_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE dataset_sample_insert AS
    ON INSERT TO data_all
   WHERE (new.samp_id IS NOT NULL) DO ( INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, data_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.samp_id, 'OWNER'::text, new.id, new.code, new.pers_id_modifier, new.modification_timestamp);
 INSERT INTO data_set_relationships_history (id, main_data_id, relation_type, samp_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('data_set_relationships_history_id_seq'::regclass), new.id, 'OWNED'::text, new.samp_id, ( SELECT samples_all.perm_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (new.samp_id)::bigint)), new.pers_id_modifier, new.modification_timestamp);
);


--
-- Name: data_all dataset_sample_remove_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE dataset_sample_remove_update AS
    ON UPDATE TO data_all
   WHERE ((old.samp_id IS NOT NULL) AND (new.samp_id IS NULL)) DO ( UPDATE sample_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((sample_relationships_history.main_samp_id)::bigint = (old.samp_id)::bigint) AND ((sample_relationships_history.data_id)::bigint = (old.id)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL));
 UPDATE data_set_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((data_set_relationships_history.main_data_id)::bigint = (old.id)::bigint) AND ((data_set_relationships_history.samp_id)::bigint = (old.samp_id)::bigint) AND (data_set_relationships_history.valid_until_timestamp IS NULL));
);


--
-- Name: data_all dataset_sample_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE dataset_sample_update AS
    ON UPDATE TO data_all
   WHERE ((((old.samp_id)::bigint <> (new.samp_id)::bigint) OR (old.samp_id IS NULL)) AND (new.samp_id IS NOT NULL)) DO ( UPDATE sample_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((sample_relationships_history.main_samp_id)::bigint = (old.samp_id)::bigint) AND ((sample_relationships_history.data_id)::bigint = (old.id)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL));
 INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, data_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.samp_id, 'OWNER'::text, new.id, new.code, new.pers_id_modifier, new.modification_timestamp);
 UPDATE data_set_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((data_set_relationships_history.main_data_id)::bigint = (old.id)::bigint) AND ((data_set_relationships_history.samp_id)::bigint = (old.samp_id)::bigint) AND (data_set_relationships_history.valid_until_timestamp IS NULL));
 INSERT INTO data_set_relationships_history (id, main_data_id, relation_type, samp_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('data_set_relationships_history_id_seq'::regclass), new.id, 'OWNED'::text, new.samp_id, ( SELECT samples_all.perm_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (new.samp_id)::bigint)), new.pers_id_modifier, new.modification_timestamp);
);


--
-- Name: external_data_management_systems edms_a_insert_content_copy_history; Type: RULE; Schema: public; Owner: -
--

CREATE RULE edms_a_insert_content_copy_history AS
    ON UPDATE TO external_data_management_systems DO  INSERT INTO data_set_copies_history (id, cc_id, data_id, external_code, path, git_commit_hash, git_repository_id, edms_id, edms_code, edms_label, edms_address, pers_id_author, valid_from_timestamp)  SELECT nextval('data_set_copies_history_id_seq'::regclass) AS nextval,
            dsch.cc_id,
            dsch.data_id,
            dsch.external_code,
            dsch.path,
            dsch.git_commit_hash,
            dsch.git_repository_id,
            dsch.edms_id,
            new.code,
            new.label,
            new.address,
            dsch.pers_id_author,
            CURRENT_TIMESTAMP AS "current_timestamp"
           FROM (data_set_copies_history dsch
             JOIN external_data_management_systems edms ON (((edms.id)::bigint = (dsch.edms_id)::bigint)))
          WHERE (((new.id)::bigint = (dsch.edms_id)::bigint) AND (dsch.valid_until_timestamp IS NULL));


--
-- Name: external_data_management_systems edms_b_expire_content_copy_history; Type: RULE; Schema: public; Owner: -
--

CREATE RULE edms_b_expire_content_copy_history AS
    ON UPDATE TO external_data_management_systems DO  UPDATE data_set_copies_history SET valid_until_timestamp = CURRENT_TIMESTAMP
  WHERE ((data_set_copies_history.valid_until_timestamp IS NULL) AND ((data_set_copies_history.edms_id)::bigint = (new.id)::bigint) AND ((data_set_copies_history.valid_from_timestamp)::timestamp with time zone <> CURRENT_TIMESTAMP));


--
-- Name: experiments experiment_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE experiment_delete AS
    ON DELETE TO experiments DO INSTEAD  DELETE FROM experiments_all
  WHERE ((experiments_all.id)::bigint = (old.id)::bigint);


--
-- Name: experiments experiment_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE experiment_insert AS
    ON INSERT TO experiments DO INSTEAD  INSERT INTO experiments_all (id, frozen, frozen_for_samp, frozen_for_data, code, del_id, orig_del, exty_id, is_public, modification_timestamp, perm_id, pers_id_registerer, pers_id_modifier, proj_id, proj_frozen, registration_timestamp, version)
  VALUES (new.id, new.frozen, new.frozen_for_samp, new.frozen_for_data, new.code, new.del_id, new.orig_del, new.exty_id, new.is_public, new.modification_timestamp, new.perm_id, new.pers_id_registerer, new.pers_id_modifier, new.proj_id, new.proj_frozen, new.registration_timestamp, new.version);


--
-- Name: experiments_all experiment_project_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE experiment_project_delete AS
    ON DELETE TO experiments_all
   WHERE (old.proj_id IS NOT NULL) DO  UPDATE project_relationships_history SET valid_until_timestamp = CURRENT_TIMESTAMP
  WHERE (((project_relationships_history.main_proj_id)::bigint = (old.proj_id)::bigint) AND ((project_relationships_history.expe_id)::bigint = (old.id)::bigint) AND (project_relationships_history.valid_until_timestamp IS NULL));


--
-- Name: experiments_all experiment_project_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE experiment_project_insert AS
    ON INSERT TO experiments_all
   WHERE (new.proj_id IS NOT NULL) DO ( INSERT INTO project_relationships_history (id, main_proj_id, relation_type, expe_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('project_relationships_history_id_seq'::regclass), new.proj_id, 'OWNER'::text, new.id, new.perm_id, new.pers_id_modifier, new.modification_timestamp);
 INSERT INTO experiment_relationships_history (id, main_expe_id, relation_type, proj_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('experiment_relationships_history_id_seq'::regclass), new.id, 'OWNED'::text, new.proj_id, ( SELECT projects.perm_id
           FROM projects
          WHERE ((projects.id)::bigint = (new.proj_id)::bigint)), new.pers_id_modifier, new.modification_timestamp);
);


--
-- Name: experiments_all experiment_project_remove_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE experiment_project_remove_update AS
    ON UPDATE TO experiments_all
   WHERE ((old.proj_id IS NOT NULL) AND (new.proj_id IS NULL)) DO ( UPDATE project_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((project_relationships_history.main_proj_id)::bigint = (old.proj_id)::bigint) AND ((project_relationships_history.expe_id)::bigint = (old.id)::bigint) AND (project_relationships_history.valid_until_timestamp IS NULL));
 UPDATE experiment_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((experiment_relationships_history.main_expe_id)::bigint = (old.id)::bigint) AND ((experiment_relationships_history.proj_id)::bigint = (old.proj_id)::bigint) AND (experiment_relationships_history.valid_until_timestamp IS NULL));
);


--
-- Name: experiments_all experiment_project_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE experiment_project_update AS
    ON UPDATE TO experiments_all
   WHERE ((((old.proj_id)::bigint <> (new.proj_id)::bigint) OR (old.proj_id IS NULL)) AND (new.proj_id IS NOT NULL)) DO ( UPDATE project_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((project_relationships_history.main_proj_id)::bigint = (old.proj_id)::bigint) AND ((project_relationships_history.expe_id)::bigint = (old.id)::bigint) AND (project_relationships_history.valid_until_timestamp IS NULL));
 INSERT INTO project_relationships_history (id, main_proj_id, relation_type, expe_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('project_relationships_history_id_seq'::regclass), new.proj_id, 'OWNER'::text, new.id, new.perm_id, new.pers_id_modifier, new.modification_timestamp);
 UPDATE experiment_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((experiment_relationships_history.main_expe_id)::bigint = (old.id)::bigint) AND ((experiment_relationships_history.proj_id)::bigint = (old.proj_id)::bigint) AND (experiment_relationships_history.valid_until_timestamp IS NULL));
 INSERT INTO experiment_relationships_history (id, main_expe_id, relation_type, proj_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('experiment_relationships_history_id_seq'::regclass), new.id, 'OWNED'::text, new.proj_id, ( SELECT projects.perm_id
           FROM projects
          WHERE ((projects.id)::bigint = (new.proj_id)::bigint)), new.pers_id_modifier, new.modification_timestamp);
);


--
-- Name: experiment_properties experiment_properties_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE experiment_properties_delete AS
    ON DELETE TO experiment_properties
   WHERE (((old.value IS NOT NULL) AND (decode(replace("substring"((old.value)::text, 1, 1), '\'::text, '\\'::text), 'escape'::text) <> '\xefbfbd'::bytea)) OR (old.cvte_id IS NOT NULL) OR (old.mate_prop_id IS NOT NULL) OR (old.samp_prop_id IS NOT NULL)) DO  INSERT INTO experiment_properties_history (id, expe_id, etpt_id, value, vocabulary_term, material, sample, pers_id_author, valid_from_timestamp, valid_until_timestamp)
  VALUES (nextval('experiment_property_id_seq'::regclass), old.expe_id, old.etpt_id, old.value, ( SELECT ((((t.code)::text || ' ['::text) || (v.code)::text) || ']'::text)
           FROM (controlled_vocabulary_terms t
             JOIN controlled_vocabularies v ON (((t.covo_id)::bigint = (v.id)::bigint)))
          WHERE ((t.id)::bigint = (old.cvte_id)::bigint)), ( SELECT ((((m.code)::text || ' ['::text) || (mt.code)::text) || ']'::text)
           FROM (materials m
             JOIN material_types mt ON (((m.maty_id)::bigint = (mt.id)::bigint)))
          WHERE ((m.id)::bigint = (old.mate_prop_id)::bigint)), ( SELECT samples_all.perm_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (old.samp_prop_id)::bigint)), old.pers_id_author, old.modification_timestamp, CURRENT_TIMESTAMP);


--
-- Name: experiment_properties experiment_properties_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE experiment_properties_update AS
    ON UPDATE TO experiment_properties
   WHERE (((old.value IS NOT NULL) AND (decode(replace("substring"((old.value)::text, 1, 1), '\'::text, '\\'::text), 'escape'::text) <> '\xefbfbd'::bytea) AND ((old.value)::text <> (new.value)::text)) OR ((old.cvte_id IS NOT NULL) AND ((old.cvte_id)::bigint <> (new.cvte_id)::bigint)) OR ((old.mate_prop_id IS NOT NULL) AND ((old.mate_prop_id)::bigint <> (new.mate_prop_id)::bigint)) OR ((old.samp_prop_id IS NOT NULL) AND ((old.samp_prop_id)::bigint <> (new.samp_prop_id)::bigint))) DO  INSERT INTO experiment_properties_history (id, expe_id, etpt_id, value, vocabulary_term, material, sample, pers_id_author, valid_from_timestamp, valid_until_timestamp)
  VALUES (nextval('experiment_property_id_seq'::regclass), old.expe_id, old.etpt_id, old.value, ( SELECT ((((t.code)::text || ' ['::text) || (v.code)::text) || ']'::text)
           FROM (controlled_vocabulary_terms t
             JOIN controlled_vocabularies v ON (((t.covo_id)::bigint = (v.id)::bigint)))
          WHERE ((t.id)::bigint = (old.cvte_id)::bigint)), ( SELECT ((((m.code)::text || ' ['::text) || (mt.code)::text) || ']'::text)
           FROM (materials m
             JOIN material_types mt ON (((m.maty_id)::bigint = (mt.id)::bigint)))
          WHERE ((m.id)::bigint = (old.mate_prop_id)::bigint)), ( SELECT samples_all.perm_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (old.samp_prop_id)::bigint)), old.pers_id_author, old.modification_timestamp, new.modification_timestamp);


--
-- Name: experiments experiment_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE experiment_update AS
    ON UPDATE TO experiments DO INSTEAD  UPDATE experiments_all SET code = new.code, frozen = new.frozen, frozen_for_samp = new.frozen_for_samp, frozen_for_data = new.frozen_for_data, del_id = new.del_id, orig_del = new.orig_del, exty_id = new.exty_id, is_public = new.is_public, modification_timestamp = new.modification_timestamp, perm_id = new.perm_id, pers_id_registerer = new.pers_id_registerer, pers_id_modifier = new.pers_id_modifier, proj_id = new.proj_id, proj_frozen = new.proj_frozen, registration_timestamp = new.registration_timestamp, version = new.version
  WHERE ((experiments_all.id)::bigint = (new.id)::bigint);


--
-- Name: experiments_deleted experiments_deleted_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE experiments_deleted_delete AS
    ON DELETE TO experiments_deleted DO INSTEAD  DELETE FROM experiments_all
  WHERE ((experiments_all.id)::bigint = (old.id)::bigint);


--
-- Name: experiments_deleted experiments_deleted_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE experiments_deleted_update AS
    ON UPDATE TO experiments_deleted DO INSTEAD  UPDATE experiments_all SET del_id = new.del_id, orig_del = new.orig_del, modification_timestamp = new.modification_timestamp, version = new.version
  WHERE ((experiments_all.id)::bigint = (new.id)::bigint);


--
-- Name: material_properties material_properties_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE material_properties_delete AS
    ON DELETE TO material_properties
   WHERE (((old.value IS NOT NULL) AND (decode(replace("substring"((old.value)::text, 1, 1), '\'::text, '\\'::text), 'escape'::text) <> '\xefbfbd'::bytea)) OR (old.cvte_id IS NOT NULL) OR (old.mate_prop_id IS NOT NULL)) DO  INSERT INTO material_properties_history (id, mate_id, mtpt_id, value, vocabulary_term, material, pers_id_author, valid_from_timestamp, valid_until_timestamp)
  VALUES (nextval('material_property_id_seq'::regclass), old.mate_id, old.mtpt_id, old.value, ( SELECT ((((t.code)::text || ' ['::text) || (v.code)::text) || ']'::text)
           FROM (controlled_vocabulary_terms t
             JOIN controlled_vocabularies v ON (((t.covo_id)::bigint = (v.id)::bigint)))
          WHERE ((t.id)::bigint = (old.cvte_id)::bigint)), ( SELECT ((((m.code)::text || ' ['::text) || (mt.code)::text) || ']'::text)
           FROM (materials m
             JOIN material_types mt ON (((m.maty_id)::bigint = (mt.id)::bigint)))
          WHERE ((m.id)::bigint = (old.mate_prop_id)::bigint)), old.pers_id_author, old.modification_timestamp, CURRENT_TIMESTAMP);


--
-- Name: material_properties material_properties_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE material_properties_update AS
    ON UPDATE TO material_properties
   WHERE (((old.value IS NOT NULL) AND (decode(replace("substring"((old.value)::text, 1, 1), '\'::text, '\\'::text), 'escape'::text) <> '\xefbfbd'::bytea) AND ((old.value)::text <> (new.value)::text)) OR ((old.cvte_id IS NOT NULL) AND ((old.cvte_id)::bigint <> (new.cvte_id)::bigint)) OR ((old.mate_prop_id IS NOT NULL) AND ((old.mate_prop_id)::bigint <> (new.mate_prop_id)::bigint))) DO  INSERT INTO material_properties_history (id, mate_id, mtpt_id, value, vocabulary_term, material, pers_id_author, valid_from_timestamp, valid_until_timestamp)
  VALUES (nextval('material_property_id_seq'::regclass), old.mate_id, old.mtpt_id, old.value, ( SELECT ((((t.code)::text || ' ['::text) || (v.code)::text) || ']'::text)
           FROM (controlled_vocabulary_terms t
             JOIN controlled_vocabularies v ON (((t.covo_id)::bigint = (v.id)::bigint)))
          WHERE ((t.id)::bigint = (old.cvte_id)::bigint)), ( SELECT ((((m.code)::text || ' ['::text) || (mt.code)::text) || ']'::text)
           FROM (materials m
             JOIN material_types mt ON (((m.maty_id)::bigint = (mt.id)::bigint)))
          WHERE ((m.id)::bigint = (old.mate_prop_id)::bigint)), old.pers_id_author, old.modification_timestamp, new.modification_timestamp);


--
-- Name: metaproject_assignments metaproject_assignments_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE metaproject_assignments_delete AS
    ON DELETE TO metaproject_assignments DO INSTEAD  DELETE FROM metaproject_assignments_all
  WHERE ((metaproject_assignments_all.id)::bigint = (old.id)::bigint);


--
-- Name: metaproject_assignments metaproject_assignments_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE metaproject_assignments_insert AS
    ON INSERT TO metaproject_assignments DO INSTEAD  INSERT INTO metaproject_assignments_all (id, mepr_id, expe_id, samp_id, data_id, mate_id, del_id, creation_date)
  VALUES (new.id, new.mepr_id, new.expe_id, new.samp_id, new.data_id, new.mate_id, new.del_id, new.creation_date);


--
-- Name: metaproject_assignments metaproject_assignments_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE metaproject_assignments_update AS
    ON UPDATE TO metaproject_assignments DO INSTEAD  UPDATE metaproject_assignments_all SET id = new.id, mepr_id = new.mepr_id, expe_id = new.expe_id, samp_id = new.samp_id, data_id = new.data_id, mate_id = new.mate_id, del_id = new.del_id, creation_date = new.creation_date
  WHERE ((metaproject_assignments_all.id)::bigint = (new.id)::bigint);


--
-- Name: projects project_space_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE project_space_insert AS
    ON INSERT TO projects
   WHERE (new.space_id IS NOT NULL) DO  INSERT INTO project_relationships_history (id, main_proj_id, relation_type, space_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('project_relationships_history_id_seq'::regclass), new.id, 'OWNED'::text, new.space_id, ( SELECT spaces.code
           FROM spaces
          WHERE ((spaces.id)::bigint = (new.space_id)::bigint)), new.pers_id_modifier, new.modification_timestamp);


--
-- Name: projects project_space_remove_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE project_space_remove_update AS
    ON UPDATE TO projects
   WHERE ((old.space_id IS NOT NULL) AND (new.space_id IS NULL)) DO  UPDATE project_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((project_relationships_history.main_proj_id)::bigint = (old.id)::bigint) AND ((project_relationships_history.space_id)::bigint = (old.space_id)::bigint) AND (project_relationships_history.valid_until_timestamp IS NULL));


--
-- Name: projects project_space_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE project_space_update AS
    ON UPDATE TO projects
   WHERE ((((old.space_id)::bigint <> (new.space_id)::bigint) OR (old.space_id IS NULL)) AND (new.space_id IS NOT NULL)) DO ( UPDATE project_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((project_relationships_history.main_proj_id)::bigint = (old.id)::bigint) AND ((project_relationships_history.space_id)::bigint = (old.space_id)::bigint) AND (project_relationships_history.valid_until_timestamp IS NULL));
 INSERT INTO project_relationships_history (id, main_proj_id, relation_type, space_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('project_relationships_history_id_seq'::regclass), new.id, 'OWNED'::text, new.space_id, ( SELECT spaces.code
           FROM spaces
          WHERE ((spaces.id)::bigint = (new.space_id)::bigint)), new.pers_id_modifier, new.modification_timestamp);
);


--
-- Name: sample_relationships_all sample_child_annotations_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_child_annotations_update AS
    ON UPDATE TO sample_relationships_all
   WHERE ((old.del_id IS NULL) AND (new.del_id IS NULL) AND ((old.sample_id_child)::bigint = (new.sample_id_child)::bigint) AND ((old.sample_id_parent)::bigint = (new.sample_id_parent)::bigint) AND (old.child_annotations <> new.child_annotations)) DO  INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, samp_id, entity_perm_id, annotations, pers_id_author, valid_from_timestamp, valid_until_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.sample_id_child, 'CHILD'::text, new.sample_id_parent, ( SELECT samples_all.perm_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (new.sample_id_parent)::bigint)), old.child_annotations, new.pers_id_author, old.modification_timestamp, new.modification_timestamp);


--
-- Name: samples_all sample_container_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_container_delete AS
    ON DELETE TO samples_all
   WHERE (old.samp_id_part_of IS NOT NULL) DO  UPDATE sample_relationships_history SET valid_until_timestamp = CURRENT_TIMESTAMP
  WHERE (((sample_relationships_history.main_samp_id)::bigint = (old.samp_id_part_of)::bigint) AND ((sample_relationships_history.samp_id)::bigint = (old.id)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL) AND ((sample_relationships_history.relation_type)::text = 'CONTAINER'::text));


--
-- Name: samples_all sample_container_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_container_insert AS
    ON INSERT TO samples_all
   WHERE (new.samp_id_part_of IS NOT NULL) DO ( INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, samp_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.samp_id_part_of, 'CONTAINER'::text, new.id, new.perm_id, new.pers_id_modifier, new.modification_timestamp);
 INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, samp_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.id, 'CONTAINED'::text, new.samp_id_part_of, ( SELECT samples_all.perm_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (new.samp_id_part_of)::bigint)), new.pers_id_modifier, new.modification_timestamp);
);


--
-- Name: samples_all sample_container_remove_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_container_remove_update AS
    ON UPDATE TO samples_all
   WHERE ((old.samp_id_part_of IS NOT NULL) AND (new.samp_id_part_of IS NULL)) DO  UPDATE sample_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE ((((sample_relationships_history.main_samp_id)::bigint = (old.samp_id_part_of)::bigint) AND ((sample_relationships_history.samp_id)::bigint = (old.id)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL) AND ((sample_relationships_history.relation_type)::text = 'CONTAINER'::text)) OR (((sample_relationships_history.main_samp_id)::bigint = (old.id)::bigint) AND ((sample_relationships_history.samp_id)::bigint = (old.samp_id_part_of)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL) AND ((sample_relationships_history.relation_type)::text = 'CONTAINED'::text)));


--
-- Name: samples_all sample_container_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_container_update AS
    ON UPDATE TO samples_all
   WHERE ((((old.samp_id_part_of)::bigint <> (new.samp_id_part_of)::bigint) OR (old.samp_id_part_of IS NULL)) AND (new.samp_id_part_of IS NOT NULL)) DO ( UPDATE sample_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE ((((sample_relationships_history.main_samp_id)::bigint = (old.samp_id_part_of)::bigint) AND ((sample_relationships_history.samp_id)::bigint = (old.id)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL) AND ((sample_relationships_history.relation_type)::text = 'CONTAINER'::text)) OR (((sample_relationships_history.main_samp_id)::bigint = (old.id)::bigint) AND ((sample_relationships_history.samp_id)::bigint = (old.samp_id_part_of)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL) AND ((sample_relationships_history.relation_type)::text = 'CONTAINED'::text)));
 INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, samp_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.samp_id_part_of, 'CONTAINER'::text, new.id, new.perm_id, new.pers_id_modifier, new.modification_timestamp);
 INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, samp_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.id, 'CONTAINED'::text, new.samp_id_part_of, ( SELECT samples_all.perm_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (new.samp_id_part_of)::bigint)), new.pers_id_modifier, new.modification_timestamp);
);


--
-- Name: samples sample_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_delete AS
    ON DELETE TO samples DO INSTEAD  DELETE FROM samples_all
  WHERE ((samples_all.id)::bigint = (old.id)::bigint);


--
-- Name: samples_deleted sample_deleted_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_deleted_delete AS
    ON DELETE TO samples_deleted DO INSTEAD  DELETE FROM samples_all
  WHERE ((samples_all.id)::bigint = (old.id)::bigint);


--
-- Name: samples_deleted sample_deleted_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_deleted_update AS
    ON UPDATE TO samples_deleted DO INSTEAD  UPDATE samples_all SET del_id = new.del_id, orig_del = new.orig_del, modification_timestamp = new.modification_timestamp, version = new.version
  WHERE ((samples_all.id)::bigint = (new.id)::bigint);


--
-- Name: samples_all sample_experiment_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_experiment_delete AS
    ON DELETE TO samples_all
   WHERE (old.expe_id IS NOT NULL) DO  UPDATE experiment_relationships_history SET valid_until_timestamp = CURRENT_TIMESTAMP
  WHERE (((experiment_relationships_history.main_expe_id)::bigint = (old.expe_id)::bigint) AND ((experiment_relationships_history.samp_id)::bigint = (old.id)::bigint) AND (experiment_relationships_history.valid_until_timestamp IS NULL));


--
-- Name: samples_all sample_experiment_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_experiment_insert AS
    ON INSERT TO samples_all
   WHERE (new.expe_id IS NOT NULL) DO ( INSERT INTO experiment_relationships_history (id, main_expe_id, relation_type, samp_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('experiment_relationships_history_id_seq'::regclass), new.expe_id, 'OWNER'::text, new.id, new.perm_id, new.pers_id_modifier, new.modification_timestamp);
 INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, expe_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.id, 'OWNED'::text, new.expe_id, ( SELECT experiments_all.perm_id
           FROM experiments_all
          WHERE ((experiments_all.id)::bigint = (new.expe_id)::bigint)), new.pers_id_modifier, new.modification_timestamp);
);


--
-- Name: samples_all sample_experiment_remove_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_experiment_remove_update AS
    ON UPDATE TO samples_all
   WHERE ((old.expe_id IS NOT NULL) AND (new.expe_id IS NULL)) DO ( UPDATE experiment_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((experiment_relationships_history.main_expe_id)::bigint = (old.expe_id)::bigint) AND ((experiment_relationships_history.samp_id)::bigint = (old.id)::bigint) AND (experiment_relationships_history.valid_until_timestamp IS NULL));
 UPDATE sample_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((sample_relationships_history.main_samp_id)::bigint = (old.id)::bigint) AND ((sample_relationships_history.expe_id)::bigint = (old.expe_id)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL));
);


--
-- Name: samples_all sample_experiment_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_experiment_update AS
    ON UPDATE TO samples_all
   WHERE ((((old.expe_id)::bigint <> (new.expe_id)::bigint) OR (old.expe_id IS NULL)) AND (new.expe_id IS NOT NULL)) DO ( UPDATE experiment_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((experiment_relationships_history.main_expe_id)::bigint = (old.expe_id)::bigint) AND ((experiment_relationships_history.samp_id)::bigint = (old.id)::bigint) AND (experiment_relationships_history.valid_until_timestamp IS NULL));
 INSERT INTO experiment_relationships_history (id, main_expe_id, relation_type, samp_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('experiment_relationships_history_id_seq'::regclass), new.expe_id, 'OWNER'::text, new.id, new.perm_id, new.pers_id_modifier, new.modification_timestamp);
 UPDATE sample_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((sample_relationships_history.main_samp_id)::bigint = (old.id)::bigint) AND ((sample_relationships_history.expe_id)::bigint = (old.expe_id)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL));
 INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, expe_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.id, 'OWNED'::text, new.expe_id, ( SELECT experiments_all.perm_id
           FROM experiments_all
          WHERE ((experiments_all.id)::bigint = (new.expe_id)::bigint)), new.pers_id_modifier, new.modification_timestamp);
);


--
-- Name: samples sample_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_insert AS
    ON INSERT TO samples DO INSTEAD  INSERT INTO samples_all (id, frozen, frozen_for_comp, frozen_for_children, frozen_for_parents, frozen_for_data, code, del_id, orig_del, expe_id, expe_frozen, proj_id, proj_frozen, modification_timestamp, perm_id, pers_id_registerer, pers_id_modifier, registration_timestamp, samp_id_part_of, cont_frozen, saty_id, space_id, space_frozen, version)
  VALUES (new.id, new.frozen, new.frozen_for_comp, new.frozen_for_children, new.frozen_for_parents, new.frozen_for_data, new.code, new.del_id, new.orig_del, new.expe_id, new.expe_frozen, new.proj_id, new.proj_frozen, new.modification_timestamp, new.perm_id, new.pers_id_registerer, new.pers_id_modifier, new.registration_timestamp, new.samp_id_part_of, new.cont_frozen, new.saty_id, new.space_id, new.space_frozen, new.version);


--
-- Name: sample_relationships_all sample_parent_annotations_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_parent_annotations_update AS
    ON UPDATE TO sample_relationships_all
   WHERE ((old.del_id IS NULL) AND (new.del_id IS NULL) AND ((old.sample_id_child)::bigint = (new.sample_id_child)::bigint) AND ((old.sample_id_parent)::bigint = (new.sample_id_parent)::bigint) AND (old.parent_annotations <> new.parent_annotations)) DO  INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, samp_id, entity_perm_id, annotations, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.sample_id_parent, 'PARENT'::text, new.sample_id_child, ( SELECT samples_all.perm_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (new.sample_id_child)::bigint)), old.parent_annotations, new.pers_id_author, new.modification_timestamp);


--
-- Name: sample_relationships_all sample_parent_child_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_parent_child_delete AS
    ON DELETE TO sample_relationships_all
   WHERE (old.del_id IS NULL) DO  UPDATE sample_relationships_history SET valid_until_timestamp = CURRENT_TIMESTAMP
  WHERE ((((sample_relationships_history.main_samp_id)::bigint = (old.sample_id_parent)::bigint) AND ((sample_relationships_history.samp_id)::bigint = (old.sample_id_child)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL)) OR (((sample_relationships_history.main_samp_id)::bigint = (old.sample_id_child)::bigint) AND ((sample_relationships_history.samp_id)::bigint = (old.sample_id_parent)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL)));


--
-- Name: sample_relationships_all sample_parent_child_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_parent_child_insert AS
    ON INSERT TO sample_relationships_all
   WHERE (new.del_id IS NULL) DO ( INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, samp_id, entity_perm_id, annotations, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.sample_id_parent, 'PARENT'::text, new.sample_id_child, ( SELECT samples_all.perm_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (new.sample_id_child)::bigint)), new.parent_annotations, new.pers_id_author, new.modification_timestamp);
 INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, samp_id, entity_perm_id, annotations, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.sample_id_child, 'CHILD'::text, new.sample_id_parent, ( SELECT samples_all.perm_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (new.sample_id_parent)::bigint)), new.child_annotations, new.pers_id_author, new.modification_timestamp);
);


--
-- Name: sample_relationships_all sample_parent_child_revert_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_parent_child_revert_update AS
    ON UPDATE TO sample_relationships_all
   WHERE ((new.del_id IS NULL) AND (old.del_id IS NOT NULL)) DO ( INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, samp_id, entity_perm_id, annotations, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.sample_id_parent, 'PARENT'::text, new.sample_id_child, ( SELECT samples_all.perm_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (new.sample_id_child)::bigint)), new.parent_annotations, new.pers_id_author, new.modification_timestamp);
 INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, samp_id, entity_perm_id, annotations, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.sample_id_child, 'CHILD'::text, new.sample_id_parent, ( SELECT samples_all.perm_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (new.sample_id_parent)::bigint)), new.child_annotations, new.pers_id_author, new.modification_timestamp);
);


--
-- Name: sample_relationships_all sample_parent_child_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_parent_child_update AS
    ON UPDATE TO sample_relationships_all
   WHERE ((new.del_id IS NOT NULL) AND (old.del_id IS NULL)) DO  UPDATE sample_relationships_history SET valid_until_timestamp = CURRENT_TIMESTAMP
  WHERE ((((sample_relationships_history.main_samp_id)::bigint = (old.sample_id_parent)::bigint) AND ((sample_relationships_history.samp_id)::bigint = (old.sample_id_child)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL)) OR (((sample_relationships_history.main_samp_id)::bigint = (old.sample_id_child)::bigint) AND ((sample_relationships_history.samp_id)::bigint = (old.sample_id_parent)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL)));


--
-- Name: samples_all sample_project_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_project_insert AS
    ON INSERT TO samples_all
   WHERE ((new.expe_id IS NULL) AND (new.proj_id IS NOT NULL)) DO  INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, proj_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.id, 'OWNED'::text, new.proj_id, ( SELECT projects.perm_id
           FROM projects
          WHERE ((projects.id)::bigint = (new.proj_id)::bigint)), new.pers_id_modifier, new.modification_timestamp);


--
-- Name: samples_all sample_project_remove_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_project_remove_update AS
    ON UPDATE TO samples_all
   WHERE ((old.proj_id IS NOT NULL) AND ((new.proj_id IS NULL) OR ((old.expe_id IS NULL) AND (new.expe_id IS NOT NULL)))) DO  UPDATE sample_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((sample_relationships_history.main_samp_id)::bigint = (old.id)::bigint) AND ((sample_relationships_history.proj_id)::bigint = (old.proj_id)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL));


--
-- Name: samples_all sample_project_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_project_update AS
    ON UPDATE TO samples_all
   WHERE ((((old.proj_id)::bigint <> (new.proj_id)::bigint) OR (old.proj_id IS NULL) OR (old.expe_id IS NOT NULL)) AND (new.proj_id IS NOT NULL) AND (new.expe_id IS NULL)) DO ( UPDATE sample_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((sample_relationships_history.main_samp_id)::bigint = (old.id)::bigint) AND ((sample_relationships_history.proj_id)::bigint = (old.proj_id)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL));
 INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, proj_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.id, 'OWNED'::text, new.proj_id, ( SELECT projects.perm_id
           FROM projects
          WHERE ((projects.id)::bigint = (new.proj_id)::bigint)), new.pers_id_modifier, new.modification_timestamp);
);


--
-- Name: sample_properties sample_properties_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_properties_delete AS
    ON DELETE TO sample_properties
   WHERE ((((old.value IS NOT NULL) AND (decode(replace("substring"((old.value)::text, 1, 1), '\'::text, '\\'::text), 'escape'::text) <> '\xefbfbd'::bytea)) OR (old.cvte_id IS NOT NULL) OR (old.mate_prop_id IS NOT NULL) OR (old.samp_prop_id IS NOT NULL)) AND (( SELECT samples_all.del_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (old.samp_id)::bigint)) IS NULL)) DO  INSERT INTO sample_properties_history (id, samp_id, stpt_id, value, vocabulary_term, material, sample, pers_id_author, valid_from_timestamp, valid_until_timestamp)
  VALUES (nextval('sample_property_id_seq'::regclass), old.samp_id, old.stpt_id, old.value, ( SELECT ((((t.code)::text || ' ['::text) || (v.code)::text) || ']'::text)
           FROM (controlled_vocabulary_terms t
             JOIN controlled_vocabularies v ON (((t.covo_id)::bigint = (v.id)::bigint)))
          WHERE ((t.id)::bigint = (old.cvte_id)::bigint)), ( SELECT ((((m.code)::text || ' ['::text) || (mt.code)::text) || ']'::text)
           FROM (materials m
             JOIN material_types mt ON (((m.maty_id)::bigint = (mt.id)::bigint)))
          WHERE ((m.id)::bigint = (old.mate_prop_id)::bigint)), ( SELECT samples_all.perm_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (old.samp_prop_id)::bigint)), old.pers_id_author, old.modification_timestamp, CURRENT_TIMESTAMP);


--
-- Name: sample_properties sample_properties_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_properties_update AS
    ON UPDATE TO sample_properties
   WHERE (((old.value IS NOT NULL) AND (decode(replace("substring"((old.value)::text, 1, 1), '\'::text, '\\'::text), 'escape'::text) <> '\xefbfbd'::bytea) AND ((old.value)::text <> (new.value)::text)) OR ((old.cvte_id IS NOT NULL) AND ((old.cvte_id)::bigint <> (new.cvte_id)::bigint)) OR ((old.mate_prop_id IS NOT NULL) AND ((old.mate_prop_id)::bigint <> (new.mate_prop_id)::bigint)) OR ((old.samp_prop_id IS NOT NULL) AND ((old.samp_prop_id)::bigint <> (new.samp_prop_id)::bigint))) DO  INSERT INTO sample_properties_history (id, samp_id, stpt_id, value, vocabulary_term, material, sample, pers_id_author, valid_from_timestamp, valid_until_timestamp)
  VALUES (nextval('sample_property_id_seq'::regclass), old.samp_id, old.stpt_id, old.value, ( SELECT ((((t.code)::text || ' ['::text) || (v.code)::text) || ']'::text)
           FROM (controlled_vocabulary_terms t
             JOIN controlled_vocabularies v ON (((t.covo_id)::bigint = (v.id)::bigint)))
          WHERE ((t.id)::bigint = (old.cvte_id)::bigint)), ( SELECT ((((m.code)::text || ' ['::text) || (mt.code)::text) || ']'::text)
           FROM (materials m
             JOIN material_types mt ON (((m.maty_id)::bigint = (mt.id)::bigint)))
          WHERE ((m.id)::bigint = (old.mate_prop_id)::bigint)), ( SELECT samples_all.perm_id
           FROM samples_all
          WHERE ((samples_all.id)::bigint = (old.samp_prop_id)::bigint)), old.pers_id_author, old.modification_timestamp, new.modification_timestamp);


--
-- Name: sample_relationships sample_relationships_delete; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_relationships_delete AS
    ON DELETE TO sample_relationships DO INSTEAD  DELETE FROM sample_relationships_all
  WHERE ((sample_relationships_all.id)::bigint = (old.id)::bigint);


--
-- Name: sample_relationships sample_relationships_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_relationships_insert AS
    ON INSERT TO sample_relationships DO INSTEAD  INSERT INTO sample_relationships_all (id, sample_id_parent, parent_frozen, relationship_id, sample_id_child, child_frozen, pers_id_author, registration_timestamp, modification_timestamp, child_annotations, parent_annotations)
  VALUES (new.id, new.sample_id_parent, new.parent_frozen, new.relationship_id, new.sample_id_child, new.child_frozen, new.pers_id_author, new.registration_timestamp, new.modification_timestamp, new.child_annotations, new.parent_annotations);


--
-- Name: sample_relationships sample_relationships_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_relationships_update AS
    ON UPDATE TO sample_relationships DO INSTEAD  UPDATE sample_relationships_all SET sample_id_parent = new.sample_id_parent, parent_frozen = new.parent_frozen, relationship_id = new.relationship_id, sample_id_child = new.sample_id_child, child_frozen = new.child_frozen, del_id = new.del_id, pers_id_author = new.pers_id_author, registration_timestamp = new.registration_timestamp, modification_timestamp = new.modification_timestamp, child_annotations = new.child_annotations, parent_annotations = new.parent_annotations
  WHERE ((sample_relationships_all.id)::bigint = (new.id)::bigint);


--
-- Name: samples_all sample_space_insert; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_space_insert AS
    ON INSERT TO samples_all
   WHERE ((new.expe_id IS NULL) AND (new.space_id IS NOT NULL) AND (new.proj_id IS NULL)) DO  INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, space_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.id, 'OWNED'::text, new.space_id, ( SELECT spaces.code
           FROM spaces
          WHERE ((spaces.id)::bigint = (new.space_id)::bigint)), new.pers_id_modifier, new.modification_timestamp);


--
-- Name: samples_all sample_space_remove_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_space_remove_update AS
    ON UPDATE TO samples_all
   WHERE ((old.space_id IS NOT NULL) AND ((new.space_id IS NULL) OR ((old.expe_id IS NULL) AND (new.expe_id IS NOT NULL)) OR ((old.proj_id IS NULL) AND (new.proj_id IS NOT NULL)))) DO  UPDATE sample_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((sample_relationships_history.main_samp_id)::bigint = (old.id)::bigint) AND ((sample_relationships_history.space_id)::bigint = (old.space_id)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL));


--
-- Name: samples_all sample_space_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_space_update AS
    ON UPDATE TO samples_all
   WHERE ((((old.space_id)::bigint <> (new.space_id)::bigint) OR (old.space_id IS NULL) OR (old.expe_id IS NOT NULL) OR (old.proj_id IS NOT NULL)) AND (new.space_id IS NOT NULL) AND (new.expe_id IS NULL) AND (new.proj_id IS NULL)) DO ( UPDATE sample_relationships_history SET valid_until_timestamp = new.modification_timestamp
  WHERE (((sample_relationships_history.main_samp_id)::bigint = (old.id)::bigint) AND ((sample_relationships_history.space_id)::bigint = (old.space_id)::bigint) AND (sample_relationships_history.valid_until_timestamp IS NULL));
 INSERT INTO sample_relationships_history (id, main_samp_id, relation_type, space_id, entity_perm_id, pers_id_author, valid_from_timestamp)
  VALUES (nextval('sample_relationships_history_id_seq'::regclass), new.id, 'OWNED'::text, new.space_id, ( SELECT spaces.code
           FROM spaces
          WHERE ((spaces.id)::bigint = (new.space_id)::bigint)), new.pers_id_modifier, new.modification_timestamp);
);


--
-- Name: samples sample_update; Type: RULE; Schema: public; Owner: -
--

CREATE RULE sample_update AS
    ON UPDATE TO samples DO INSTEAD  UPDATE samples_all SET code = new.code, frozen = new.frozen, frozen_for_comp = new.frozen_for_comp, frozen_for_children = new.frozen_for_children, frozen_for_parents = new.frozen_for_parents, frozen_for_data = new.frozen_for_data, del_id = new.del_id, orig_del = new.orig_del, expe_id = new.expe_id, expe_frozen = new.expe_frozen, proj_id = new.proj_id, proj_frozen = new.proj_frozen, modification_timestamp = new.modification_timestamp, perm_id = new.perm_id, pers_id_registerer = new.pers_id_registerer, pers_id_modifier = new.pers_id_modifier, registration_timestamp = new.registration_timestamp, samp_id_part_of = new.samp_id_part_of, cont_frozen = new.cont_frozen, saty_id = new.saty_id, space_id = new.space_id, space_frozen = new.space_frozen, version = new.version
  WHERE ((samples_all.id)::bigint = (new.id)::bigint);


--
-- Name: data_all add_data_set_to_experiment_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER add_data_set_to_experiment_check AFTER INSERT ON data_all FOR EACH ROW WHEN (new.expe_frozen) EXECUTE FUNCTION raise_exception_frozen_experiment_relationship('data set');


--
-- Name: data_all add_data_set_to_sample_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER add_data_set_to_sample_check AFTER INSERT ON data_all FOR EACH ROW WHEN (new.samp_frozen) EXECUTE FUNCTION raise_exception_frozen_data_set_sample_relationship();


--
-- Name: experiments_all add_experiment_to_project_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER add_experiment_to_project_check AFTER INSERT ON experiments_all FOR EACH ROW WHEN (new.proj_frozen) EXECUTE FUNCTION raise_exception_frozen_project_relationship('experiment');


--
-- Name: projects add_project_to_space_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER add_project_to_space_check AFTER INSERT ON projects FOR EACH ROW WHEN (new.space_frozen) EXECUTE FUNCTION raise_exception_frozen_space_relationship('project');


--
-- Name: samples_all add_sample_to_container_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER add_sample_to_container_check AFTER INSERT ON samples_all FOR EACH ROW WHEN (new.cont_frozen) EXECUTE FUNCTION raise_exception_frozen_sample_container_relationship();


--
-- Name: samples_all add_sample_to_experiment_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER add_sample_to_experiment_check AFTER INSERT ON samples_all FOR EACH ROW WHEN (new.expe_frozen) EXECUTE FUNCTION raise_exception_frozen_experiment_relationship('sample');


--
-- Name: samples_all add_sample_to_project_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER add_sample_to_project_check AFTER INSERT ON samples_all FOR EACH ROW WHEN (new.proj_frozen) EXECUTE FUNCTION raise_exception_frozen_project_relationship('sample');


--
-- Name: samples_all add_sample_to_space_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER add_sample_to_space_check AFTER INSERT ON samples_all FOR EACH ROW WHEN (new.space_frozen) EXECUTE FUNCTION raise_exception_frozen_space_relationship('sample');


--
-- Name: data_all check_created_or_modified_data_set_owner_is_alive; Type: TRIGGER; Schema: public; Owner: -
--

CREATE CONSTRAINT TRIGGER check_created_or_modified_data_set_owner_is_alive AFTER INSERT OR UPDATE ON data_all DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE FUNCTION check_created_or_modified_data_set_owner_is_alive();


--
-- Name: samples_all check_created_or_modified_sample_owner_is_alive; Type: TRIGGER; Schema: public; Owner: -
--

CREATE CONSTRAINT TRIGGER check_created_or_modified_sample_owner_is_alive AFTER INSERT OR UPDATE ON samples_all DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE FUNCTION check_created_or_modified_sample_owner_is_alive();


--
-- Name: link_data check_data_set_kind_link; Type: TRIGGER; Schema: public; Owner: -
--

CREATE CONSTRAINT TRIGGER check_data_set_kind_link AFTER INSERT OR UPDATE ON link_data DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE FUNCTION check_data_set_kind_link();


--
-- Name: external_data check_data_set_kind_physical; Type: TRIGGER; Schema: public; Owner: -
--

CREATE CONSTRAINT TRIGGER check_data_set_kind_physical AFTER INSERT OR UPDATE ON external_data DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE FUNCTION check_data_set_kind_physical();


--
-- Name: experiments_all check_deletion_consistency_on_experiment_deletion; Type: TRIGGER; Schema: public; Owner: -
--

CREATE CONSTRAINT TRIGGER check_deletion_consistency_on_experiment_deletion AFTER UPDATE ON experiments_all DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE FUNCTION check_deletion_consistency_on_experiment_deletion();


--
-- Name: samples_all check_deletion_consistency_on_sample_deletion; Type: TRIGGER; Schema: public; Owner: -
--

CREATE CONSTRAINT TRIGGER check_deletion_consistency_on_sample_deletion AFTER UPDATE ON samples_all DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE FUNCTION check_deletion_consistency_on_sample_deletion();


--
-- Name: samples_all check_project_is_defined_for_experiment_level_samples; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER check_project_is_defined_for_experiment_level_samples BEFORE INSERT OR UPDATE ON samples_all FOR EACH ROW EXECUTE FUNCTION check_project_is_defined_for_experiment_level_samples();


--
-- Name: content_copies content_copies_location_type_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER content_copies_location_type_check BEFORE INSERT OR UPDATE ON content_copies FOR EACH ROW EXECUTE FUNCTION content_copies_location_type_check();


--
-- Name: content_copies content_copies_uniqueness_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER content_copies_uniqueness_check BEFORE INSERT OR UPDATE ON content_copies FOR EACH ROW EXECUTE FUNCTION content_copies_uniqueness_check();


--
-- Name: property_types controlled_vocabulary_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER controlled_vocabulary_check BEFORE INSERT OR UPDATE ON property_types FOR EACH ROW EXECUTE FUNCTION controlled_vocabulary_check();


--
-- Name: data_all data_all_tsvector_document; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER data_all_tsvector_document BEFORE INSERT OR UPDATE ON data_all FOR EACH ROW EXECUTE FUNCTION data_all_tsvector_document_trigger();


--
-- Name: data_all data_exp_or_sample_link_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER data_exp_or_sample_link_check BEFORE INSERT OR UPDATE ON data_all FOR EACH ROW EXECUTE FUNCTION data_exp_or_sample_link_check();


--
-- Name: data_all data_set_experiment_relationship_frozen_check_on_update; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER data_set_experiment_relationship_frozen_check_on_update BEFORE UPDATE ON data_all FOR EACH ROW WHEN (((((new.expe_id)::bigint <> (old.expe_id)::bigint) OR ((new.expe_id IS NOT NULL) AND (old.expe_id IS NULL)) OR ((new.expe_id IS NULL) AND (old.expe_id IS NOT NULL))) AND (new.expe_frozen OR old.expe_frozen))) EXECUTE FUNCTION raise_exception_frozen_experiment_relationship('data set');


--
-- Name: data_set_properties data_set_frozen_check_on_change_property; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER data_set_frozen_check_on_change_property BEFORE UPDATE ON data_set_properties FOR EACH ROW WHEN ((old.dase_frozen AND new.dase_frozen)) EXECUTE FUNCTION raise_exception_frozen_data_set('PROPERTY');


--
-- Name: data_all data_set_frozen_check_on_delete; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER data_set_frozen_check_on_delete BEFORE DELETE ON data_all FOR EACH ROW WHEN (old.frozen) EXECUTE FUNCTION raise_exception_frozen_entity_by_code('DELETE', 'data set');


--
-- Name: data_set_properties data_set_frozen_check_on_delete_property; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER data_set_frozen_check_on_delete_property BEFORE DELETE ON data_set_properties FOR EACH ROW WHEN (old.dase_frozen) EXECUTE FUNCTION raise_exception_frozen_data_set('PROPERTY');


--
-- Name: data_set_properties data_set_frozen_check_on_insert_property; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER data_set_frozen_check_on_insert_property BEFORE INSERT ON data_set_properties FOR EACH ROW WHEN (new.dase_frozen) EXECUTE FUNCTION raise_exception_frozen_data_set('PROPERTY');


--
-- Name: data_all data_set_frozen_check_on_trash; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER data_set_frozen_check_on_trash BEFORE UPDATE ON data_all FOR EACH ROW WHEN (((new.del_id IS NOT NULL) AND (old.del_id IS NULL) AND old.frozen)) EXECUTE FUNCTION raise_exception_frozen_entity_by_code('TRASH', 'data set');


--
-- Name: data_set_properties data_set_properties_tsvector_document; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER data_set_properties_tsvector_document BEFORE INSERT OR UPDATE ON data_set_properties FOR EACH ROW EXECUTE FUNCTION properties_tsvector_document_trigger();


--
-- Name: data_set_properties data_set_property_with_material_data_type_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER data_set_property_with_material_data_type_check BEFORE INSERT OR UPDATE ON data_set_properties FOR EACH ROW EXECUTE FUNCTION data_set_property_with_material_data_type_check();


--
-- Name: data_set_relationships_all data_set_relationship_frozen_check_on_delete; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER data_set_relationship_frozen_check_on_delete BEFORE DELETE ON data_set_relationships_all FOR EACH ROW WHEN ((old.parent_frozen OR old.child_frozen OR old.cont_frozen OR old.comp_frozen)) EXECUTE FUNCTION raise_exception_frozen_data_set_relationship();


--
-- Name: data_set_relationships_all data_set_relationship_frozen_check_on_insert; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER data_set_relationship_frozen_check_on_insert BEFORE INSERT ON data_set_relationships_all FOR EACH ROW WHEN ((new.parent_frozen OR new.child_frozen OR new.cont_frozen OR new.comp_frozen)) EXECUTE FUNCTION raise_exception_frozen_data_set_relationship();


--
-- Name: data_all data_set_sample_relationship_frozen_check_on_update; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER data_set_sample_relationship_frozen_check_on_update BEFORE UPDATE ON data_all FOR EACH ROW WHEN (((((new.samp_id)::bigint <> (old.samp_id)::bigint) OR ((new.samp_id IS NOT NULL) AND (old.samp_id IS NULL)) OR ((new.samp_id IS NULL) AND (old.samp_id IS NOT NULL))) AND (new.samp_frozen OR old.samp_frozen))) EXECUTE FUNCTION raise_exception_frozen_data_set_sample_relationship();


--
-- Name: data_all delete_data_set_from_experiment_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER delete_data_set_from_experiment_check AFTER DELETE ON data_all FOR EACH ROW WHEN (old.expe_frozen) EXECUTE FUNCTION raise_delete_from_experiment_exception('DATA SET');


--
-- Name: data_all delete_data_set_from_sample_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER delete_data_set_from_sample_check AFTER DELETE ON data_all FOR EACH ROW WHEN (old.samp_frozen) EXECUTE FUNCTION raise_delete_from_sample_exception('DATA SET');


--
-- Name: experiments_all delete_experiment_from_project_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER delete_experiment_from_project_check AFTER DELETE ON experiments_all FOR EACH ROW WHEN (old.proj_frozen) EXECUTE FUNCTION raise_delete_from_project_exception('EXPERIMENT');


--
-- Name: projects delete_project_from_space_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER delete_project_from_space_check AFTER DELETE ON projects FOR EACH ROW WHEN (old.space_frozen) EXECUTE FUNCTION raise_delete_from_space_exception('PROJECT');


--
-- Name: samples_all delete_sample_from_container_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER delete_sample_from_container_check AFTER DELETE ON samples_all FOR EACH ROW WHEN (old.cont_frozen) EXECUTE FUNCTION raise_delete_from_sample_exception('SAMPLE COMPONENT');


--
-- Name: samples_all delete_sample_from_experiment_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER delete_sample_from_experiment_check AFTER DELETE ON samples_all FOR EACH ROW WHEN (old.expe_frozen) EXECUTE FUNCTION raise_delete_from_experiment_exception('SAMPLE');


--
-- Name: samples_all delete_sample_from_project_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER delete_sample_from_project_check AFTER DELETE ON samples_all FOR EACH ROW WHEN (old.proj_frozen) EXECUTE FUNCTION raise_delete_from_project_exception('SAMPLE');


--
-- Name: samples_all delete_sample_from_space_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER delete_sample_from_space_check AFTER DELETE ON samples_all FOR EACH ROW WHEN (old.space_frozen) EXECUTE FUNCTION raise_delete_from_space_exception('SAMPLE');


--
-- Name: experiment_properties experiment_frozen_check_on_change_property; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER experiment_frozen_check_on_change_property BEFORE UPDATE ON experiment_properties FOR EACH ROW WHEN ((old.expe_frozen AND new.expe_frozen)) EXECUTE FUNCTION raise_exception_frozen_experiment('PROPERTY');


--
-- Name: experiments_all experiment_frozen_check_on_delete; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER experiment_frozen_check_on_delete BEFORE DELETE ON experiments_all FOR EACH ROW WHEN (old.frozen) EXECUTE FUNCTION raise_exception_frozen_entity_by_code('DELETE', 'experiment');


--
-- Name: attachments experiment_frozen_check_on_delete_attachment; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER experiment_frozen_check_on_delete_attachment BEFORE DELETE ON attachments FOR EACH ROW WHEN (old.expe_frozen) EXECUTE FUNCTION raise_exception_frozen_experiment('ATTACHMENT');


--
-- Name: experiment_properties experiment_frozen_check_on_delete_property; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER experiment_frozen_check_on_delete_property BEFORE DELETE ON experiment_properties FOR EACH ROW WHEN (old.expe_frozen) EXECUTE FUNCTION raise_exception_frozen_experiment('PROPERTY');


--
-- Name: attachments experiment_frozen_check_on_insert_attachment; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER experiment_frozen_check_on_insert_attachment BEFORE INSERT ON attachments FOR EACH ROW WHEN (new.expe_frozen) EXECUTE FUNCTION raise_exception_frozen_experiment('ATTACHMENT');


--
-- Name: experiment_properties experiment_frozen_check_on_insert_property; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER experiment_frozen_check_on_insert_property BEFORE INSERT ON experiment_properties FOR EACH ROW WHEN (new.expe_frozen) EXECUTE FUNCTION raise_exception_frozen_experiment('PROPERTY');


--
-- Name: experiments_all experiment_frozen_check_on_trash; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER experiment_frozen_check_on_trash BEFORE UPDATE ON experiments_all FOR EACH ROW WHEN (((new.del_id IS NOT NULL) AND (old.del_id IS NULL) AND old.frozen)) EXECUTE FUNCTION raise_exception_frozen_entity_by_code('TRASH', 'experiment');


--
-- Name: attachments experiment_frozen_check_on_update_attachment; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER experiment_frozen_check_on_update_attachment BEFORE UPDATE ON attachments FOR EACH ROW WHEN ((old.expe_frozen AND new.expe_frozen)) EXECUTE FUNCTION raise_exception_frozen_experiment('ATTACHMENT');


--
-- Name: experiments_all experiment_project_relationship_frozen_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER experiment_project_relationship_frozen_check BEFORE UPDATE ON experiments_all FOR EACH ROW WHEN ((((new.proj_id)::bigint <> (old.proj_id)::bigint) AND (new.proj_frozen OR old.proj_frozen))) EXECUTE FUNCTION raise_exception_frozen_project_relationship('experiment');


--
-- Name: experiment_properties experiment_properties_tsvector_document; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER experiment_properties_tsvector_document BEFORE INSERT OR UPDATE ON experiment_properties FOR EACH ROW EXECUTE FUNCTION properties_tsvector_document_trigger();


--
-- Name: experiment_properties experiment_property_with_material_data_type_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER experiment_property_with_material_data_type_check BEFORE INSERT OR UPDATE ON experiment_properties FOR EACH ROW EXECUTE FUNCTION experiment_property_with_material_data_type_check();


--
-- Name: experiments_all experiments_all_tsvector_document; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER experiments_all_tsvector_document BEFORE INSERT OR UPDATE ON experiments_all FOR EACH ROW EXECUTE FUNCTION experiments_all_tsvector_document_trigger();


--
-- Name: external_data external_data_storage_format_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER external_data_storage_format_check BEFORE INSERT OR UPDATE ON external_data FOR EACH ROW EXECUTE FUNCTION external_data_storage_format_check();


--
-- Name: material_properties material_properties_tsvector_document; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER material_properties_tsvector_document BEFORE INSERT OR UPDATE ON material_properties FOR EACH ROW EXECUTE FUNCTION properties_tsvector_document_trigger();


--
-- Name: material_properties material_property_with_material_data_type_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER material_property_with_material_data_type_check BEFORE INSERT OR UPDATE ON material_properties FOR EACH ROW EXECUTE FUNCTION material_property_with_material_data_type_check();


--
-- Name: materials materials_tsvector_document; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER materials_tsvector_document BEFORE INSERT OR UPDATE ON materials FOR EACH ROW EXECUTE FUNCTION materials_tsvector_document_trigger();


--
-- Name: data_all melt_data_set_for; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER melt_data_set_for BEFORE UPDATE ON data_all FOR EACH ROW WHEN (((new.frozen_for_children OR new.frozen_for_parents OR new.frozen_for_comps OR new.frozen_for_conts) AND (NOT new.frozen))) EXECUTE FUNCTION melt_data_set_for();


--
-- Name: experiments_all melt_experiment_for; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER melt_experiment_for BEFORE UPDATE ON experiments_all FOR EACH ROW WHEN (((new.frozen_for_samp OR new.frozen_for_data) AND (NOT new.frozen))) EXECUTE FUNCTION melt_experiment_for();


--
-- Name: projects melt_project_for; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER melt_project_for BEFORE UPDATE ON projects FOR EACH ROW WHEN (((new.frozen_for_exp OR new.frozen_for_samp) AND (NOT new.frozen))) EXECUTE FUNCTION melt_project_for();


--
-- Name: samples_all melt_sample_for; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER melt_sample_for BEFORE UPDATE ON samples_all FOR EACH ROW WHEN (((new.frozen_for_comp OR new.frozen_for_children OR new.frozen_for_parents OR new.frozen_for_data) AND (NOT new.frozen))) EXECUTE FUNCTION melt_sample_for();


--
-- Name: spaces melt_space_for; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER melt_space_for BEFORE UPDATE ON spaces FOR EACH ROW WHEN (((new.frozen_for_proj OR new.frozen_for_samp) AND (NOT new.frozen))) EXECUTE FUNCTION melt_space_for();


--
-- Name: data_set_relationships_all preserve_deletion_consistency_on_data_set_relationships; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER preserve_deletion_consistency_on_data_set_relationships BEFORE UPDATE ON data_set_relationships_all FOR EACH ROW EXECUTE FUNCTION preserve_deletion_consistency_on_data_set_relationships();


--
-- Name: sample_relationships_all preserve_deletion_consistency_on_sample_relationships; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER preserve_deletion_consistency_on_sample_relationships BEFORE UPDATE ON sample_relationships_all FOR EACH ROW EXECUTE FUNCTION preserve_deletion_consistency_on_sample_relationships();


--
-- Name: projects project_frozen_check_on_delete; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER project_frozen_check_on_delete BEFORE DELETE ON projects FOR EACH ROW WHEN (old.frozen) EXECUTE FUNCTION raise_exception_frozen_entity_by_code('DELETE', 'project');


--
-- Name: attachments project_frozen_check_on_delete_attachment; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER project_frozen_check_on_delete_attachment BEFORE DELETE ON attachments FOR EACH ROW WHEN (old.proj_frozen) EXECUTE FUNCTION raise_exception_frozen_project('ATTACHMENT');


--
-- Name: attachments project_frozen_check_on_insert_attachment; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER project_frozen_check_on_insert_attachment BEFORE INSERT ON attachments FOR EACH ROW WHEN (new.proj_frozen) EXECUTE FUNCTION raise_exception_frozen_project('ATTACHMENT');


--
-- Name: projects project_frozen_check_on_update; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER project_frozen_check_on_update BEFORE UPDATE ON projects FOR EACH ROW WHEN ((old.frozen AND new.frozen AND (((old.description)::text <> (new.description)::text) OR ((old.description IS NULL) AND (new.description IS NOT NULL)) OR ((old.description IS NOT NULL) AND (new.description IS NULL))))) EXECUTE FUNCTION raise_exception_frozen_entity_by_code('UPDATE', 'project');


--
-- Name: attachments project_frozen_check_on_update_attachment; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER project_frozen_check_on_update_attachment BEFORE UPDATE ON attachments FOR EACH ROW WHEN ((old.proj_frozen AND new.proj_frozen)) EXECUTE FUNCTION raise_exception_frozen_project('ATTACHMENT');


--
-- Name: projects project_space_relationship_frozen_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER project_space_relationship_frozen_check BEFORE UPDATE ON projects FOR EACH ROW WHEN ((((new.space_id)::bigint <> (old.space_id)::bigint) AND (new.space_frozen OR old.space_frozen))) EXECUTE FUNCTION raise_exception_frozen_space_relationship('project');


--
-- Name: samples_all sample_experiment_relationship_frozen_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_experiment_relationship_frozen_check BEFORE UPDATE ON samples_all FOR EACH ROW WHEN (((((new.expe_id)::bigint <> (old.expe_id)::bigint) OR ((new.expe_id IS NOT NULL) AND (old.expe_id IS NULL)) OR ((new.expe_id IS NULL) AND (old.expe_id IS NOT NULL))) AND (new.expe_frozen OR old.expe_frozen))) EXECUTE FUNCTION raise_exception_frozen_experiment_relationship('sample');


--
-- Name: samples_all sample_fill_code_unique_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_fill_code_unique_check BEFORE INSERT OR UPDATE ON samples_all FOR EACH ROW EXECUTE FUNCTION sample_fill_code_unique_check();


--
-- Name: samples_all sample_fill_subcode_unique_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_fill_subcode_unique_check BEFORE INSERT OR UPDATE ON samples_all FOR EACH ROW EXECUTE FUNCTION sample_fill_subcode_unique_check();


--
-- Name: sample_properties sample_frozen_check_on_change_property; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_frozen_check_on_change_property BEFORE UPDATE ON sample_properties FOR EACH ROW WHEN ((old.samp_frozen AND new.samp_frozen)) EXECUTE FUNCTION raise_exception_frozen_sample('PROPERTY');


--
-- Name: samples_all sample_frozen_check_on_delete; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_frozen_check_on_delete BEFORE DELETE ON samples_all FOR EACH ROW WHEN (old.frozen) EXECUTE FUNCTION raise_exception_frozen_entity_by_code('DELETE', 'sample');


--
-- Name: attachments sample_frozen_check_on_delete_attachment; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_frozen_check_on_delete_attachment BEFORE DELETE ON attachments FOR EACH ROW WHEN (old.samp_frozen) EXECUTE FUNCTION raise_exception_frozen_sample('ATTACHMENT');


--
-- Name: sample_properties sample_frozen_check_on_delete_property; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_frozen_check_on_delete_property BEFORE DELETE ON sample_properties FOR EACH ROW WHEN (old.samp_frozen) EXECUTE FUNCTION raise_exception_frozen_sample('PROPERTY');


--
-- Name: attachments sample_frozen_check_on_insert_attachment; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_frozen_check_on_insert_attachment BEFORE INSERT ON attachments FOR EACH ROW WHEN (new.samp_frozen) EXECUTE FUNCTION raise_exception_frozen_sample('ATTACHMENT');


--
-- Name: sample_properties sample_frozen_check_on_insert_property; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_frozen_check_on_insert_property BEFORE INSERT ON sample_properties FOR EACH ROW WHEN (new.samp_frozen) EXECUTE FUNCTION raise_exception_frozen_sample('PROPERTY');


--
-- Name: samples_all sample_frozen_check_on_set_container; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_frozen_check_on_set_container BEFORE UPDATE ON samples_all FOR EACH ROW WHEN (((((new.samp_id_part_of)::bigint <> (old.samp_id_part_of)::bigint) OR ((new.samp_id_part_of IS NOT NULL) AND (old.samp_id_part_of IS NULL)) OR ((new.samp_id_part_of IS NULL) AND (old.samp_id_part_of IS NOT NULL))) AND (new.cont_frozen OR old.cont_frozen))) EXECUTE FUNCTION raise_exception_frozen_sample_container_relationship();


--
-- Name: samples_all sample_frozen_check_on_trash; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_frozen_check_on_trash BEFORE UPDATE ON samples_all FOR EACH ROW WHEN (((new.del_id IS NOT NULL) AND (old.del_id IS NULL) AND old.frozen)) EXECUTE FUNCTION raise_exception_frozen_entity_by_code('TRASH', 'sample');


--
-- Name: attachments sample_frozen_check_on_update_attachment; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_frozen_check_on_update_attachment BEFORE UPDATE ON attachments FOR EACH ROW WHEN ((old.samp_frozen AND new.samp_frozen)) EXECUTE FUNCTION raise_exception_frozen_sample('ATTACHMENT');


--
-- Name: samples_all sample_project_relationship_frozen_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_project_relationship_frozen_check BEFORE UPDATE ON samples_all FOR EACH ROW WHEN (((((new.proj_id)::bigint <> (old.proj_id)::bigint) OR ((new.proj_id IS NOT NULL) AND (old.proj_id IS NULL)) OR ((new.proj_id IS NULL) AND (old.proj_id IS NOT NULL))) AND (new.proj_frozen OR old.proj_frozen))) EXECUTE FUNCTION raise_exception_frozen_project_relationship('sample');


--
-- Name: sample_properties sample_properties_tsvector_document; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_properties_tsvector_document BEFORE INSERT OR UPDATE ON sample_properties FOR EACH ROW EXECUTE FUNCTION properties_tsvector_document_trigger();


--
-- Name: sample_properties sample_property_with_material_data_type_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_property_with_material_data_type_check BEFORE INSERT OR UPDATE ON sample_properties FOR EACH ROW EXECUTE FUNCTION sample_property_with_material_data_type_check();


--
-- Name: sample_relationships_all sample_relationship_frozen_check_on_delete; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_relationship_frozen_check_on_delete BEFORE DELETE ON sample_relationships_all FOR EACH ROW WHEN ((old.parent_frozen OR old.child_frozen)) EXECUTE FUNCTION raise_exception_frozen_sample_relationship();


--
-- Name: sample_relationships_all sample_relationship_frozen_check_on_insert; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_relationship_frozen_check_on_insert BEFORE INSERT ON sample_relationships_all FOR EACH ROW WHEN ((new.parent_frozen OR new.child_frozen)) EXECUTE FUNCTION raise_exception_frozen_sample_relationship();


--
-- Name: samples_all sample_space_relationship_frozen_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_space_relationship_frozen_check BEFORE UPDATE ON samples_all FOR EACH ROW WHEN (((((new.space_id)::bigint <> (old.space_id)::bigint) OR ((new.space_id IS NOT NULL) AND (old.space_id IS NULL)) OR ((new.space_id IS NULL) AND (old.space_id IS NOT NULL))) AND (new.space_frozen OR old.space_frozen))) EXECUTE FUNCTION raise_exception_frozen_space_relationship('sample');


--
-- Name: sample_types sample_type_fill_subcode_unique_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER sample_type_fill_subcode_unique_check AFTER UPDATE ON sample_types FOR EACH ROW EXECUTE FUNCTION sample_type_fill_subcode_unique_check();


--
-- Name: samples_all samples_all_tsvector_document; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER samples_all_tsvector_document BEFORE INSERT OR UPDATE ON samples_all FOR EACH ROW EXECUTE FUNCTION samples_all_tsvector_document_trigger();


--
-- Name: spaces space_frozen_check_on_delete; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER space_frozen_check_on_delete BEFORE DELETE ON spaces FOR EACH ROW WHEN (old.frozen) EXECUTE FUNCTION raise_exception_frozen_entity_by_code('DELETE', 'space');


--
-- Name: spaces space_frozen_check_on_update; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER space_frozen_check_on_update BEFORE UPDATE ON spaces FOR EACH ROW WHEN ((old.frozen AND new.frozen AND (((old.description)::text <> (new.description)::text) OR ((old.description IS NULL) AND (new.description IS NOT NULL)) OR ((old.description IS NOT NULL) AND (new.description IS NULL))))) EXECUTE FUNCTION raise_exception_frozen_entity_by_code('UPDATE', 'space');


--
-- Name: data_set_relationships_all trash_data_set_from_child_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trash_data_set_from_child_check AFTER UPDATE ON data_set_relationships_all FOR EACH ROW WHEN (((new.del_id IS NOT NULL) AND (old.del_id IS NULL) AND old.child_frozen)) EXECUTE FUNCTION raise_delete_from_data_set_exception('DATA SET PARENT');


--
-- Name: data_set_relationships_all trash_data_set_from_component_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trash_data_set_from_component_check AFTER UPDATE ON data_set_relationships_all FOR EACH ROW WHEN (((new.del_id IS NOT NULL) AND (old.del_id IS NULL) AND old.comp_frozen)) EXECUTE FUNCTION raise_delete_from_data_set_exception('DATA SET CONTAINER');


--
-- Name: data_set_relationships_all trash_data_set_from_container_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trash_data_set_from_container_check AFTER UPDATE ON data_set_relationships_all FOR EACH ROW WHEN (((new.del_id IS NOT NULL) AND (old.del_id IS NULL) AND old.cont_frozen)) EXECUTE FUNCTION raise_delete_from_data_set_exception('DATA SET COMPONENT');


--
-- Name: data_all trash_data_set_from_experiment_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trash_data_set_from_experiment_check AFTER UPDATE ON data_all FOR EACH ROW WHEN (((new.del_id IS NOT NULL) AND (old.del_id IS NULL) AND old.expe_frozen)) EXECUTE FUNCTION raise_delete_from_experiment_exception('DATA SET');


--
-- Name: data_set_relationships_all trash_data_set_from_parent_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trash_data_set_from_parent_check AFTER UPDATE ON data_set_relationships_all FOR EACH ROW WHEN (((new.del_id IS NOT NULL) AND (old.del_id IS NULL) AND old.parent_frozen)) EXECUTE FUNCTION raise_delete_from_data_set_exception('DATA SET CHILD');


--
-- Name: data_all trash_data_set_from_sample_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trash_data_set_from_sample_check AFTER UPDATE ON data_all FOR EACH ROW WHEN (((new.del_id IS NOT NULL) AND (old.del_id IS NULL) AND old.samp_frozen)) EXECUTE FUNCTION raise_delete_from_sample_exception('DATA SET');


--
-- Name: experiments_all trash_experiment_from_project_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trash_experiment_from_project_check AFTER UPDATE ON experiments_all FOR EACH ROW WHEN (((new.del_id IS NOT NULL) AND (old.del_id IS NULL) AND old.proj_frozen)) EXECUTE FUNCTION raise_delete_from_project_exception('EXPERIMENT');


--
-- Name: sample_relationships_all trash_sample_from_child_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trash_sample_from_child_check AFTER UPDATE ON sample_relationships_all FOR EACH ROW WHEN (((new.del_id IS NOT NULL) AND (old.del_id IS NULL) AND old.child_frozen)) EXECUTE FUNCTION raise_delete_from_sample_exception('SAMPLE PARENT');


--
-- Name: samples_all trash_sample_from_container_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trash_sample_from_container_check AFTER UPDATE ON samples_all FOR EACH ROW WHEN (((new.del_id IS NOT NULL) AND (old.del_id IS NULL) AND old.cont_frozen)) EXECUTE FUNCTION raise_delete_from_sample_exception('SAMPLE COMPONENT');


--
-- Name: samples_all trash_sample_from_experiment_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trash_sample_from_experiment_check AFTER UPDATE ON samples_all FOR EACH ROW WHEN (((new.del_id IS NOT NULL) AND (old.del_id IS NULL) AND old.expe_frozen)) EXECUTE FUNCTION raise_delete_from_experiment_exception('SAMPLE');


--
-- Name: sample_relationships_all trash_sample_from_parent_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trash_sample_from_parent_check AFTER UPDATE ON sample_relationships_all FOR EACH ROW WHEN (((new.del_id IS NOT NULL) AND (old.del_id IS NULL) AND old.parent_frozen)) EXECUTE FUNCTION raise_delete_from_sample_exception('SAMPLE CHILD');


--
-- Name: samples_all trash_sample_from_project_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trash_sample_from_project_check AFTER UPDATE ON samples_all FOR EACH ROW WHEN (((new.del_id IS NOT NULL) AND (old.del_id IS NULL) AND old.proj_frozen)) EXECUTE FUNCTION raise_delete_from_project_exception('SAMPLE');


--
-- Name: samples_all trash_sample_from_space_check; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trash_sample_from_space_check AFTER UPDATE ON samples_all FOR EACH ROW WHEN (((new.del_id IS NOT NULL) AND (old.del_id IS NULL) AND old.space_frozen)) EXECUTE FUNCTION raise_delete_from_space_exception('SAMPLE');


--
-- Name: authorization_groups ag_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY authorization_groups
    ADD CONSTRAINT ag_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: authorization_group_persons agp_ag_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY authorization_group_persons
    ADD CONSTRAINT agp_ag_fk FOREIGN KEY (ag_id) REFERENCES authorization_groups(id);


--
-- Name: authorization_group_persons agp_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY authorization_group_persons
    ADD CONSTRAINT agp_pers_fk FOREIGN KEY (pers_id) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: attachments atta_cont_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY attachments
    ADD CONSTRAINT atta_cont_fk FOREIGN KEY (exac_id) REFERENCES attachment_contents(id);


--
-- Name: attachments atta_expe_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY attachments
    ADD CONSTRAINT atta_expe_fk FOREIGN KEY (expe_id, expe_frozen) REFERENCES experiments_all(id, frozen) ON UPDATE CASCADE;


--
-- Name: attachments atta_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY attachments
    ADD CONSTRAINT atta_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: attachments atta_proj_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY attachments
    ADD CONSTRAINT atta_proj_fk FOREIGN KEY (proj_id, proj_frozen) REFERENCES projects(id, frozen) ON UPDATE CASCADE;


--
-- Name: attachments atta_samp_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY attachments
    ADD CONSTRAINT atta_samp_fk FOREIGN KEY (samp_id, samp_frozen) REFERENCES samples_all(id, frozen) ON UPDATE CASCADE;


--
-- Name: content_copies coco_data_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY content_copies
    ADD CONSTRAINT coco_data_fk FOREIGN KEY (data_id, data_frozen) REFERENCES link_data(id, data_frozen) ON UPDATE CASCADE;


--
-- Name: content_copies coco_edms_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY content_copies
    ADD CONSTRAINT coco_edms_fk FOREIGN KEY (edms_id) REFERENCES external_data_management_systems(id);


--
-- Name: controlled_vocabularies covo_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY controlled_vocabularies
    ADD CONSTRAINT covo_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: controlled_vocabulary_terms cvte_covo_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY controlled_vocabulary_terms
    ADD CONSTRAINT cvte_covo_fk FOREIGN KEY (covo_id) REFERENCES controlled_vocabularies(id);


--
-- Name: controlled_vocabulary_terms cvte_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY controlled_vocabulary_terms
    ADD CONSTRAINT cvte_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: data_all data_dast_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_all
    ADD CONSTRAINT data_dast_fk FOREIGN KEY (dast_id) REFERENCES data_stores(id);


--
-- Name: data_all data_del_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_all
    ADD CONSTRAINT data_del_fk FOREIGN KEY (del_id) REFERENCES deletions(id);


--
-- Name: data_all data_dsty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_all
    ADD CONSTRAINT data_dsty_fk FOREIGN KEY (dsty_id) REFERENCES data_set_types(id);


--
-- Name: data_all data_expe_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_all
    ADD CONSTRAINT data_expe_fk FOREIGN KEY (expe_id, expe_frozen) REFERENCES experiments_all(id, frozen_for_data) ON UPDATE CASCADE;


--
-- Name: data_all data_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_all
    ADD CONSTRAINT data_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: data_all data_pers_fk_mod; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_all
    ADD CONSTRAINT data_pers_fk_mod FOREIGN KEY (pers_id_modifier) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: data_all data_samp_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_all
    ADD CONSTRAINT data_samp_fk FOREIGN KEY (samp_id, samp_frozen) REFERENCES samples_all(id, frozen_for_data) ON UPDATE CASCADE;


--
-- Name: data_set_relationships_all data_set_relationships_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_relationships_all
    ADD CONSTRAINT data_set_relationships_pers_fk FOREIGN KEY (pers_id_author) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: data_set_relationships_history datarelh_data_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_relationships_history
    ADD CONSTRAINT datarelh_data_fk FOREIGN KEY (data_id) REFERENCES data_all(id) ON DELETE SET NULL;


--
-- Name: data_set_relationships_history datarelh_expe_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_relationships_history
    ADD CONSTRAINT datarelh_expe_fk FOREIGN KEY (expe_id) REFERENCES experiments_all(id) ON DELETE SET NULL;


--
-- Name: data_set_relationships_history datarelh_main_data_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_relationships_history
    ADD CONSTRAINT datarelh_main_data_fk FOREIGN KEY (main_data_id) REFERENCES data_all(id) ON DELETE CASCADE;


--
-- Name: data_set_relationships_history datarelh_samp_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_relationships_history
    ADD CONSTRAINT datarelh_samp_fk FOREIGN KEY (samp_id) REFERENCES samples_all(id) ON DELETE SET NULL;


--
-- Name: deletions del_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY deletions
    ADD CONSTRAINT del_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: data_set_properties dspr_cvte_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_properties
    ADD CONSTRAINT dspr_cvte_fk FOREIGN KEY (cvte_id) REFERENCES controlled_vocabulary_terms(id);


--
-- Name: data_set_properties dspr_ds_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_properties
    ADD CONSTRAINT dspr_ds_fk FOREIGN KEY (ds_id, dase_frozen) REFERENCES data_all(id, frozen) ON UPDATE CASCADE;


--
-- Name: data_set_properties dspr_dstpt_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_properties
    ADD CONSTRAINT dspr_dstpt_fk FOREIGN KEY (dstpt_id) REFERENCES data_set_type_property_types(id) ON DELETE CASCADE;


--
-- Name: data_set_properties dspr_mapr_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_properties
    ADD CONSTRAINT dspr_mapr_fk FOREIGN KEY (mate_prop_id) REFERENCES materials(id);


--
-- Name: data_set_properties dspr_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_properties
    ADD CONSTRAINT dspr_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: data_set_properties_history dsprh_ds_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_properties_history
    ADD CONSTRAINT dsprh_ds_fk FOREIGN KEY (ds_id) REFERENCES data_all(id) ON DELETE CASCADE;


--
-- Name: data_set_properties_history dsprh_dstpt_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_properties_history
    ADD CONSTRAINT dsprh_dstpt_fk FOREIGN KEY (dstpt_id) REFERENCES data_set_type_property_types(id) ON DELETE CASCADE;


--
-- Name: data_set_relationships_all dsre_data_fk_child; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_relationships_all
    ADD CONSTRAINT dsre_data_fk_child FOREIGN KEY (data_id_child, child_frozen) REFERENCES data_all(id, frozen_for_parents) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: data_set_relationships_all dsre_data_fk_comp; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_relationships_all
    ADD CONSTRAINT dsre_data_fk_comp FOREIGN KEY (data_id_child, comp_frozen) REFERENCES data_all(id, frozen_for_conts) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: data_set_relationships_all dsre_data_fk_cont; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_relationships_all
    ADD CONSTRAINT dsre_data_fk_cont FOREIGN KEY (data_id_parent, cont_frozen) REFERENCES data_all(id, frozen_for_comps) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: data_set_relationships_all dsre_data_fk_parent; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_relationships_all
    ADD CONSTRAINT dsre_data_fk_parent FOREIGN KEY (data_id_parent, parent_frozen) REFERENCES data_all(id, frozen_for_children) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: data_set_relationships_all dsre_data_fk_relationship; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_relationships_all
    ADD CONSTRAINT dsre_data_fk_relationship FOREIGN KEY (relationship_id) REFERENCES relationship_types(id);


--
-- Name: data_set_relationships_all dsre_del_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_relationships_all
    ADD CONSTRAINT dsre_del_fk FOREIGN KEY (del_id) REFERENCES deletions(id);


--
-- Name: data_store_service_data_set_types dssdst_ds_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_store_service_data_set_types
    ADD CONSTRAINT dssdst_ds_fk FOREIGN KEY (data_store_service_id) REFERENCES data_store_services(id) ON DELETE CASCADE;


--
-- Name: data_store_service_data_set_types dssdst_dst_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_store_service_data_set_types
    ADD CONSTRAINT dssdst_dst_fk FOREIGN KEY (data_set_type_id) REFERENCES data_set_types(id) ON DELETE CASCADE;


--
-- Name: data_store_services dsse_ds_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_store_services
    ADD CONSTRAINT dsse_ds_fk FOREIGN KEY (data_store_id) REFERENCES data_stores(id) ON DELETE CASCADE;


--
-- Name: data_set_type_property_types dstpt_dsty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_type_property_types
    ADD CONSTRAINT dstpt_dsty_fk FOREIGN KEY (dsty_id) REFERENCES data_set_types(id) ON DELETE CASCADE;


--
-- Name: data_set_type_property_types dstpt_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_type_property_types
    ADD CONSTRAINT dstpt_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: data_set_type_property_types dstpt_prty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_type_property_types
    ADD CONSTRAINT dstpt_prty_fk FOREIGN KEY (prty_id) REFERENCES property_types(id) ON DELETE CASCADE;


--
-- Name: data_set_type_property_types dstpt_script_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_type_property_types
    ADD CONSTRAINT dstpt_script_fk FOREIGN KEY (script_id) REFERENCES scripts(id);


--
-- Name: data_set_types dsty_script_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY data_set_types
    ADD CONSTRAINT dsty_script_fk FOREIGN KEY (validation_script_id) REFERENCES scripts(id);


--
-- Name: experiment_type_property_types etpt_exty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_type_property_types
    ADD CONSTRAINT etpt_exty_fk FOREIGN KEY (exty_id) REFERENCES experiment_types(id) ON DELETE CASCADE;


--
-- Name: experiment_type_property_types etpt_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_type_property_types
    ADD CONSTRAINT etpt_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: experiment_type_property_types etpt_prty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_type_property_types
    ADD CONSTRAINT etpt_prty_fk FOREIGN KEY (prty_id) REFERENCES property_types(id) ON DELETE CASCADE;


--
-- Name: experiment_type_property_types etpt_script_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_type_property_types
    ADD CONSTRAINT etpt_script_fk FOREIGN KEY (script_id) REFERENCES scripts(id);


--
-- Name: events evnt_exac_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY events
    ADD CONSTRAINT evnt_exac_fk FOREIGN KEY (exac_id) REFERENCES attachment_contents(id);


--
-- Name: events evnt_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY events
    ADD CONSTRAINT evnt_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: external_data exda_cvte_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY external_data
    ADD CONSTRAINT exda_cvte_fk FOREIGN KEY (cvte_id_stor_fmt) REFERENCES controlled_vocabulary_terms(id);


--
-- Name: external_data exda_cvte_stored_on_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY external_data
    ADD CONSTRAINT exda_cvte_stored_on_fk FOREIGN KEY (cvte_id_store) REFERENCES controlled_vocabulary_terms(id);


--
-- Name: external_data exda_data_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY external_data
    ADD CONSTRAINT exda_data_fk FOREIGN KEY (id) REFERENCES data_all(id);


--
-- Name: external_data exda_ffty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY external_data
    ADD CONSTRAINT exda_ffty_fk FOREIGN KEY (ffty_id) REFERENCES file_format_types(id);


--
-- Name: external_data exda_loty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY external_data
    ADD CONSTRAINT exda_loty_fk FOREIGN KEY (loty_id) REFERENCES locator_types(id);


--
-- Name: experiments_all expe_del_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiments_all
    ADD CONSTRAINT expe_del_fk FOREIGN KEY (del_id) REFERENCES deletions(id);


--
-- Name: experiments_all expe_exty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiments_all
    ADD CONSTRAINT expe_exty_fk FOREIGN KEY (exty_id) REFERENCES experiment_types(id);


--
-- Name: experiments_all expe_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiments_all
    ADD CONSTRAINT expe_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: experiments_all expe_pers_fk_mod; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiments_all
    ADD CONSTRAINT expe_pers_fk_mod FOREIGN KEY (pers_id_modifier) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: experiments_all expe_proj_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiments_all
    ADD CONSTRAINT expe_proj_fk FOREIGN KEY (proj_id, proj_frozen) REFERENCES projects(id, frozen_for_exp) ON UPDATE CASCADE;


--
-- Name: experiment_properties expr_cvte_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_properties
    ADD CONSTRAINT expr_cvte_fk FOREIGN KEY (cvte_id) REFERENCES controlled_vocabulary_terms(id);


--
-- Name: experiment_properties expr_etpt_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_properties
    ADD CONSTRAINT expr_etpt_fk FOREIGN KEY (etpt_id) REFERENCES experiment_type_property_types(id) ON DELETE CASCADE;


--
-- Name: experiment_properties expr_expe_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_properties
    ADD CONSTRAINT expr_expe_fk FOREIGN KEY (expe_id, expe_frozen) REFERENCES experiments_all(id, frozen) ON UPDATE CASCADE;


--
-- Name: experiment_properties expr_mapr_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_properties
    ADD CONSTRAINT expr_mapr_fk FOREIGN KEY (mate_prop_id) REFERENCES materials(id);


--
-- Name: experiment_properties expr_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_properties
    ADD CONSTRAINT expr_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: experiment_properties_history exprh_etpt_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_properties_history
    ADD CONSTRAINT exprh_etpt_fk FOREIGN KEY (etpt_id) REFERENCES experiment_type_property_types(id) ON DELETE CASCADE;


--
-- Name: experiment_properties_history exprh_expe_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_properties_history
    ADD CONSTRAINT exprh_expe_fk FOREIGN KEY (expe_id) REFERENCES experiments_all(id) ON DELETE CASCADE;


--
-- Name: experiment_relationships_history exrelh_data_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_relationships_history
    ADD CONSTRAINT exrelh_data_fk FOREIGN KEY (data_id) REFERENCES data_all(id) ON DELETE SET NULL;


--
-- Name: experiment_relationships_history exrelh_main_expe_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_relationships_history
    ADD CONSTRAINT exrelh_main_expe_fk FOREIGN KEY (main_expe_id) REFERENCES experiments_all(id) ON DELETE CASCADE;


--
-- Name: experiment_relationships_history exrelh_proj_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_relationships_history
    ADD CONSTRAINT exrelh_proj_fk FOREIGN KEY (proj_id) REFERENCES projects(id) ON DELETE SET NULL;


--
-- Name: experiment_relationships_history exrelh_samp_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_relationships_history
    ADD CONSTRAINT exrelh_samp_fk FOREIGN KEY (samp_id) REFERENCES samples_all(id) ON DELETE SET NULL;


--
-- Name: experiment_types exty_script_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY experiment_types
    ADD CONSTRAINT exty_script_fk FOREIGN KEY (validation_script_id) REFERENCES scripts(id);


--
-- Name: filters filt_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY filters
    ADD CONSTRAINT filt_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: grid_custom_columns grid_custom_columns_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY grid_custom_columns
    ADD CONSTRAINT grid_custom_columns_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: link_data lnda_data_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY link_data
    ADD CONSTRAINT lnda_data_fk FOREIGN KEY (id, data_frozen) REFERENCES data_all(id, frozen) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: material_properties mapr_cvte_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_properties
    ADD CONSTRAINT mapr_cvte_fk FOREIGN KEY (cvte_id) REFERENCES controlled_vocabulary_terms(id);


--
-- Name: material_properties mapr_mapr_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_properties
    ADD CONSTRAINT mapr_mapr_fk FOREIGN KEY (mate_prop_id) REFERENCES materials(id);


--
-- Name: material_properties mapr_mate_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_properties
    ADD CONSTRAINT mapr_mate_fk FOREIGN KEY (mate_id) REFERENCES materials(id);


--
-- Name: material_properties mapr_mtpt_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_properties
    ADD CONSTRAINT mapr_mtpt_fk FOREIGN KEY (mtpt_id) REFERENCES material_type_property_types(id) ON DELETE CASCADE;


--
-- Name: material_properties mapr_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_properties
    ADD CONSTRAINT mapr_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: material_properties_history maprh_mate_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_properties_history
    ADD CONSTRAINT maprh_mate_fk FOREIGN KEY (mate_id) REFERENCES materials(id) ON DELETE CASCADE;


--
-- Name: material_properties_history maprh_mtpt_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_properties_history
    ADD CONSTRAINT maprh_mtpt_fk FOREIGN KEY (mtpt_id) REFERENCES material_type_property_types(id) ON DELETE CASCADE;


--
-- Name: materials mate_maty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY materials
    ADD CONSTRAINT mate_maty_fk FOREIGN KEY (maty_id) REFERENCES material_types(id);


--
-- Name: materials mate_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY materials
    ADD CONSTRAINT mate_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: material_types maty_script_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_types
    ADD CONSTRAINT maty_script_fk FOREIGN KEY (validation_script_id) REFERENCES scripts(id);


--
-- Name: metaproject_assignments_all metaproject_assignments_all_data_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY metaproject_assignments_all
    ADD CONSTRAINT metaproject_assignments_all_data_id_fk FOREIGN KEY (data_id) REFERENCES data_all(id) ON DELETE CASCADE;


--
-- Name: metaproject_assignments_all metaproject_assignments_all_del_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY metaproject_assignments_all
    ADD CONSTRAINT metaproject_assignments_all_del_id_fk FOREIGN KEY (del_id) REFERENCES deletions(id);


--
-- Name: metaproject_assignments_all metaproject_assignments_all_expe_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY metaproject_assignments_all
    ADD CONSTRAINT metaproject_assignments_all_expe_id_fk FOREIGN KEY (expe_id) REFERENCES experiments_all(id) ON DELETE CASCADE;


--
-- Name: metaproject_assignments_all metaproject_assignments_all_mate_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY metaproject_assignments_all
    ADD CONSTRAINT metaproject_assignments_all_mate_id_fk FOREIGN KEY (mate_id) REFERENCES materials(id) ON DELETE CASCADE;


--
-- Name: metaproject_assignments_all metaproject_assignments_all_mepr_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY metaproject_assignments_all
    ADD CONSTRAINT metaproject_assignments_all_mepr_id_fk FOREIGN KEY (mepr_id) REFERENCES metaprojects(id) ON DELETE CASCADE;


--
-- Name: metaproject_assignments_all metaproject_assignments_all_samp_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY metaproject_assignments_all
    ADD CONSTRAINT metaproject_assignments_all_samp_id_fk FOREIGN KEY (samp_id) REFERENCES samples_all(id) ON DELETE CASCADE;


--
-- Name: metaprojects metaprojects_owner_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY metaprojects
    ADD CONSTRAINT metaprojects_owner_fk FOREIGN KEY (owner) REFERENCES persons(id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: material_type_property_types mtpt_maty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_type_property_types
    ADD CONSTRAINT mtpt_maty_fk FOREIGN KEY (maty_id) REFERENCES material_types(id) ON DELETE CASCADE;


--
-- Name: material_type_property_types mtpt_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_type_property_types
    ADD CONSTRAINT mtpt_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: material_type_property_types mtpt_prty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_type_property_types
    ADD CONSTRAINT mtpt_prty_fk FOREIGN KEY (prty_id) REFERENCES property_types(id) ON DELETE CASCADE;


--
-- Name: material_type_property_types mtpt_script_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY material_type_property_types
    ADD CONSTRAINT mtpt_script_fk FOREIGN KEY (script_id) REFERENCES scripts(id);


--
-- Name: operation_executions operation_executions_owner_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY operation_executions
    ADD CONSTRAINT operation_executions_owner_fk FOREIGN KEY (owner) REFERENCES persons(id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: persons pers_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY persons
    ADD CONSTRAINT pers_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: persons pers_space_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY persons
    ADD CONSTRAINT pers_space_fk FOREIGN KEY (space_id) REFERENCES spaces(id) ON DELETE SET NULL;


--
-- Name: post_registration_dataset_queue prdq_ds_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY post_registration_dataset_queue
    ADD CONSTRAINT prdq_ds_fk FOREIGN KEY (ds_id) REFERENCES data_all(id) ON DELETE CASCADE;


--
-- Name: projects proj_pers_fk_leader; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT proj_pers_fk_leader FOREIGN KEY (pers_id_leader) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: projects proj_pers_fk_mod; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT proj_pers_fk_mod FOREIGN KEY (pers_id_modifier) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: projects proj_pers_fk_registerer; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT proj_pers_fk_registerer FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: projects proj_space_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT proj_space_fk FOREIGN KEY (space_id, space_frozen) REFERENCES spaces(id, frozen_for_proj) ON UPDATE CASCADE;


--
-- Name: project_relationships_history prrelh_expe_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_relationships_history
    ADD CONSTRAINT prrelh_expe_fk FOREIGN KEY (expe_id) REFERENCES experiments_all(id) ON DELETE SET NULL;


--
-- Name: project_relationships_history prrelh_main_proj_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_relationships_history
    ADD CONSTRAINT prrelh_main_proj_fk FOREIGN KEY (main_proj_id) REFERENCES projects(id) ON DELETE CASCADE;


--
-- Name: project_relationships_history prrelh_space_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_relationships_history
    ADD CONSTRAINT prrelh_space_fk FOREIGN KEY (space_id) REFERENCES spaces(id) ON DELETE SET NULL;


--
-- Name: property_types prty_covo_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY property_types
    ADD CONSTRAINT prty_covo_fk FOREIGN KEY (covo_id) REFERENCES controlled_vocabularies(id);


--
-- Name: property_types prty_daty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY property_types
    ADD CONSTRAINT prty_daty_fk FOREIGN KEY (daty_id) REFERENCES data_types(id);


--
-- Name: property_types prty_maty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY property_types
    ADD CONSTRAINT prty_maty_fk FOREIGN KEY (maty_prop_id) REFERENCES material_types(id) ON DELETE CASCADE;


--
-- Name: property_types prty_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY property_types
    ADD CONSTRAINT prty_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: property_types prty_saty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY property_types
    ADD CONSTRAINT prty_saty_fk FOREIGN KEY (saty_prop_id) REFERENCES sample_types(id) ON DELETE CASCADE;


--
-- Name: queries quer_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY queries
    ADD CONSTRAINT quer_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: role_assignments roas_ag_fk_grantee; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY role_assignments
    ADD CONSTRAINT roas_ag_fk_grantee FOREIGN KEY (ag_id_grantee) REFERENCES authorization_groups(id) ON DELETE CASCADE;


--
-- Name: role_assignments roas_pers_fk_grantee; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY role_assignments
    ADD CONSTRAINT roas_pers_fk_grantee FOREIGN KEY (pers_id_grantee) REFERENCES persons(id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: role_assignments roas_pers_fk_registerer; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY role_assignments
    ADD CONSTRAINT roas_pers_fk_registerer FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: role_assignments roas_project_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY role_assignments
    ADD CONSTRAINT roas_project_fk FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE;


--
-- Name: role_assignments roas_space_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY role_assignments
    ADD CONSTRAINT roas_space_fk FOREIGN KEY (space_id) REFERENCES spaces(id) ON DELETE CASCADE;


--
-- Name: samples_all samp_del_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_del_fk FOREIGN KEY (del_id) REFERENCES deletions(id);


--
-- Name: samples_all samp_expe_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_expe_fk FOREIGN KEY (expe_id, expe_frozen) REFERENCES experiments_all(id, frozen_for_samp) ON UPDATE CASCADE;


--
-- Name: samples_all samp_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: samples_all samp_pers_fk_mod; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_pers_fk_mod FOREIGN KEY (pers_id_modifier) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: samples_all samp_proj_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_proj_fk FOREIGN KEY (proj_id, proj_frozen) REFERENCES projects(id, frozen_for_samp) ON UPDATE CASCADE;


--
-- Name: samples_all samp_samp_fk_part_of; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_samp_fk_part_of FOREIGN KEY (samp_id_part_of, cont_frozen) REFERENCES samples_all(id, frozen_for_comp) ON UPDATE CASCADE;


--
-- Name: samples_all samp_saty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_saty_fk FOREIGN KEY (saty_id) REFERENCES sample_types(id);


--
-- Name: samples_all samp_space_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY samples_all
    ADD CONSTRAINT samp_space_fk FOREIGN KEY (space_id, space_frozen) REFERENCES spaces(id, frozen_for_samp) ON UPDATE CASCADE;


--
-- Name: sample_relationships_all sample_relationships_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_relationships_all
    ADD CONSTRAINT sample_relationships_pers_fk FOREIGN KEY (pers_id_author) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sample_relationships_history samprelh_data_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_relationships_history
    ADD CONSTRAINT samprelh_data_fk FOREIGN KEY (data_id) REFERENCES data_all(id) ON DELETE SET NULL;


--
-- Name: sample_relationships_history samprelh_expe_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_relationships_history
    ADD CONSTRAINT samprelh_expe_fk FOREIGN KEY (expe_id) REFERENCES experiments_all(id) ON DELETE SET NULL;


--
-- Name: sample_relationships_history samprelh_main_samp_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_relationships_history
    ADD CONSTRAINT samprelh_main_samp_fk FOREIGN KEY (main_samp_id) REFERENCES samples_all(id) ON DELETE CASCADE;


--
-- Name: sample_relationships_history samprelh_project_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_relationships_history
    ADD CONSTRAINT samprelh_project_fk FOREIGN KEY (proj_id) REFERENCES projects(id) ON DELETE SET NULL;


--
-- Name: sample_relationships_history samprelh_samp_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_relationships_history
    ADD CONSTRAINT samprelh_samp_fk FOREIGN KEY (samp_id) REFERENCES samples_all(id) ON DELETE SET NULL;


--
-- Name: sample_relationships_history samprelh_space_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_relationships_history
    ADD CONSTRAINT samprelh_space_fk FOREIGN KEY (space_id) REFERENCES spaces(id) ON DELETE SET NULL;


--
-- Name: sample_properties sapr_cvte_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_properties
    ADD CONSTRAINT sapr_cvte_fk FOREIGN KEY (cvte_id) REFERENCES controlled_vocabulary_terms(id);


--
-- Name: sample_properties sapr_mapr_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_properties
    ADD CONSTRAINT sapr_mapr_fk FOREIGN KEY (mate_prop_id) REFERENCES materials(id);


--
-- Name: sample_properties sapr_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_properties
    ADD CONSTRAINT sapr_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sample_properties sapr_samp_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_properties
    ADD CONSTRAINT sapr_samp_fk FOREIGN KEY (samp_id, samp_frozen) REFERENCES samples_all(id, frozen) ON UPDATE CASCADE;


--
-- Name: sample_properties sapr_stpt_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_properties
    ADD CONSTRAINT sapr_stpt_fk FOREIGN KEY (stpt_id) REFERENCES sample_type_property_types(id) ON DELETE CASCADE;


--
-- Name: sample_properties_history saprh_samp_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_properties_history
    ADD CONSTRAINT saprh_samp_fk FOREIGN KEY (samp_id) REFERENCES samples_all(id) ON DELETE CASCADE;


--
-- Name: sample_properties_history saprh_stpt_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_properties_history
    ADD CONSTRAINT saprh_stpt_fk FOREIGN KEY (stpt_id) REFERENCES sample_type_property_types(id) ON DELETE CASCADE;


--
-- Name: sample_relationships_all sare_data_fk_child; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_relationships_all
    ADD CONSTRAINT sare_data_fk_child FOREIGN KEY (sample_id_child, child_frozen) REFERENCES samples_all(id, frozen_for_parents) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: sample_relationships_all sare_data_fk_parent; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_relationships_all
    ADD CONSTRAINT sare_data_fk_parent FOREIGN KEY (sample_id_parent, parent_frozen) REFERENCES samples_all(id, frozen_for_children) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: sample_relationships_all sare_data_fk_relationship; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_relationships_all
    ADD CONSTRAINT sare_data_fk_relationship FOREIGN KEY (relationship_id) REFERENCES relationship_types(id);


--
-- Name: sample_relationships_all sare_del_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_relationships_all
    ADD CONSTRAINT sare_del_fk FOREIGN KEY (del_id) REFERENCES deletions(id);


--
-- Name: sample_types saty_script_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_types
    ADD CONSTRAINT saty_script_fk FOREIGN KEY (validation_script_id) REFERENCES scripts(id);


--
-- Name: scripts scri_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY scripts
    ADD CONSTRAINT scri_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: semantic_annotations semantic_annotations_prty_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY semantic_annotations
    ADD CONSTRAINT semantic_annotations_prty_id_fk FOREIGN KEY (prty_id) REFERENCES property_types(id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: semantic_annotations semantic_annotations_saty_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY semantic_annotations
    ADD CONSTRAINT semantic_annotations_saty_id_fk FOREIGN KEY (saty_id) REFERENCES sample_types(id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: semantic_annotations semantic_annotations_stpt_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY semantic_annotations
    ADD CONSTRAINT semantic_annotations_stpt_id_fk FOREIGN KEY (stpt_id) REFERENCES sample_type_property_types(id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: spaces space_pers_fk_registerer; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY spaces
    ADD CONSTRAINT space_pers_fk_registerer FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sample_type_property_types stpt_pers_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_type_property_types
    ADD CONSTRAINT stpt_pers_fk FOREIGN KEY (pers_id_registerer) REFERENCES persons(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sample_type_property_types stpt_prty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_type_property_types
    ADD CONSTRAINT stpt_prty_fk FOREIGN KEY (prty_id) REFERENCES property_types(id) ON DELETE CASCADE;


--
-- Name: sample_type_property_types stpt_saty_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_type_property_types
    ADD CONSTRAINT stpt_saty_fk FOREIGN KEY (saty_id) REFERENCES sample_types(id) ON DELETE CASCADE;


--
-- Name: sample_type_property_types stpt_script_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sample_type_property_types
    ADD CONSTRAINT stpt_script_fk FOREIGN KEY (script_id) REFERENCES scripts(id);


--
-- Name: SEQUENCE attachment_content_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE attachment_content_id_seq TO openbis_readonly;


--
-- Name: TABLE attachment_contents; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE attachment_contents TO openbis_readonly;


--
-- Name: SEQUENCE attachment_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE attachment_id_seq TO openbis_readonly;


--
-- Name: TABLE attachments; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE attachments TO openbis_readonly;


--
-- Name: SEQUENCE authorization_group_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE authorization_group_id_seq TO openbis_readonly;


--
-- Name: TABLE authorization_group_persons; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE authorization_group_persons TO openbis_readonly;


--
-- Name: TABLE authorization_groups; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE authorization_groups TO openbis_readonly;


--
-- Name: SEQUENCE code_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE code_seq TO openbis_readonly;


--
-- Name: TABLE controlled_vocabularies; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE controlled_vocabularies TO openbis_readonly;


--
-- Name: SEQUENCE controlled_vocabulary_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE controlled_vocabulary_id_seq TO openbis_readonly;


--
-- Name: TABLE controlled_vocabulary_terms; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE controlled_vocabulary_terms TO openbis_readonly;


--
-- Name: SEQUENCE core_plugin_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE core_plugin_id_seq TO openbis_readonly;


--
-- Name: TABLE core_plugins; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE core_plugins TO openbis_readonly;


--
-- Name: SEQUENCE cvte_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE cvte_id_seq TO openbis_readonly;


--
-- Name: TABLE data_all; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE data_all TO openbis_readonly;


--
-- Name: TABLE data; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE data TO openbis_readonly;


--
-- Name: TABLE data_deleted; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE data_deleted TO openbis_readonly;


--
-- Name: SEQUENCE data_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE data_id_seq TO openbis_readonly;


--
-- Name: TABLE data_set_properties_history; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE data_set_properties_history TO openbis_readonly;


--
-- Name: TABLE data_set_relationships_history; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE data_set_relationships_history TO openbis_readonly;


--
-- Name: TABLE data_set_history_view; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE data_set_history_view TO openbis_readonly;


--
-- Name: TABLE data_set_properties; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE data_set_properties TO openbis_readonly;


--
-- Name: SEQUENCE data_set_property_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE data_set_property_id_seq TO openbis_readonly;


--
-- Name: SEQUENCE data_set_relationship_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE data_set_relationship_id_seq TO openbis_readonly;


--
-- Name: TABLE data_set_relationships_all; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE data_set_relationships_all TO openbis_readonly;


--
-- Name: TABLE data_set_relationships; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE data_set_relationships TO openbis_readonly;


--
-- Name: SEQUENCE data_set_relationships_history_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE data_set_relationships_history_id_seq TO openbis_readonly;


--
-- Name: SEQUENCE data_set_type_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE data_set_type_id_seq TO openbis_readonly;


--
-- Name: TABLE data_set_type_property_types; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE data_set_type_property_types TO openbis_readonly;


--
-- Name: TABLE data_set_types; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE data_set_types TO openbis_readonly;


--
-- Name: SEQUENCE data_store_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE data_store_id_seq TO openbis_readonly;


--
-- Name: TABLE data_store_service_data_set_types; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE data_store_service_data_set_types TO openbis_readonly;


--
-- Name: TABLE data_store_services; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE data_store_services TO openbis_readonly;


--
-- Name: SEQUENCE data_store_services_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE data_store_services_id_seq TO openbis_readonly;


--
-- Name: TABLE data_stores; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE data_stores TO openbis_readonly;


--
-- Name: SEQUENCE data_type_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE data_type_id_seq TO openbis_readonly;


--
-- Name: TABLE data_types; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE data_types TO openbis_readonly;


--
-- Name: SEQUENCE database_instance_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE database_instance_id_seq TO openbis_readonly;


--
-- Name: TABLE database_version_logs; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE database_version_logs TO openbis_readonly;


--
-- Name: SEQUENCE deletion_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE deletion_id_seq TO openbis_readonly;


--
-- Name: TABLE deletions; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE deletions TO openbis_readonly;


--
-- Name: SEQUENCE dstpt_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE dstpt_id_seq TO openbis_readonly;


--
-- Name: TABLE entity_operations_log; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE entity_operations_log TO openbis_readonly;


--
-- Name: SEQUENCE entity_operations_log_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE entity_operations_log_id_seq TO openbis_readonly;


--
-- Name: SEQUENCE etpt_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE etpt_id_seq TO openbis_readonly;


--
-- Name: SEQUENCE event_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE event_id_seq TO openbis_readonly;


--
-- Name: TABLE events; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE events TO openbis_readonly;


--
-- Name: SEQUENCE experiment_code_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE experiment_code_seq TO openbis_readonly;


--
-- Name: TABLE experiment_properties_history; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE experiment_properties_history TO openbis_readonly;


--
-- Name: TABLE experiment_relationships_history; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE experiment_relationships_history TO openbis_readonly;


--
-- Name: TABLE experiment_history_view; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE experiment_history_view TO openbis_readonly;


--
-- Name: SEQUENCE experiment_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE experiment_id_seq TO openbis_readonly;


--
-- Name: TABLE experiment_properties; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE experiment_properties TO openbis_readonly;


--
-- Name: SEQUENCE experiment_property_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE experiment_property_id_seq TO openbis_readonly;


--
-- Name: SEQUENCE experiment_relationships_history_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE experiment_relationships_history_id_seq TO openbis_readonly;


--
-- Name: SEQUENCE experiment_type_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE experiment_type_id_seq TO openbis_readonly;


--
-- Name: TABLE experiment_type_property_types; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE experiment_type_property_types TO openbis_readonly;


--
-- Name: TABLE experiment_types; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE experiment_types TO openbis_readonly;


--
-- Name: TABLE experiments_all; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE experiments_all TO openbis_readonly;


--
-- Name: TABLE experiments; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE experiments TO openbis_readonly;


--
-- Name: TABLE experiments_deleted; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE experiments_deleted TO openbis_readonly;


--
-- Name: TABLE external_data; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE external_data TO openbis_readonly;


--
-- Name: SEQUENCE external_data_management_system_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE external_data_management_system_id_seq TO openbis_readonly;


--
-- Name: TABLE external_data_management_systems; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE external_data_management_systems TO openbis_readonly;


--
-- Name: SEQUENCE file_format_type_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE file_format_type_id_seq TO openbis_readonly;


--
-- Name: TABLE file_format_types; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE file_format_types TO openbis_readonly;


--
-- Name: SEQUENCE filter_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE filter_id_seq TO openbis_readonly;


--
-- Name: TABLE filters; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE filters TO openbis_readonly;


--
-- Name: TABLE grid_custom_columns; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE grid_custom_columns TO openbis_readonly;


--
-- Name: SEQUENCE grid_custom_columns_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE grid_custom_columns_id_seq TO openbis_readonly;


--
-- Name: TABLE link_data; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE link_data TO openbis_readonly;


--
-- Name: SEQUENCE locator_type_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE locator_type_id_seq TO openbis_readonly;


--
-- Name: TABLE locator_types; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE locator_types TO openbis_readonly;


--
-- Name: SEQUENCE material_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE material_id_seq TO openbis_readonly;


--
-- Name: TABLE material_properties; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE material_properties TO openbis_readonly;


--
-- Name: TABLE material_properties_history; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE material_properties_history TO openbis_readonly;


--
-- Name: SEQUENCE material_property_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE material_property_id_seq TO openbis_readonly;


--
-- Name: SEQUENCE material_type_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE material_type_id_seq TO openbis_readonly;


--
-- Name: TABLE material_type_property_types; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE material_type_property_types TO openbis_readonly;


--
-- Name: TABLE material_types; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE material_types TO openbis_readonly;


--
-- Name: TABLE materials; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE materials TO openbis_readonly;


--
-- Name: SEQUENCE metaproject_assignment_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE metaproject_assignment_id_seq TO openbis_readonly;


--
-- Name: TABLE metaproject_assignments_all; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE metaproject_assignments_all TO openbis_readonly;


--
-- Name: TABLE metaproject_assignments; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE metaproject_assignments TO openbis_readonly;


--
-- Name: SEQUENCE metaproject_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE metaproject_id_seq TO openbis_readonly;


--
-- Name: TABLE metaprojects; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE metaprojects TO openbis_readonly;


--
-- Name: SEQUENCE mtpt_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE mtpt_id_seq TO openbis_readonly;


--
-- Name: TABLE operation_executions; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE operation_executions TO openbis_readonly;


--
-- Name: SEQUENCE perm_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE perm_id_seq TO openbis_readonly;


--
-- Name: SEQUENCE person_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE person_id_seq TO openbis_readonly;


--
-- Name: TABLE persons; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE persons TO openbis_readonly;


--
-- Name: TABLE post_registration_dataset_queue; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE post_registration_dataset_queue TO openbis_readonly;


--
-- Name: SEQUENCE post_registration_dataset_queue_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE post_registration_dataset_queue_id_seq TO openbis_readonly;


--
-- Name: SEQUENCE project_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE project_id_seq TO openbis_readonly;


--
-- Name: TABLE project_relationships_history; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE project_relationships_history TO openbis_readonly;


--
-- Name: SEQUENCE project_relationships_history_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE project_relationships_history_id_seq TO openbis_readonly;


--
-- Name: TABLE projects; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE projects TO openbis_readonly;


--
-- Name: SEQUENCE property_type_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE property_type_id_seq TO openbis_readonly;


--
-- Name: TABLE property_types; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE property_types TO openbis_readonly;


--
-- Name: TABLE queries; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE queries TO openbis_readonly;


--
-- Name: SEQUENCE query_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE query_id_seq TO openbis_readonly;


--
-- Name: SEQUENCE relationship_type_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE relationship_type_id_seq TO openbis_readonly;


--
-- Name: TABLE relationship_types; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE relationship_types TO openbis_readonly;


--
-- Name: SEQUENCE role_assignment_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE role_assignment_id_seq TO openbis_readonly;


--
-- Name: TABLE role_assignments; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE role_assignments TO openbis_readonly;


--
-- Name: SEQUENCE sample_code_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE sample_code_seq TO openbis_readonly;


--
-- Name: TABLE sample_properties_history; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE sample_properties_history TO openbis_readonly;


--
-- Name: TABLE sample_relationships_history; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE sample_relationships_history TO openbis_readonly;


--
-- Name: TABLE sample_history_view; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE sample_history_view TO openbis_readonly;


--
-- Name: SEQUENCE sample_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE sample_id_seq TO openbis_readonly;


--
-- Name: TABLE sample_properties; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE sample_properties TO openbis_readonly;


--
-- Name: SEQUENCE sample_property_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE sample_property_id_seq TO openbis_readonly;


--
-- Name: SEQUENCE sample_relationship_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE sample_relationship_id_seq TO openbis_readonly;


--
-- Name: TABLE sample_relationships_all; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE sample_relationships_all TO openbis_readonly;


--
-- Name: TABLE sample_relationships; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE sample_relationships TO openbis_readonly;


--
-- Name: SEQUENCE sample_relationships_history_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE sample_relationships_history_id_seq TO openbis_readonly;


--
-- Name: SEQUENCE sample_type_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE sample_type_id_seq TO openbis_readonly;


--
-- Name: TABLE sample_type_property_types; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE sample_type_property_types TO openbis_readonly;


--
-- Name: TABLE sample_types; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE sample_types TO openbis_readonly;


--
-- Name: TABLE samples_all; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE samples_all TO openbis_readonly;


--
-- Name: TABLE samples; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE samples TO openbis_readonly;


--
-- Name: TABLE samples_deleted; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE samples_deleted TO openbis_readonly;


--
-- Name: SEQUENCE script_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE script_id_seq TO openbis_readonly;


--
-- Name: TABLE scripts; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE scripts TO openbis_readonly;


--
-- Name: SEQUENCE space_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE space_id_seq TO openbis_readonly;


--
-- Name: TABLE spaces; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE spaces TO openbis_readonly;


--
-- Name: SEQUENCE stpt_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE stpt_id_seq TO openbis_readonly;


--
-- PostgreSQL database dump complete
--

