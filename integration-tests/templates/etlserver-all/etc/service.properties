# The root directory of the data store
storeroot-dir = ../data/main-store

# The check interval (in seconds)
check-interval = 2

# The URL of the LIMS server
server-url = https://localhost:8443/openbis/services/etl-openbis

# The username to use when contacting the LIMS server
username = etlserver

# The password to use when contacting the LIMS server
password = <change this>

# The code of the organization to process data sets
organization-code = 3V

# SMTP properties (must start with 'mail' to be considered). 
mail.smtp.host = mail.ethz.ch
# mail.from = etlserver@localhost

# Maximum number of retries if renaming failed.
# renaming.failure.max-retries = 12

# The number of milliseconds to wait before retrying to execute the renaming process.
# renaming.failure.millis-to-sleep = 5000

# Comma separated names of processing threads. Each thread should have configuration properties prefixed with its name
# E.g. 'code-extractor' property for the thread 'my-etl' should be specified as 'my-etl.code-extractor'
inputs=raw-data,image-analysis

# ---------------------------------------------------------------------------
# Raw data thread
# ---------------------------------------------------------------------------
# The directory to watch for incoming data.
raw-data.incoming-dir = ../data/out-raw

# The extractor plugin class to use for code extraction
raw-data.code-extractor = ch.systemsx.cisd.etlserver.CodeExtractor
# The separator that separates an experiment code from the data set one
raw-data.code-extractor.entity-separator = _
raw-data.code-extractor.number-of-prefixes = 2
# The separator that separates project code from experiment code
raw-data.code-extractor.project-separator = .
# ...........................................................................

# The extractor plugin class to use for type extraction
raw-data.type-extractor = ch.systemsx.cisd.etlserver.SimpleTypeExtractor
raw-data.type-extractor.file-format-type = TIFF
raw-data.type-extractor.locator-type = RELATIVE_LOCATION
raw-data.type-extractor.observable-type = IMAGE
raw-data.type-extractor.procedure-type = DATA_ACQUISITION

# The storage processor plugin (IStorageProcessor implementation)
# raw-data.storage-processor = ch.systemsx.cisd.etlserver.DefaultStorageProcessor
raw-data.storage-processor = ch.systemsx.cisd.etlserver.BDSStorageProcessor
raw-data.storage-processor.version = 1.0
raw-data.storage-processor.measurementEntityTypeDescription = screening plate
raw-data.storage-processor.processingType = RAW_DATA
raw-data.storage-processor.format = HCS_IMAGE V1.0
raw-data.storage-processor.number_of_channels = 2
raw-data.storage-processor.contains_original_data = true
raw-data.storage-processor.well_geometry = 3x3
raw-data.storage-processor.plate_geometry = 16x24
raw-data.storage-processor.file-extractor = ch.systemsx.cisd.etlserver.threev.HCSImageFileExtractor

# The factory of post processors (IPostProcessorFactory implementation)
raw-data.post-processor-factory = ch.systemsx.cisd.etlserver.DummyPostProcessorFactory

# ---------------------------------------------------------------------------
# image-analysis thread
# ---------------------------------------------------------------------------
image-analysis.incoming-dir = ../data/out-analys

image-analysis.code-extractor = ch.systemsx.cisd.etlserver.CodeExtractor
image-analysis.code-extractor.entity-separator = _
image-analysis.code-extractor.number-of-prefixes = 2
image-analysis.code-extractor.project-separator = .
# ...........................................................................

# The extractor class to use for type extraction
image-analysis.type-extractor = ch.systemsx.cisd.etlserver.SimpleTypeExtractor
image-analysis.type-extractor.file-format-type = 3VPROPRIETARY
image-analysis.type-extractor.locator-type = RELATIVE_LOCATION
image-analysis.type-extractor.observable-type = IMAGE_ANALYSIS_DATA
image-analysis.type-extractor.procedure-type = IMAGE_ANALYSIS

# The storage processor (IStorageProcessor implementation)
image-analysis.storage-processor = ch.systemsx.cisd.etlserver.DefaultStorageProcessor

# The factory of post processors (IPostProcessorFactory implementation)
image-analysis.post-processor-factory = ch.systemsx.cisd.etlserver.DummyPostProcessorFactory