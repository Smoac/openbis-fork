/*
 * Copyright ETH 2011 - 2023 ZÃ¼rich, Scientific IT Services
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package ch.systemsx.cisd.openbis.generic.server.jython.api.v1.impl;

import ch.systemsx.cisd.openbis.generic.server.jython.api.v1.ISampleType;

/**
 * @author Kaloyan Enimanev
 */
public class SampleType extends SampleTypeImmutable implements ISampleType
{
    SampleType(String code)
    {
        super(code);
        // set default values for new sample types
        setListable(true);
    }

    @Override
    public void setDescription(String description)
    {
        getSampleType().setDescription(description);
    }

    @Override
    public void setShowContainer(boolean showContainer)
    {
        getSampleType().setShowContainer(showContainer);
    }

    @Override
    public void setShowParents(boolean showParents)
    {
        getSampleType().setShowParents(showParents);
    }

    @Override
    public void setListable(boolean isListable)
    {
        getSampleType().setListable(isListable);
    }

    @Override
    public void setSubcodeUnique(boolean isSubcodeUnique)
    {
        getSampleType().setSubcodeUnique(isSubcodeUnique);
    }

    @Override
    public void setAutoGeneratedCode(boolean isAutoGeneratedCode)
    {
        getSampleType().setAutoGeneratedCode(isAutoGeneratedCode);
    }

    @Override
    public void setGeneratedCodePrefix(String generatedCodePrefix)
    {
        getSampleType().setGeneratedCodePrefix(generatedCodePrefix);
    }

    @Override
    public void setShowParentMetadata(boolean isShowParentMetadata)
    {
        getSampleType().setShowParentMetadata(isShowParentMetadata);
    }

    @Override
    public void setValidationScript(ScriptImmutable validationScript)
    {
        getSampleType().setValidationScript(validationScript.script);
    }

}
