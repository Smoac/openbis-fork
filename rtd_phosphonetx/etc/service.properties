# Unique code of this Data Store Server. Not more than 40 characters.
data-store-server-code = DSS1

# The root directory of the data store
storeroot-dir = targets/playground/data/store

# The directory where the command queue file is located; defaults to storeroot-dir 
commandqueue-dir =

# Port
port = 8889

# Session timeout in minutes
session-timeout = 720

# Path to the keystore
keystore.path = ../datastore_server/dist/etc/openBIS.keystore

# Password of the keystore
keystore.password = changeit

# Key password of the keystore
keystore.key-password = changeit

# The check interval (in seconds)
check-interval = 5

# The time-out for clean up work in the shutdown sequence (in seconds).
# Note that that the maximal time for the shutdown sequence to complete can be as large 
# as twice this time.
# Remark: On a network file system, it is not recommended to turn this value to something 
# lower than 180.
shutdown-timeout = 2

# If free disk space goes below value defined here, a notification email will be sent.
# Value must be specified in kilobytes (1048576 = 1024 * 1024 = 1GB). If no high water mark is
# specified or if value is negative, the system will not be watching.
highwater-mark = -1

# If a data set is successfully registered it sends out an email to the registrator. 
# If this property is not specified, no email is sent to the registrator. This property
# does not affect the mails which are sent, when the data set could not be registered.
notify-successful-registration = false

# The URL of the openBIS server
server-url = http://localhost:8888/openbis

# The username to use when contacting the openBIS server
username = etlserver

# The password to use when contacting the openBIS server
password = etlserver

# The base URL for Web client access.
download-url = https://localhost:8889

# SMTP properties (must start with 'mail' to be considered). 
mail.smtp.host = file://targets/email
mail.from = datastore_server@localhost

# ---------------- Timing parameters for file system operations on remote shares.

# Time (in seconds) to wait for any file system operation to finish. Operations exceeding this 
# timeout will be terminated. 
timeout = 60
# Number of times that a timed out operation will be tried again (0 means: every file system 
# operation will only ever be performed once).
max-retries = 11
# Time (in seconds) to wait after an operation has been timed out before re-trying.  
failure-interval = 10 

# The period of no write access that needs to pass before an incoming data item is considered 
# complete and ready to be processed (in seconds) [default: 300]. 
# Valid only when auto-detection method is used to determine if an incoming data are ready to be processed.
quiet-period = 10

# ---------------------------------------------------------------------------
# maintenance plugins configuration
# ---------------------------------------------------------------------------

# Comma separated names of maintenance plugins.  
# Each plugin should have configuration properties prefixed with its name.
# Mandatory properties for each <plugin> include: 
#   <plugin>.class - Fully qualified plugin class name
#   <plugin>.interval - The time between plugin executions (in seconds)
maintenance-plugins = data-set-clean-up

data-set-clean-up.class = ch.systemsx.cisd.etlserver.plugins.DataSetDeletionMaintenanceTask
data-set-clean-up.interval = 300
data-set-clean-up.database.basic-database-name = phosphonetx
data-set-clean-up.database.kind = dev

# ---------------------------------------------------------------------------

# Globally used separator character which separates entities in a data set file name 
data-set-file-name-entity-separator = _

# Specifies what should happen if an error occurs during dataset processing. 
# By default this flag is set to false and user has to modify the 'faulty paths file' 
# each time the faulty dataset should be processed again.
# Set this flag to true if the processing should be repeated after some time without manual intervention.
# Note that this can increase the server load.
# reprocess-faulty-datasets = false

reporting-plugins = demo-reporter

# Label of the plugin which will be shown for the users.
demo-reporter.label = Show Dataset Size
# Comma separated list of dataset type codes which can be handled by this plugin.
demo-reporter.dataset-types = PROT_RESULT
# Plugin class specification (together with the list of packages this class belongs to).
demo-reporter.class = ch.systemsx.cisd.openbis.dss.generic.server.plugins.demo.DemoReportingPlugin
# The property file. Its content will be passed as a parameter to the plugin.
demo-reporter.properties-file = 

# Comma separated names of processing plugins. Each plugin should have configuration properties prefixed with its name.
processing-plugins = copy-data-sets

# The configuration of the processing plugin is the same as the reporting plugins configuration. 
copy-data-sets.label = Data Set Copier
copy-data-sets.dataset-types = UNKNOWN
copy-data-sets.class = ch.systemsx.cisd.openbis.dss.generic.server.plugins.standard.DataSetCopier
#copy-data-sets.destination =  /Volumes/share-1-\$/user/cisd/felmer/phosphonetx/ 
copy-data-sets.destination =  vesuvio:tmp/LMS-1267 

data-set-validators = val1

val1.data-set-type = HCS_IMAGE_ANALYSIS_DATA
val1.path-patterns = **/*.tsv, **/*.txt
val1.columns = id, col1, col2
val1.id.header-pattern = ID|id
val1.id.mandatory = true
val1.id.order = 1
# value-type is either unique, any, string, numeric
val1.id.value-type = unique
val1.id.value-pattern = ^(CHEBI:[0-9]{4}_)*(CHEBI:[0-9]{4})$
val1.col1.header-pattern = Description
val1.col1.mandatory = true
val1.col2.header-pattern = .*
val1.col2.value-type = numeric
val1.col2.value-range = [0,Infinity)

# Comma separated names of processing threads. Each thread should have configuration properties prefixed with its name.
# E.g. 'code-extractor' property for the thread 'my-etl' should be specified as 'my-etl.code-extractor'
inputs=ms-injection,prot-result,cifex

# ---------------------------------------------------------------------------
# MS Injection thread configuration
# ---------------------------------------------------------------------------
ms-injection.incoming-dir = targets/playground/data/incoming-ms
ms-injection.incoming-data-completeness-condition = auto-detection
ms-injection.data-set-info-extractor = ch.systemsx.cisd.openbis.etlserver.phosphonetx.DataSetInfoExtractorForMSInjection
ms-injection.storage-processor = ch.systemsx.cisd.etlserver.DefaultStorageProcessor
ms-injection.type-extractor = ch.systemsx.cisd.etlserver.SimpleTypeExtractor

# ---------------------------------------------------------------------------
# 'prot-result' thread configuration
# ---------------------------------------------------------------------------
# The directory to watch for incoming data.
prot-result.incoming-dir = targets/playground/data/incoming

# Determines when the incoming data should be considered complete and ready to be processed.
# Allowed values: 
#  - auto-detection - when no write access will be detected for a specified 'quite-period'
#  - marker-file		- when an appropriate marker file for the data exists. 
# The default value is 'marker-file'.
prot-result.incoming-data-completeness-condition = auto-detection

# The group the samples extracted by this thread belong to. If commented out or empty, then samples
# are considered associated to a database instance (not group private). 
# prot-result.group-code = <change this>

# ---------------- Plugin properties
# The extractor class to use for code extraction
prot-result.data-set-info-extractor = ch.systemsx.cisd.openbis.etlserver.phosphonetx.DataSetInfoExtractorForSearchExperiment

# The extractor class to use for type extraction
prot-result.type-extractor = ch.systemsx.cisd.etlserver.SimpleTypeExtractor
prot-result.type-extractor.file-format-type = XML
prot-result.type-extractor.locator-type = RELATIVE_LOCATION
prot-result.type-extractor.data-set-type = PROT_RESULT
prot-result.type-extractor.is-measured = true

# The storage processor (IStorageProcessor implementation)
prot-result.storage-processor = ch.systemsx.cisd.openbis.etlserver.phosphonetx.StorageProcessorWithResultDataSetUploader
prot-result.storage-processor.processor = ch.systemsx.cisd.etlserver.DefaultStorageProcessor
prot-result.storage-processor.database.kind = dev
prot-result.storage-processor.database.owner = 
prot-result.storage-processor.database.password = 


# ---------------------------------------------------------------------------
# 'cifex' thread configuration
# ---------------------------------------------------------------------------
cifex.incoming-dir = targets/playground/data/incoming-cifex
cifex.incoming-data-completeness-condition = auto-detection
cifex.delete-unidentified = true
cifex.data-set-info-extractor = ch.systemsx.cisd.etlserver.cifex.CifexDataSetInfoExtractor
cifex.type-extractor = ch.systemsx.cisd.etlserver.cifex.CifexTypeExtractor
cifex.storage-processor = ch.systemsx.cisd.etlserver.CifexStorageProcessor
cifex.storage-processor.processor = ch.systemsx.cisd.etlserver.DefaultStorageProcessor
cifex.storage-processor.keep-file-regex = .*(?<!request\.properties)$ 
