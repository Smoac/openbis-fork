# ---------------------------------------------------------------------------
# Proteomics specific properties.
# ---------------------------------------------------------------------------

root-dir = $DSS_ROOT_DIR
storeroot-dir = ${root-dir}/store

host-address = https://$HOSTNAME
quiet-period = 10
check-interval = 5

# ---------------------------------------------------------------------------
# Data sources

data-sources = data-source
data-source.databaseEngineCode = postgresql
data-source.basicDatabaseName = proteomics
data-source.databaseKind = productive

# ---------------------------------------------------------------------------
# ETL processing threads (aka 'Drop Boxes')
# ---------------------------------------------------------------------------

inputs = ms-injection, ms-search

# ---------------------------------------------------------------------------
# 'ms-injection' drop box for spectra data
# ---------------------------------------------------------------------------
# The directory to watch for incoming data.
ms-injection.incoming-dir = ${root-dir}/incoming-ms-injection

# Determines when the incoming data should be considered complete and ready to be processed.
# Allowed values: 
#  - auto-detection - when no write access will be detected for a specified 'quite-period'
#  - marker-file		- when an appropriate marker file for the data exists. 
# The default value is 'marker-file'.
ms-injection.incoming-data-completeness-condition = auto-detection

ms-injection.data-set-info-extractor = ch.systemsx.cisd.openbis.etlserver.phosphonetx.DataSetInfoExtractorForMSInjection
ms-injection.storage-processor = ch.systemsx.cisd.etlserver.DefaultStorageProcessor
ms-injection.type-extractor = ch.systemsx.cisd.openbis.etlserver.phosphonetx.TypeExtractorForMSInjection

# ---------------------------------------------------------------------------
# 'ms-search' drop box for spectra data
# ---------------------------------------------------------------------------
# The directory to watch for incoming data.
ms-search.incoming-dir = ${root-dir}/incoming-ms-search

# Determines when the incoming data should be considered complete and ready to be processed.
# Allowed values: 
#  - auto-detection - when no write access will be detected for a specified 'quite-period'
#  - marker-file		- when an appropriate marker file for the data exists. 
# The default value is 'marker-file'.
ms-search.incoming-data-completeness-condition = auto-detection

ms-search.data-set-info-extractor = ch.systemsx.cisd.openbis.etlserver.phosphonetx.DataSetInfoExtractorForProteinResults
ms-search.data-set-info-extractor.separator = +

ms-search.type-extractor = ch.systemsx.cisd.etlserver.SimpleTypeExtractor
ms-search.type-extractor.file-format-type = XML
ms-search.type-extractor.locator-type = RELATIVE_LOCATION
ms-search.type-extractor.data-set-type = PROT_RESULT
ms-search.type-extractor.is-measured = false

ms-search.storage-processor = ch.systemsx.cisd.openbis.etlserver.phosphonetx.StorageProcessorWithResultDataSetUploader
ms-search.storage-processor.processor = ch.systemsx.cisd.etlserver.DefaultStorageProcessor
ms-search.storage-processor.assuming-extended-prot-xml = false
ms-search.storage-processor.database.basic-name = ${data-source.basicDatabaseName}
ms-search.storage-processor.database.kind = ${data-source.databaseKind}
ms-search.storage-processor.database.owner = 
ms-search.storage-processor.database.password = 

# ---------------------------------------------------------------------------
# maintenance plugins configuration
# ---------------------------------------------------------------------------
# Comma separated names of maintenance plugins.  
# Each plugin should have configuration properties prefixed with its name.
# Mandatory properties for each <plugin> include: 
#   <plugin>.class - Fully qualified plugin class name
#   <plugin>.interval - The time between plugin executions (in seconds)
# Optional properties for each <plugin> include:
#   <plugin>.start - Time of the first execution (HH:mm)
#   <plugin>.execute-only-once - If true the task will be executed exactly once, 
#                                interval will be ignored. By default set to false.

maintenance-plugins = data-set-clean-up

data-set-clean-up.class = ch.systemsx.cisd.etlserver.plugins.DeleteFromExternalDBMaintenanceTask
data-set-clean-up.interval = 300
data-set-clean-up.data-source = data-source
data-set-clean-up.data-set-table-name = data_sets 



