<project name="rtd_phosphonetx" default="ci" basedir="..">
	<import file="../../openbis/build/build.xml" />
	<import file="../../datastore_server/build/build.xml" />
	<project-classpath name="ecp" classes="${classes}" />

	<property name="original.dist" value="dist" />
	<property name="mainfolder" value="rtd_phosphonetx" />
	<property name="variant" value="-proteomics" />
	<property name="api.prefix" value="openBIS-proteomics-API" />
	<property name="api.jar" value="${dist}/openbis-proteomics-api.jar" />
	<property name="api.doc" value="${dist}/${api.prefix}/doc" />
	<property name="api.doc.zip" value="${dist}/doc.zip" />
	<property name="api.src.zip" value="${dist}/src.zip" />
	<property name="proteomics-build.info.filename" value="BUILD-proteomics.INFO" />
	<property name="proteomics.classes" value="../rtd_phosphonetx/${classes}"/>
	<property name="proteomics-build.info.file" value="${proteomics.classes}/BUILD-proteomics.INFO" />

	<target name="compile" depends="build-common.compile, clean" />

	<target name="dss-plugin-jar" depends="compile">
		<mkdir dir="${dist}" />
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<antcall target="make-dss-plugin-jar"/>
	</target>
	
	<target name="make-dss-plugin-jar" depends="calculate-proteomics-core-plugins-checksum">
		<echo file="${proteomics-build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<jar destfile="${plugin-jar.file}">
			<fileset dir="${proteomics.classes}">
				<include name="ch/systemsx/cisd/openbis/dss/**/*.class" />
				<include name="ch/systemsx/cisd/openbis/etlserver/proteomics/**/*.class" />
				<include name="ch/systemsx/cisd/openbis/plugin/proteomics/shared/**/*.class" />
				<include name="${proteomics-build.info.filename}" />
			</fileset>
			<fileset dir="../rtd_phosphonetx/source">
				<include name="**/*.sql" />
			</fileset>	
			<fileset dir="${dist}">
				<include name="proteomics-${checksum.file.name}"/>
			</fileset>
			<manifest>
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</jar>
	</target>
	
	<target name="calculate-proteomics-core-plugins-checksum">
  	<antcall target="compute-core-plugins-checksums">
  		<param name="technology" value="proteomics"/>
  		<param name="path-prefix" value="../rtd_phosphonetx"/>
  	</antcall>
	</target>
	
	<!--
        // Task for creating distributions
        -->
	<target name="dist" depends="openbis.make-dist, dss-plugin-jar, datastore_server.make-plugin-dist" />

	<!--
        // Task for continuous integration server.
        -->
	<target name="ci" depends="build-common.ci, dist, check-dependencies" />

  <target name="core-plugins-dist" depends="openbis.core-plugins-dist">
    <antcall target="copy-core-plugins">
      <param name="project-path" value="../rtd_phosphonetx/"/>
      <param name="plugin-kind" value="as"/>
    </antcall>
  </target>

  <!-- Tasks for Proteomics API -->
	
  <target name="jar" depends="openbis.jar">
    <jar destfile="${api.jar}">
      <zipfileset src="${jar.file}">
        <include name="ch/systemsx/cisd/common/exceptions/**/*.class" />
        <include name="ch/systemsx/cisd/common/spring/HttpInvokerUtils.class" />
        <include name="ch/systemsx/cisd/common/api/**/*.class" />
        <exclude name="ch/systemsx/cisd/common/api/server/**/*.class" />
        <include name="ch/systemsx/cisd/openbis/plugin/proteomics/**/api/**/*.class" />
        <exclude name="ch/systemsx/cisd/openbis/**/server/api/**/*.class" />
        <include name="ch/systemsx/cisd/openbis/generic/shared/api/**/*.class" />
        <include name="ch/systemsx/cisd/openbis/plugin/proteomics/*BuildAndEnvironmentInfo.class" />
        <include name="*.INFO" />
      </zipfileset>
    </jar>  	
  </target>
  
  <patternset id="proteomics-api-sources">
    <include name="ch/systemsx/cisd/openbis/plugin/proteomics/client/api/v1/**" />
    <include name="ch/systemsx/cisd/openbis/plugin/proteomics/shared/api/v1/**" />
  </patternset>
  
  <target name="make-api-doc">
    <javadoc destdir="${api.doc}" access="public" author="false" version="false" classpath="${ecp}">
      <packageset dir="../openbis_api/${sources}">
        <patternset refid="openbis_api-api-sources"/>
      </packageset>
      <packageset dir="../common/${sources}">
        <patternset refid="common-api-sources"/>
      </packageset>
      <packageset dir="../openbis-common/${sources}">
        <patternset refid="openbis-common-api-sources"/>
      </packageset>
      <packageset dir="../rtd_phosphonetx/${sources}">
        <patternset refid="proteomics-api-sources"/>
      </packageset>
    </javadoc>
    <zip destfile="${api.doc.zip}">
      <zipfileset dir="${api.doc}" includes="**" />
    </zip>
    <delete dir="${dist}/${api.prefix}" />
    <zip destfile="${api.src.zip}">
      <fileset dir="../openbis_api/${sources}">
        <patternset refid="openbis_api-api-sources"/>
      </fileset>
      <fileset dir="../common/${sources}">
        <patternset refid="common-api-sources"/>
      </fileset>
      <fileset dir="../openbis-common/${sources}">
        <patternset refid="openbis-common-api-sources"/>
      </fileset>
      <fileset dir="../rtd_phosphonetx/${sources}">
        <patternset refid="proteomics-api-sources"/>
      </fileset>
    </zip>
  </target>
	
  <target name="make-api-dist" depends="jar, make-api-doc" 
  	description="Makes a distribution file for Proteomics API.">
    <zip destfile="${dist}/${api.prefix}-${version.number}-r${revision.number}.zip">
      <zipfileset prefix="${api.prefix}" file="${api.jar}"/>
      <zipfileset prefix="${api.prefix}" file="${api.doc.zip}"/>
      <zipfileset prefix="${api.prefix}" file="${api.src.zip}"/>
      <zipfileset prefix="${api.prefix}" file="${lib}/cisd-base/cisd-base.jar"/>
      <zipfileset prefix="${api.prefix}" file="${lib}/commons-codec/commons-codec.jar"/>
      <zipfileset prefix="${api.prefix}" file="${lib}/commons-httpclient/commons-httpclient.jar"/>
      <zipfileset prefix="${api.prefix}" file="${lib}/commons-logging/commons-logging.jar"/>
      <zipfileset prefix="${api.prefix}" file="${lib}/log4j/log4j.jar"/>
      <zipfileset prefix="${api.prefix}" file="${lib}/spring/spring.jar"/>
      <zipfileset prefix="${api.prefix}" file="${lib}/spring/third-party/stream-supporting-httpinvoker.jar"/>
    </zip>
  	<delete file="${api.jar}"/>
  	<delete file="${api.doc.zip}"/>
  	<delete file="${api.src.zip}"/>
  </target>

	
	<!--
        // Compiles the javascript using GWT compiler.
        -->
	<target name="compile-javascript"
	        depends="prepare-web-client"
	        description="Compiles the javascript using GWT compiler.">
		<antcall target="compile-gwt-module">
			<param name="gwt.module.name" value="ch.systemsx.cisd.openbis.plugin.proteomics.OpenBIS" />
		</antcall>
	</target>

	<!--
        // Creates WAR file.
        -->
	<target name="war" depends="openbis.war, make-api-dist" description="Creates project war file.">
		<war warfile="${webapp.file}" update="true">
			<classes dir="../rtd_phosphonetx/source/sql">
				<include name="**/*.sql" />
			</classes>
			<classes dir="../openbis/${sources}">
				<include name="**/*.xml" />
				<exclude name="**/*.gwt.xml" />
        <include name="**/*.xsd" />
			</classes>
			<classes dir="../rtd_phosphonetx/${sources}">
				<include name="**/*.xml" />
				<exclude name="**/*.gwt.xml" />
        <include name="**/*.xsd" />
			</classes>
			<lib dir="${lib}/jaxb">
				<include name="*.jar" />
			</lib>
			<lib dir="${lib}/eodsql">
				<include name="*.jar" />
			</lib>
		</war>
	</target>

	<target name="prepare-and-run-module-test"
	        depends="prepare-gwt, module-test"
	        description="Prepare, compile, and run the module test mode">
	</target>

	<target name="compile-and-run-openbis-proteomics-from-eclipse"
	        description="Compile and run the proteomics openbis from Eclipse">
		<antcall target="compile-module-test">
			<param name="module-test.path" value="openbis-test-proteomics" />
			<param name="module-test.module"
			       value="ch.systemsx.cisd.openbis.plugin.proteomics.OpenBIS" />
		</antcall>
		<antcall target="run-openbis-proteomics-from-eclipse" />
	</target>

	<target name="run-openbis-proteomics-from-eclipse"
	        description="run the proteomics openbis from Eclipse">
		<antcall target="run-module-test">
			<param name="module-test.path" value="openbis-test-proteomics" />
			<param name="module-test.module"
			       value="ch.systemsx.cisd.openbis.plugin.proteomics.OpenBIS" />
		</antcall>
	</target>

	<target name="check-dictionary-syntax"
	        description="Parse *-dictionary.js and check that the syntax is correct.">
		<antcall target="check-javascript-syntax">
			<param name="javascript-file"
			       value="../rtd_phosphonetx/${sources}/ch/systemsx/cisd/openbis/plugin/proteomics/client/web/public/proteomics-dictionary.js" />
		</antcall>
	</target>
	
  <target name="api-doc">
    <javadoc 
    	destdir="targets/docs/api" 
    	access="public" 
    	author="true" 
    	version="true" 
      classpath="${ecp}">
      <fileset dir="../openbis/source/java">
      	<include name="ch/systemsx/cisd/openbis/generic/shared/IServer.java" />
      </fileset>
      <fileset dir="${sources}">
        <include name="ch/systemsx/cisd/openbis/generic/shared/basic/dto/DatastoreServiceDescription.java" />
      	<include name="ch/systemsx/cisd/openbis/plugin/proteomics/shared/IRawDataService.java" />
      </fileset>
    </javadoc>
  </target>
</project>