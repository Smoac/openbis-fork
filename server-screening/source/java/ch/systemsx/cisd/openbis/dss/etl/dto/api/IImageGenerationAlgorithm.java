/*
 * Copyright ETH 2014 - 2023 ZÃ¼rich, Scientific IT Services
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package ch.systemsx.cisd.openbis.dss.etl.dto.api;

import java.awt.image.BufferedImage;
import java.util.List;

import ch.systemsx.cisd.etlserver.registrator.api.v2.IDataSet;
import ch.systemsx.cisd.openbis.common.io.hierarchical_content.api.IHierarchicalContent;
import ch.systemsx.cisd.openbis.dss.etl.IImageProvider;
import ch.systemsx.cisd.openbis.dss.etl.dto.api.impl.ImageDataSetInformation;

/**
 * Algorithm for creating a representative thumbnails.
 * 
 * @author Antti Luomi
 */
public interface IImageGenerationAlgorithm
{
    /**
     * Creates thumbnails for the specified data set info.
     */
    public List<BufferedImage> generateImages(ImageDataSetInformation information,
            List<IDataSet> thumbnailDatasets, IImageProvider imageProvider);

    /**
     * Returns the code of the data set to be registered containing these representative thumbnails.
     */
    public String getDataSetTypeCode();

    /**
     * Returns the thumbnail file name for the specified index. The index specifies the corresponding image returned by
     * {@link #generateImages(ImageDataSetInformation, List, IImageProvider)}. Note, all file names generated by this method have to be different.
     */
    public String getImageFileName(int index);

    /**
     * Sets content which is the source of images. If this isn't set {@link ImageDataSetInformation#getIncomingDirectory()} is used. 
     */
    public void setContent(IHierarchicalContent content);
}
