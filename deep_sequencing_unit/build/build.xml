<project name="deep_sequencing_unit" default="ci" basedir="..">
	<import file="../../datastore_server/build/build.xml" />
	<import file="../../openbis/build/build.xml" />
	<project-classpath name="ecp" classes="${classes}" />

	<property name="original.dist" value="dist" />
	<property name="mainfolder" value="deep_sequencing_unit" />
	<property name="variant" value="-dsu" />

	<property name="dist.tracking" value="${dist}/tracking" />
	<property name="dist.tracking.lib" value="${dist.tracking}/lib" />
	<property name="tracking-jar.file" value="${dist.tracking.lib}/openbis-tracking-dsu-client.jar" />
	<property name="tracking.original.dist" value="tracking/dist" />

	<property name="dist.createsamplesheet" value="${dist}/createsamplesheet" />
	<property name="dist.createsamplesheet.lib" value="${dist.createsamplesheet}/lib" />
	<property name="createsamplesheet.original.dist" value="createsamplesheet/dist" />
	
	<property name="dist.createsamplesheet-nov" value="${dist}/createsamplesheet" />
	<property name="dist.createsamplesheet-nov.lib" value="${dist.createsamplesheet}/lib" />
	<property name="createsamplesheet-nov.original.dist" value="createsamplesheet/dist" />

	<property name="dist.createInvoices" value="${dist}/createInvoices" />
	<property name="dist.createInvoices.lib" value="${dist.createInvoices}/lib" />
	<property name="createInvoices.original.dist" value="createInvoices/dist" />
	
	<target name="compile" depends="build-common.compile, clean" />

	<target name="run-tests">
		<antcall target="build-common.run-tests">
			<param name="test.suite" value="tests.xml" />
		</antcall>
	</target>

	<target name="tracking-jar" depends="compile">
		<mkdir dir="${dist.tracking.lib}" />
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<recursive-jar destfile="${tracking-jar.file}">
			<fileset dir="${classes}">
				<include name="**/*.class" />
				<include name="${build.info.filename}" />
			</fileset>
			<manifest>
				<attribute name="Main-Class" value="ch.ethz.bsse.cisd.dsu.tracking.main.TrackingClient" />
				<attribute name="Class-Path" value="cisd-base.jar log4j.jar activation.jar mail.jar gwt-isserializable.jar
																						commons-io.jar commons-lang.jar commons-logging.jar commons-httpclient.jar commons-codec.jar 
																						spring.jar stream-supporting-httpinvoker.jar" />
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number" value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</recursive-jar>
		<jar update="true" destfile="${tracking-jar.file}">
			<fileset dir="../${ant.project.name}/${classes}"
			         includes="ch/systemsx/cisd/openbis/dss/BuildAndEnvironmentInfo.class" />
		</jar>
	</target>

	<target name="tracking-dist" depends="tracking-jar">
		<copy file="${tracking-jar.file}" todir="${dist.tracking.lib}" />
		<copy file="${lib}/cisd-base/cisd-base.jar" todir="${dist.tracking.lib}" />
		<copy file="${lib}/activation/activation.jar" todir="${dist.tracking.lib}" />
		<copy file="${lib}/mail/mail.jar" todir="${dist.tracking.lib}" />
		<copy file="${lib}/log4j/log4j.jar" todir="${dist.tracking.lib}" />
		<copy file="${lib}/gwt2.4/gwt-isserializable.jar" todir="${dist.tracking.lib}" />
		<copy file="${lib}/commons-logging/commons-logging.jar" todir="${dist.tracking.lib}" />
		<copy file="${lib}/commons-io/commons-io.jar" todir="${dist.tracking.lib}" />
		<copy file="${lib}/commons-lang/commons-lang.jar" todir="${dist.tracking.lib}" />
		<copy file="${lib}/commons-httpclient/commons-httpclient.jar" todir="${dist.tracking.lib}" />
		<copy file="${lib}/commons-codec/commons-codec.jar" todir="${dist.tracking.lib}" />
		<copy file="${lib}/spring/spring.jar" todir="${dist.tracking.lib}" />
		<copy file="${lib}/spring/third-party/stream-supporting-httpinvoker.jar" todir="${dist.tracking.lib}" />

		<property name="tracking-dist.file" value="openbis-tracking-client-Illumina-NGS-${version.number}-r${revision.number}.zip" />
		<zip basedir="${dist.tracking}" destfile="${dist}/${tracking-dist.file}" excludes="*.zip *.jar">
			<zipfileset dir="${tracking.original.dist}" excludes="**/*.sh"/>
			<zipfileset file="${tracking.original.dist}/tracking.sh" filemode="755" />
		</zip>
	  <delete dir="${dist.tracking}" />
	</target>

	<target name="createsamplesheet-dist">
		
		<copy file="source/Jython/createSampleSheet.py" todir="${dist.createsamplesheet}" />
	
		<copy file="${lib}/commons-codec/commons-codec.jar" todir="${dist.createsamplesheet.lib}" />
		<copy file="${lib}/commons-httpclient/commons-httpclient.jar" todir="${dist.createsamplesheet.lib}" />
		<copy file="${lib}/commons-logging/commons-logging.jar" todir="${dist.createsamplesheet.lib}" />
		<copy file="${lib}/openbis-apis/dss/dss_client.jar" todir="${dist.createsamplesheet.lib}" />
		<copy file="${lib}/jython/jython.jar" todir="${dist.createsamplesheet.lib}" />
		<copy file="${lib}/spring/spring.jar" todir="${dist.createsamplesheet.lib}" />
		<copy file="${lib}/spring/third-party/stream-supporting-httpinvoker.jar" todir="${dist.createsamplesheet.lib}" />
		
		<property name="createsamplesheet-dist.file" value="openbis-createSampleSheet-Illimuna-NGS-${version.number}-r${revision.number}.zip" />
				<zip basedir="${dist.createsamplesheet}" destfile="${dist}/${createsamplesheet-dist.file}" excludes="*.zip *.jar">
					<zipfileset dir="${createsamplesheet.original.dist}" excludes="**/*.sh **/*nov.properties"/>
					<zipfileset file="${createsamplesheet.original.dist}/createSampleSheet.sh" filemode="755" />
				</zip>
			  <delete dir="${dist.createsamplesheet}" />
		
	</target>
	
	<target name="createsamplesheet-nov-dist">
		
		<copy file="source/Jython/createSampleSheet_nov.py" todir="${dist.createsamplesheet-nov}" />
	
		<copy file="${lib}/commons-codec/commons-codec.jar" todir="${dist.createsamplesheet-nov.lib}" />
		<copy file="${lib}/commons-httpclient/commons-httpclient.jar" todir="${dist.createsamplesheet-nov.lib}" />
		<copy file="${lib}/commons-logging/commons-logging.jar" todir="${dist.createsamplesheet-nov.lib}" />
		<copy file="${lib}/openbis-apis/dss/dss_client.jar" todir="${dist.createsamplesheet-nov.lib}" />
		<copy file="${lib}/jython/jython.jar" todir="${dist.createsamplesheet-nov.lib}" />
		<copy file="${lib}/spring/spring.jar" todir="${dist.createsamplesheet-nov.lib}" />
		<copy file="${lib}/spring/third-party/stream-supporting-httpinvoker.jar" todir="${dist.createsamplesheet-nov.lib}" />
		
		<property name="createsamplesheet-nov-dist.file" value="openbis-createSampleSheet-Illimuna-NGS-NOV-${version.number}-r${revision.number}.zip" />
				<zip basedir="${dist.createsamplesheet-nov}" destfile="${dist}/${createsamplesheet-nov-dist.file}" excludes="*.zip *.jar">
					<zipfileset dir="${createsamplesheet-nov.original.dist}" excludes="**/*.sh **/createSampleSheet.properties"/>
					<zipfileset file="${createsamplesheet-nov.original.dist}/createSampleSheet_nov.sh" filemode="755" />
				</zip>
			  <delete dir="${dist.createsamplesheet}" />
	</target>

	<target name="createInvoices-dist">
		<copy file="source/Jython/create_QGF_Invoices_simplified.py" todir="${dist.createInvoices}" />
	
		<copy file="${lib}/commons-codec/commons-codec.jar" todir="${dist.createInvoices.lib}" />
		<copy file="${lib}/commons-httpclient/commons-httpclient.jar" todir="${dist.createInvoices.lib}" />
		<copy file="${lib}/commons-logging/commons-logging.jar" todir="${dist.createInvoices.lib}" />
		<copy file="${lib}/openbis-apis/dss/dss_client.jar" todir="${dist.createInvoices.lib}" />
		<copy file="${lib}/jython/jython.jar" todir="${dist.createInvoices.lib}" />
		<copy file="${lib}/spring/spring.jar" todir="${dist.createInvoices.lib}" />
		<copy file="${lib}/spring/third-party/stream-supporting-httpinvoker.jar" todir="${dist.createInvoices.lib}" />
		<copy file="${lib}/poi/poi.jar" todir="${dist.createInvoices.lib}" />
		<copy file="${lib}/poi/poi-ooxml.jar" todir="${dist.createInvoices.lib}" />
		<copy file="${lib}/poi/poi-ooxml-schemas.jar" todir="${dist.createInvoices.lib}" />
		<copy file="${lib}/poi/ooxml-lib/xmlbeans-2.3.0.jar" todir="${dist.createInvoices.lib}" />
		<copy file="${lib}/poi/ooxml-lib/dom4j-1.6.1.jar" todir="${dist.createInvoices.lib}" />
		<copy file="${lib}/poi/ooxml-lib/geronimo-stax-api_1.0_spec-1.0.jar" todir="${dist.createInvoices.lib}" />
		<copy file="${lib}/openbis-apis/query/openbis-query-api.jar" todir="${dist.createInvoices.lib}" />
		
		<property name="createInvoices.dist.file" value="openbis-createInvoices-${version.number}-r${revision.number}.zip" />
				<zip basedir="${dist.createInvoices}" destfile="${dist}/${createInvoices.dist.file}" excludes="*.zip *.jar">
					<zipfileset dir="${createInvoices.original.dist}" excludes="**/*.sh" />
					<zipfileset file="${createInvoices.original.dist}/createInvoices.sh" filemode="755" />

				</zip>
			  <delete dir="${dist.createInvoices}" />
	</target>
	
	
	<target name="jar" depends="compile">
		<mkdir dir="${dist}" />
		<build-info revision="revision.number" version="version.number" clean="clean.flag" />
    <antcall target="make-dss-plugin-jar"/>
  </target>
  
  <target name="make-dss-plugin-jar">
		<echo file="${build.info.file}">${version.number}:${revision.number}:${clean.flag}</echo>
		<jar destfile="${plugin-jar.file}">
			<fileset dir="../deep_sequencing_unit/${classes}">
				<include name="ch/ethz/bsse/cisd/dsu/**/*.class" />
				<include name="ch/systemsx/cisd.openbis/dss/BuildAndEnvironmentInfo.class" />
				<include name="${build.info.filename}" />
			</fileset>
			<fileset dir="source">
				<include name="**/*.sql" />
			</fileset>	
			<manifest>
				<attribute name="Version" value="${version.number}" />
				<attribute name="Build-Number"
				           value="${version.number} (r${revision.number},${clean.flag})" />
			</manifest>
		</jar>
	</target>
	
	<!--
        // Task for creating distributions
        -->
	<target name="dist" depends="jar, datastore_server.make-plugin-dist, tracking-dist, createsamplesheet-dist, createsamplesheet-nov-dist,createInvoices-dist" />

	<!--
        // Task for continuous integration server.
        -->
	<target name="ci" depends="build-common.ci, dist, check-dependencies" />


</project>